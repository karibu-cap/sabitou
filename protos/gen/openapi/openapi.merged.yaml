openapi: 3.1.0
info:
  title: transaction.v1
paths:
  /business.v1.BusinessService/AssociateUserToBusiness:
    post:
      tags:
        - business.v1.BusinessService
      summary: Associate user to business.
      description: Associate user to business.
      operationId: business.v1.BusinessService.AssociateUserToBusiness
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.AssociateUserToBusinessRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.AssociateUserToBusinessResponse'
  /business.v1.BusinessService/ChangeBusinessCurrency:
    post:
      tags:
        - business.v1.BusinessService
      summary: Changes the business currency
      description: Changes the business currency
      operationId: business.v1.BusinessService.ChangeBusinessCurrency
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.ChangeBusinessCurrencyRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.ChangeBusinessCurrencyResponse'
  /business.v1.BusinessService/CreateBusiness:
    post:
      tags:
        - business.v1.BusinessService
      summary: Create a new business.
      description: Create a new business.
      operationId: business.v1.BusinessService.CreateBusiness
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.CreateBusinessRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.CreateBusinessResponse'
  /business.v1.BusinessService/CreateUserToBusiness:
    post:
      tags:
        - business.v1.BusinessService
      summary: Add user to business or invite user to business.
      description: Add user to business or invite user to business.
      operationId: business.v1.BusinessService.CreateUserToBusiness
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.CreateUserToBusinessRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.CreateUserToBusinessResponse'
  /business.v1.BusinessService/GetBusinessDetails:
    post:
      tags:
        - business.v1.BusinessService
      summary: Get a business by id.
      description: Get a business by id.
      operationId: business.v1.BusinessService.GetBusinessDetails
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.GetBusinessDetailsRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.GetBusinessDetailsResponse'
  /business.v1.BusinessService/GetBusinessMember:
    post:
      tags:
        - business.v1.BusinessService
      summary: Get a specific business member.
      description: Get a specific business member.
      operationId: business.v1.BusinessService.GetBusinessMember
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.GetBusinessMemberRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.GetBusinessMemberResponse'
  /business.v1.BusinessService/GetBusinessMembers:
    post:
      tags:
        - business.v1.BusinessService
      summary: Get the users of the business.
      description: Get the users of the business.
      operationId: business.v1.BusinessService.GetBusinessMembers
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.GetBusinessMembersRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.GetBusinessMembersResponse'
  /business.v1.BusinessService/GetMyBusinesses:
    post:
      tags:
        - business.v1.BusinessService
      summary: Get all businesses of the current user.
      description: Get all businesses of the current user.
      operationId: business.v1.BusinessService.GetMyBusinesses
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.GetMyBusinessesRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.GetMyBusinessesResponse'
  /business.v1.BusinessService/RemoveUserFromBusiness:
    post:
      tags:
        - business.v1.BusinessService
      summary: 'Remove user from business.  If the user has been created by the business, the user will be deleted.  NOTE: The authenticated user need to have the permission to remove the  user.'
      description: |-
        Remove user from business.
         If the user has been created by the business, the user will be deleted.
         NOTE: The authenticated user need to have the permission to remove the
         user.
      operationId: business.v1.BusinessService.RemoveUserFromBusiness
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.RemoveUserFromBusinessRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.RemoveUserFromBusinessResponse'
  /business.v1.BusinessService/RequestDeleteBusiness:
    post:
      tags:
        - business.v1.BusinessService
      summary: Request the deletion of the business. This request doesn't delete the business directly instead it put the business in inactive state and remove all business members.
      description: Request the deletion of the business. This request doesn't delete the business directly instead it put the business in inactive state and remove all business members.
      operationId: business.v1.BusinessService.RequestDeleteBusiness
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.RequestDeleteBusinessRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.RequestDeleteBusinessResponse'
  /business.v1.BusinessService/StreamBusinessMembers: {}
  /business.v1.BusinessService/UpdateBusiness:
    post:
      tags:
        - business.v1.BusinessService
      summary: Update a business.
      description: Update a business.
      operationId: business.v1.BusinessService.UpdateBusiness
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.UpdateBusinessRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.UpdateBusinessResponse'
  /business.v1.BusinessService/UpdateBusinessMember:
    post:
      tags:
        - business.v1.BusinessService
      summary: Update a business member (role, status, permissions).
      description: Update a business member (role, status, permissions).
      operationId: business.v1.BusinessService.UpdateBusinessMember
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.UpdateBusinessMemberRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.UpdateBusinessMemberResponse'
  /business.v1.BusinessClientService/CreateBusinessClient:
    post:
      tags:
        - business.v1.BusinessClientService
      summary: Creates a new client.
      description: Creates a new client.
      operationId: business.v1.BusinessClientService.CreateBusinessClient
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.CreateBusinessClientRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.CreateBusinessClientResponse'
  /business.v1.BusinessClientService/DeleteBusinessClient:
    post:
      tags:
        - business.v1.BusinessClientService
      summary: Deletes a client.
      description: Deletes a client.
      operationId: business.v1.BusinessClientService.DeleteBusinessClient
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.DeleteBusinessClientRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.DeleteBusinessClientResponse'
  /business.v1.BusinessClientService/GetBusinessClient:
    post:
      tags:
        - business.v1.BusinessClientService
      summary: Gets a client by id.
      description: Gets a client by id.
      operationId: business.v1.BusinessClientService.GetBusinessClient
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.GetBusinessClientRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.GetBusinessClientResponse'
  /business.v1.BusinessClientService/UpdateBusinessClient:
    post:
      tags:
        - business.v1.BusinessClientService
      summary: Updates a client.  Note:Only the fields that are set will be updated.
      description: |-
        Updates a client.
         Note:Only the fields that are set will be updated.
      operationId: business.v1.BusinessClientService.UpdateBusinessClient
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.UpdateBusinessClientRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.UpdateBusinessClientResponse'
  /business.v1.SupplierService/CreateSupplier:
    post:
      tags:
        - business.v1.SupplierService
      summary: Creates a new supplier.
      description: Creates a new supplier.
      operationId: business.v1.SupplierService.CreateSupplier
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.CreateSupplierRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.CreateSupplierResponse'
  /business.v1.SupplierService/DeleteSupplier:
    post:
      tags:
        - business.v1.SupplierService
      summary: Deletes a supplier.
      description: Deletes a supplier.
      operationId: business.v1.SupplierService.DeleteSupplier
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.DeleteSupplierRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.DeleteSupplierResponse'
  /business.v1.SupplierService/GetBusinessSuppliers:
    post:
      tags:
        - business.v1.SupplierService
      summary: Gets all suppliers of a business.
      description: Gets all suppliers of a business.
      operationId: business.v1.SupplierService.GetBusinessSuppliers
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.GetBusinessSuppliersRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.GetBusinessSuppliersResponse'
  /business.v1.SupplierService/GetSupplier:
    post:
      tags:
        - business.v1.SupplierService
      summary: Gets a supplier by id.
      description: Gets a supplier by id.
      operationId: business.v1.SupplierService.GetSupplier
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.GetSupplierRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.GetSupplierResponse'
  /business.v1.SupplierService/StreamBusinessSuppliers: {}
  /business.v1.SupplierService/UpdateSupplier:
    post:
      tags:
        - business.v1.SupplierService
      summary: Updates a supplier.  Note:Only the fields that are set will be updated. array fiels like external_links will be replaced.
      description: |-
        Updates a supplier.
         Note:Only the fields that are set will be updated. array fiels like external_links will be replaced.
      operationId: business.v1.SupplierService.UpdateSupplier
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.UpdateSupplierRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.UpdateSupplierResponse'
  /identity.v1.AuthService/Login:
    post:
      tags:
        - identity.v1.AuthService
      summary: Authenticate the user with the given credentials.
      description: Authenticate the user with the given credentials.
      operationId: identity.v1.AuthService.Login
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identity.v1.LoginRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity.v1.LoginResponse'
  /identity.v1.AuthService/Register:
    post:
      tags:
        - identity.v1.AuthService
      summary: Create a user without a password.
      description: Create a user without a password.
      operationId: identity.v1.AuthService.Register
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identity.v1.RegisterRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity.v1.RegisterResponse'
  /identity.v1.AuthService/RequestPasswordReset:
    post:
      tags:
        - identity.v1.AuthService
      summary: Request the password reset of the user.
      description: Request the password reset of the user.
      operationId: identity.v1.AuthService.RequestPasswordReset
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identity.v1.RequestPasswordResetRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity.v1.RequestPasswordResetResponse'
  /identity.v1.AuthService/ResetPassword:
    post:
      tags:
        - identity.v1.AuthService
      summary: Process the password reset request.
      description: Process the password reset request.
      operationId: identity.v1.AuthService.ResetPassword
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identity.v1.ResetPasswordRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity.v1.ResetPasswordResponse'
  /identity.v1.PermissionService/CheckStorePermission:
    post:
      tags:
        - identity.v1.PermissionService
      summary: Check if a user has a store permission
      description: Check if a user has a store permission
      operationId: identity.v1.PermissionService.CheckStorePermission
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identity.v1.CheckStorePermissionRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity.v1.CheckStorePermissionResponse'
  /identity.v1.PermissionService/CreateStorePermission:
    post:
      tags:
        - identity.v1.PermissionService
      summary: Create store permission
      description: Create store permission
      operationId: identity.v1.PermissionService.CreateStorePermission
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identity.v1.CreateStorePermissionRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity.v1.SuccessResponse'
  /identity.v1.PermissionService/DeleteStorePermission:
    post:
      tags:
        - identity.v1.PermissionService
      summary: Delete store permission
      description: Delete store permission
      operationId: identity.v1.PermissionService.DeleteStorePermission
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identity.v1.DeleteStorePermissionRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity.v1.SuccessResponse'
  /identity.v1.PermissionService/UpdateStorePermission:
    post:
      tags:
        - identity.v1.PermissionService
      summary: Update store permission
      description: Update store permission
      operationId: identity.v1.PermissionService.UpdateStorePermission
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identity.v1.UpdateStorePermissionRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity.v1.SuccessResponse'
  /identity.v1.UserService/ChangePassword:
    post:
      tags:
        - identity.v1.UserService
      summary: Change the password for the currently authenticated user.
      description: Change the password for the currently authenticated user.
      operationId: identity.v1.UserService.ChangePassword
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identity.v1.ChangePasswordRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity.v1.ChangePasswordResponse'
  /identity.v1.UserService/DeleteUser:
    post:
      tags:
        - identity.v1.UserService
      summary: Processes the deletion of the user account requested by the user.
      description: Processes the deletion of the user account requested by the user.
      operationId: identity.v1.UserService.DeleteUser
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identity.v1.DeleteUserRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity.v1.DeleteUserResponse'
  /identity.v1.UserService/GetCurrentUser:
    post:
      tags:
        - identity.v1.UserService
      summary: Get the user information for the currently authenticated user.
      description: Get the user information for the currently authenticated user.
      operationId: identity.v1.UserService.GetCurrentUser
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identity.v1.GetCurrentUserRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity.v1.GetCurrentUserResponse'
  /identity.v1.UserService/GetMe:
    post:
      tags:
        - identity.v1.UserService
      summary: Get the user information for the currently authenticated user.  @deprecated use GetCurrentUser instead.
      description: |-
        Get the user information for the currently authenticated user.
         @deprecated use GetCurrentUser instead.
      operationId: identity.v1.UserService.GetMe
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identity.v1.GetMeRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity.v1.GetMeResponse'
  /identity.v1.UserService/GetUser:
    post:
      tags:
        - identity.v1.UserService
      summary: Get the public information for the given user id.
      description: Get the public information for the given user id.
      operationId: identity.v1.UserService.GetUser
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identity.v1.GetUserRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity.v1.GetUserResponse'
  /identity.v1.UserService/RequestDeleteUser:
    post:
      tags:
        - identity.v1.UserService
      summary: Request the deletion of the user account.  This will send a verification code to the user's email address  or phone number.
      description: |-
        Request the deletion of the user account.
         This will send a verification code to the user's email address
         or phone number.
      operationId: identity.v1.UserService.RequestDeleteUser
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identity.v1.RequestDeleteUserRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity.v1.RequestDeleteUserResponse'
  /identity.v1.UserService/StreamUser: {}
  /identity.v1.UserService/Update:
    post:
      tags:
        - identity.v1.UserService
      summary: Update the user information for the user.
      description: Update the user information for the user.
      operationId: identity.v1.UserService.Update
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identity.v1.UpdateRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity.v1.UpdateResponse'
  /identity.v1.UserService/UpdateMe:
    post:
      tags:
        - identity.v1.UserService
      summary: Update the user information for the currently authenticated user.
      description: Update the user information for the currently authenticated user.
      operationId: identity.v1.UserService.UpdateMe
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identity.v1.UpdateMeRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity.v1.UpdateMeResponse'
  /inventory.v1.CategoryService/CreateCategory:
    post:
      tags:
        - inventory.v1.CategoryService
      summary: Creates a new category.
      description: Creates a new category.
      operationId: inventory.v1.CategoryService.CreateCategory
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventory.v1.CreateCategoryRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventory.v1.CreateCategoryResponse'
  /inventory.v1.CategoryService/DeleteCategory:
    post:
      tags:
        - inventory.v1.CategoryService
      summary: Deletes a category.
      description: Deletes a category.
      operationId: inventory.v1.CategoryService.DeleteCategory
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventory.v1.DeleteCategoryRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventory.v1.DeleteCategoryResponse'
  /inventory.v1.CategoryService/FindCategories:
    post:
      tags:
        - inventory.v1.CategoryService
      summary: Finds categories by name.
      description: Finds categories by name.
      operationId: inventory.v1.CategoryService.FindCategories
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventory.v1.FindCategoriesRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventory.v1.FindCategoriesResponse'
  /inventory.v1.CategoryService/GetCategory:
    post:
      tags:
        - inventory.v1.CategoryService
      summary: Gets a category by id.
      description: Gets a category by id.
      operationId: inventory.v1.CategoryService.GetCategory
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventory.v1.GetCategoryRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventory.v1.GetCategoryResponse'
  /inventory.v1.CategoryService/UpdateCategory:
    post:
      tags:
        - inventory.v1.CategoryService
      summary: Updates a category.
      description: Updates a category.
      operationId: inventory.v1.CategoryService.UpdateCategory
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventory.v1.UpdateCategoryRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventory.v1.UpdateCategoryResponse'
  /inventory.v1.ProductService/AddProduct:
    post:
      tags:
        - inventory.v1.ProductService
      summary: Adds a product to a store.
      description: Adds a product to a store.
      operationId: inventory.v1.ProductService.AddProduct
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventory.v1.AddStoreProductRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventory.v1.AddStoreProductResponse'
  /inventory.v1.ProductService/CreateGlobalProduct:
    post:
      tags:
        - inventory.v1.ProductService
      summary: Creates a global product.
      description: Creates a global product.
      operationId: inventory.v1.ProductService.CreateGlobalProduct
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventory.v1.CreateGlobalProductRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventory.v1.CreateGlobalProductResponse'
  /inventory.v1.ProductService/DeleteGlobalProduct:
    post:
      tags:
        - inventory.v1.ProductService
      summary: Deletes a global product.
      description: Deletes a global product.
      operationId: inventory.v1.ProductService.DeleteGlobalProduct
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventory.v1.DeleteGlobalProductRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventory.v1.DeleteGlobalProductResponse'
  /inventory.v1.ProductService/DeleteProduct:
    post:
      tags:
        - inventory.v1.ProductService
      summary: Deletes a store product.  Only store products that are not in any orders can be deleted.
      description: |-
        Deletes a store product.
         Only store products that are not in any orders can be deleted.
      operationId: inventory.v1.ProductService.DeleteProduct
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventory.v1.DeleteStoreProductRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventory.v1.DeleteStoreProductResponse'
  /inventory.v1.ProductService/FindGlobalProducts:
    post:
      tags:
        - inventory.v1.ProductService
      summary: Finds products by name.
      description: Finds products by name.
      operationId: inventory.v1.ProductService.FindGlobalProducts
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventory.v1.FindGlobalProductsRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventory.v1.FindGlobalProductsResponse'
  /inventory.v1.ProductService/FindProductCategory:
    post:
      tags:
        - inventory.v1.ProductService
      summary: Finds categories by name.
      description: Finds categories by name.
      operationId: inventory.v1.ProductService.FindProductCategory
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventory.v1.FindProductCategoryRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventory.v1.FindProductCategoryResponse'
  /inventory.v1.ProductService/FindStoreProducts:
    post:
      tags:
        - inventory.v1.ProductService
      summary: Finds products by name.
      description: Finds products by name.
      operationId: inventory.v1.ProductService.FindStoreProducts
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventory.v1.FindStoreProductsRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventory.v1.FindStoreProductsResponse'
  /inventory.v1.ProductService/GetProduct:
    post:
      tags:
        - inventory.v1.ProductService
      summary: Gets a store product by id.
      description: Gets a store product by id.
      operationId: inventory.v1.ProductService.GetProduct
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventory.v1.GetStoreProductRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventory.v1.GetStoreProductResponse'
  /inventory.v1.ProductService/StreamGlobalProducts: {}
  /inventory.v1.ProductService/StreamStoreProducts: {}
  /inventory.v1.ProductService/UpdateGlobalProduct:
    post:
      tags:
        - inventory.v1.ProductService
      summary: Updates a global product.
      description: Updates a global product.
      operationId: inventory.v1.ProductService.UpdateGlobalProduct
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventory.v1.UpdateGlobalProductRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventory.v1.UpdateGlobalProductResponse'
  /inventory.v1.ProductService/UpdateProduct:
    post:
      tags:
        - inventory.v1.ProductService
      summary: Updates a store product.
      description: Updates a store product.
      operationId: inventory.v1.ProductService.UpdateProduct
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventory.v1.UpdateStoreProductRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventory.v1.UpdateStoreProductResponse'
  /inventory.v1.StockInboundService/CreateStockInbound:
    post:
      tags:
        - inventory.v1.StockInboundService
      summary: Creates a stock in bound.
      description: Creates a stock in bound.
      operationId: inventory.v1.StockInboundService.CreateStockInbound
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventory.v1.CreateStockInboundRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventory.v1.CreateStockInboundResponse'
  /inventory.v1.StockInboundService/FindStockInbounds:
    post:
      tags:
        - inventory.v1.StockInboundService
      summary: Finds the stock in bounds.
      description: Finds the stock in bounds.
      operationId: inventory.v1.StockInboundService.FindStockInbounds
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventory.v1.FindStockInboundRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventory.v1.FindStockInboundResponse'
  /inventory.v1.StockInboundService/UpdateStockInbound:
    post:
      tags:
        - inventory.v1.StockInboundService
      summary: Updates the stock in bound.
      description: Updates the stock in bound.
      operationId: inventory.v1.StockInboundService.UpdateStockInbound
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventory.v1.UpdateStockInboundRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventory.v1.UpdateStockInboundResponse'
  /link.v1.ResourceLinkService/GetResourceLinks:
    post:
      tags:
        - link.v1.ResourceLinkService
      summary: Gets a resource link by id.  Returns the resources in the same order as the ids.
      description: |-
        Gets a resource link by id.
         Returns the resources in the same order as the ids.
      operationId: link.v1.ResourceLinkService.GetResourceLinks
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/link.v1.GetResourceLinksRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/link.v1.GetResourceLinksResponse'
  /order.v1.InvoiceService/CreateInvoice:
    post:
      tags:
        - order.v1.InvoiceService
      summary: Creates an invoice for the order.
      description: Creates an invoice for the order.
      operationId: order.v1.InvoiceService.CreateInvoice
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order.v1.CreateInvoiceRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order.v1.CreateInvoiceResponse'
  /order.v1.InvoiceService/FindInvoices:
    post:
      tags:
        - order.v1.InvoiceService
      summary: Finds the invoices.
      description: Finds the invoices.
      operationId: order.v1.InvoiceService.FindInvoices
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order.v1.FindInvoiceRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order.v1.FindInvoiceResponse'
  /order.v1.InvoiceService/UpdateInvoice:
    post:
      tags:
        - order.v1.InvoiceService
      summary: Updates an invoice.
      description: Updates an invoice.
      operationId: order.v1.InvoiceService.UpdateInvoice
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order.v1.UpdateInvoiceRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order.v1.UpdateInvoiceResponse'
  /order.v1.OrderService/CreateOrder:
    post:
      tags:
        - order.v1.OrderService
      summary: Creates a new order.
      description: Creates a new order.
      operationId: order.v1.OrderService.CreateOrder
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order.v1.CreateOrderRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order.v1.CreateOrderResponse'
  /order.v1.OrderService/DeleteOrder:
    post:
      tags:
        - order.v1.OrderService
      summary: Deletes an order.
      description: Deletes an order.
      operationId: order.v1.OrderService.DeleteOrder
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order.v1.DeleteOrderRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order.v1.DeleteOrderResponse'
  /order.v1.OrderService/FindOrders:
    post:
      tags:
        - order.v1.OrderService
      summary: Finds orders by query.
      description: Finds orders by query.
      operationId: order.v1.OrderService.FindOrders
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order.v1.FindOrdersRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order.v1.FindOrdersResponse'
  /order.v1.OrderService/GetOrder:
    post:
      tags:
        - order.v1.OrderService
      summary: Gets an order by id.
      description: Gets an order by id.
      operationId: order.v1.OrderService.GetOrder
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order.v1.GetOrderRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order.v1.GetOrderResponse'
  /order.v1.BillingService/GenerateBilling:
    post:
      tags:
        - order.v1.BillingService
      summary: Generates a billing for the order.
      description: Generates a billing for the order.
      operationId: order.v1.BillingService.GenerateBilling
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order.v1.GenerateBillingRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order.v1.GenerateBillingResponse'
  /order.v1.VoucherService/CreateVoucher:
    post:
      tags:
        - order.v1.VoucherService
      summary: CreateVoucher
      operationId: order.v1.VoucherService.CreateVoucher
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order.v1.CreateVoucherRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order.v1.CreateVoucherResponse'
  /order.v1.VoucherService/FindVouchers:
    post:
      tags:
        - order.v1.VoucherService
      summary: FindVouchers
      operationId: order.v1.VoucherService.FindVouchers
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order.v1.FindVouchersRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order.v1.FindVouchersResponse'
  /order.v1.VoucherService/GetVoucher:
    post:
      tags:
        - order.v1.VoucherService
      summary: GetVoucher
      operationId: order.v1.VoucherService.GetVoucher
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order.v1.GetVoucherRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order.v1.GetVoucherResponse'
  /order.v1.VoucherService/RedeemVoucher:
    post:
      tags:
        - order.v1.VoucherService
      summary: RedeemVoucher
      operationId: order.v1.VoucherService.RedeemVoucher
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order.v1.RedeemVoucherRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order.v1.RedeemVoucherResponse'
  /store.v1.StoreService/AddUserToStore:
    post:
      tags:
        - store.v1.StoreService
      summary: Add user to store or invite user to store.
      description: Add user to store or invite user to store.
      operationId: store.v1.StoreService.AddUserToStore
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/store.v1.AddUserToStoreRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/store.v1.AddUserToStoreResponse'
  /store.v1.StoreService/CreateStore:
    post:
      tags:
        - store.v1.StoreService
      summary: Creates a new store.
      description: Creates a new store.
      operationId: store.v1.StoreService.CreateStore
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/store.v1.CreateStoreRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/store.v1.CreateStoreResponse'
  /store.v1.StoreService/DeleteStore:
    post:
      tags:
        - store.v1.StoreService
      summary: Deletes a store.
      description: Deletes a store.
      operationId: store.v1.StoreService.DeleteStore
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/store.v1.DeleteStoreRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/store.v1.DeleteStoreResponse'
  /store.v1.StoreService/GetBusinessStores:
    post:
      tags:
        - store.v1.StoreService
      summary: Gets all stores base on business Id.
      description: Gets all stores base on business Id.
      operationId: store.v1.StoreService.GetBusinessStores
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/store.v1.GetBusinessStoresRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/store.v1.GetBusinessStoresResponse'
  /store.v1.StoreService/GetStore:
    post:
      tags:
        - store.v1.StoreService
      summary: Gets a store by id.
      description: Gets a store by id.
      operationId: store.v1.StoreService.GetStore
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/store.v1.GetStoreRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/store.v1.GetStoreResponse'
  /store.v1.StoreService/GetStoreMember:
    post:
      tags:
        - store.v1.StoreService
      summary: Get store member.
      description: Get store member.
      operationId: store.v1.StoreService.GetStoreMember
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/store.v1.GetStoreMemberRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/store.v1.GetStoreMemberResponse'
  /store.v1.StoreService/GetStoreMembers:
    post:
      tags:
        - store.v1.StoreService
      summary: Get store members.
      description: Get store members.
      operationId: store.v1.StoreService.GetStoreMembers
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/store.v1.GetStoreMembersRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/store.v1.GetStoreMembersResponse'
  /store.v1.StoreService/RemoveUserFromStore:
    post:
      tags:
        - store.v1.StoreService
      summary: Remove user from store.
      description: Remove user from store.
      operationId: store.v1.StoreService.RemoveUserFromStore
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/store.v1.RemoveUserFromStoreRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/store.v1.RemoveUserFromStoreResponse'
  /store.v1.StoreService/SetStoreMemberStatus:
    post:
      tags:
        - store.v1.StoreService
      summary: Set store member status.
      description: Set store member status.
      operationId: store.v1.StoreService.SetStoreMemberStatus
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/store.v1.SetStoreMemberStatusRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/store.v1.SetStoreMemberStatusResponse'
  /store.v1.StoreService/StreamStoreMembers: {}
  /store.v1.StoreService/UpdateStore:
    post:
      tags:
        - store.v1.StoreService
      summary: Updates a store.  Note:Only the fields that are set will be updated.
      description: |-
        Updates a store.
         Note:Only the fields that are set will be updated.
      operationId: store.v1.StoreService.UpdateStore
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/store.v1.UpdateStoreRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/store.v1.UpdateStoreResponse'
  /store.v1.StoreService/UpdateStoreMember:
    post:
      tags:
        - store.v1.StoreService
      summary: Update store member.
      description: Update store member.
      operationId: store.v1.StoreService.UpdateStoreMember
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/store.v1.UpdateStoreMemberRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/store.v1.UpdateStoreMemberResponse'
  /store.v1.SupplierService/CreateSupplier:
    post:
      tags:
        - store.v1.SupplierService
      summary: Creates a new supplier.
      description: Creates a new supplier.
      operationId: store.v1.SupplierService.CreateSupplier
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/store.v1.CreateSupplierRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/store.v1.CreateSupplierResponse'
  /store.v1.SupplierService/DeleteSupplier:
    post:
      tags:
        - store.v1.SupplierService
      summary: Deletes a supplier.
      description: Deletes a supplier.
      operationId: store.v1.SupplierService.DeleteSupplier
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/store.v1.DeleteSupplierRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/store.v1.DeleteSupplierResponse'
  /store.v1.SupplierService/GetStoreSuppliers:
    post:
      tags:
        - store.v1.SupplierService
      summary: Gets all suppliers of a store.
      description: Gets all suppliers of a store.
      operationId: store.v1.SupplierService.GetStoreSuppliers
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/store.v1.GetStoreSuppliersRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/store.v1.GetStoreSuppliersResponse'
  /store.v1.SupplierService/GetSupplier:
    post:
      tags:
        - store.v1.SupplierService
      summary: Gets a supplier by id.
      description: Gets a supplier by id.
      operationId: store.v1.SupplierService.GetSupplier
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/store.v1.GetSupplierRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/store.v1.GetSupplierResponse'
  /store.v1.SupplierService/StreamStoreSuppliers: {}
  /store.v1.SupplierService/UpdateSupplier:
    post:
      tags:
        - store.v1.SupplierService
      summary: Updates a supplier.  Note:Only the fields that are set will be updated. array fields like external_links will be replaced.
      description: |-
        Updates a supplier.
         Note:Only the fields that are set will be updated. array fields like external_links will be replaced.
      operationId: store.v1.SupplierService.UpdateSupplier
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/store.v1.UpdateSupplierRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/store.v1.UpdateSupplierResponse'
  /sync.v1.SyncService/GetSyncOperationsStatus:
    post:
      tags:
        - sync.v1.SyncService
      summary: Get status of sync operations
      description: Get status of sync operations
      operationId: sync.v1.SyncService.GetSyncOperationsStatus
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sync.v1.GetSyncOperationsStatusRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sync.v1.GetSyncOperationsStatusResponse'
  /sync.v1.SyncService/RetrySyncOperations:
    post:
      tags:
        - sync.v1.SyncService
      summary: Retry failed sync operations
      description: Retry failed sync operations
      operationId: sync.v1.SyncService.RetrySyncOperations
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sync.v1.RetrySyncOperationsRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sync.v1.RetrySyncOperationsResponse'
  /sync.v1.SyncService/StreamSyncOperations: {}
  /sync.v1.SyncService/SubmitSyncOperations:
    post:
      tags:
        - sync.v1.SyncService
      summary: Submit sync operations for processing
      description: Submit sync operations for processing
      operationId: sync.v1.SyncService.SubmitSyncOperations
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sync.v1.SubmitSyncOperationsRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sync.v1.SubmitSyncOperationsResponse'
  /transaction.v1.TransactionService/AddTransaction:
    post:
      tags:
        - transaction.v1.TransactionService
      summary: Adds a transaction.
      description: Adds a transaction.
      operationId: transaction.v1.TransactionService.AddTransaction
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transaction.v1.AddTransactionRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transaction.v1.AddTransactionResponse'
  /transaction.v1.TransactionService/DeleteTransaction:
    post:
      tags:
        - transaction.v1.TransactionService
      summary: Deletes a transaction.
      description: Deletes a transaction.
      operationId: transaction.v1.TransactionService.DeleteTransaction
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transaction.v1.DeleteTransactionRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transaction.v1.DeleteTransactionResponse'
  /transaction.v1.TransactionService/FindTransactions:
    post:
      tags:
        - transaction.v1.TransactionService
      summary: Find transactions by query.
      description: Find transactions by query.
      operationId: transaction.v1.TransactionService.FindTransactions
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transaction.v1.FindTransactionsRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transaction.v1.FindTransactionsResponse'
  /transaction.v1.TransactionService/GetTransaction:
    post:
      tags:
        - transaction.v1.TransactionService
      summary: Gets a transaction by id.
      description: Gets a transaction by id.
      operationId: transaction.v1.TransactionService.GetTransaction
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transaction.v1.GetTransactionRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transaction.v1.GetTransactionResponse'
  /transaction.v1.TransactionService/UpdateTransaction:
    post:
      tags:
        - transaction.v1.TransactionService
      summary: Updates a transaction.
      description: Updates a transaction.
      operationId: transaction.v1.TransactionService.UpdateTransaction
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transaction.v1.UpdateTransactionRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transaction.v1.UpdateTransactionResponse'
components:
  schemas:
    business.v1.AssociateUserToBusinessRequest:
      type: object
      properties:
        userId:
          type: string
          title: user_id
          description: The unique identifier of the user.
        businessId:
          type: string
          title: business_id
          description: The unique identifier of the business.
      title: AssociateUserToBusinessRequest
      additionalProperties: false
      description: |-
        The unique identifier of the user.
         For example, the email address or @username.
         string u_ref = 1;
    business.v1.AssociateUserToBusinessResponse:
      type: object
      properties:
        businessMember:
          title: business_member
          description: The business member to return
          $ref: '#/components/schemas/business.v1.BusinessMember'
      title: AssociateUserToBusinessResponse
      additionalProperties: false
    business.v1.Business:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          description: The reference id to the business identifier.
          nullable: true
        name:
          type: string
          title: name
          description: The name of the business.
        description:
          type: string
          title: description
          description: The description of the business.
          nullable: true
        status:
          title: status
          description: The status of the business.
          $ref: '#/components/schemas/business.v1.BusinessStatusType'
        ownerId:
          type: string
          title: owner_id
          description: The id of the owner of the business.
        logoLinkId:
          type: string
          title: logo_link_id
          description: The id of the media of the logo of the business.
          nullable: true
        countryCode:
          type: string
          title: country_code
          description: |-
            The ISO 3166-1 alpha-2 country code of the business.
             e.g. CM, US, GB, etc.
        currencyCode:
          type: string
          title: currency_code
          description: |-
            The ISO 4217 currency code of the business.
             For example: XAF, USD, EUR, etc.
             Note: All price in the business will be in this currency.
        externalLinksIds:
          type: array
          items:
            type: string
          title: external_links_ids
          description: |-
            The media ids of different links of the business.
             It can be social media links, website links, etc.
        contactInfo:
          type: string
          title: contact_info
          description: The business contact information.
          nullable: true
        address:
          type: string
          title: address
          description: The business address.
          nullable: true
        email:
          type: string
          title: email
          description: The business email.
          nullable: true
      title: Business
      additionalProperties: false
    business.v1.BusinessMember:
      type: object
      properties:
        user:
          title: user
          description: The user.
          $ref: '#/components/schemas/identity.v1.User'
        businessId:
          type: string
          title: business_id
          description: The unique identifier of the business.
        memberSince:
          title: member_since
          description: The date since when the user became a member.
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        status:
          title: status
          description: The status of the user.
          $ref: '#/components/schemas/business.v1.BusinessMemberStatus'
      title: BusinessMember
      additionalProperties: false
    business.v1.BusinessMemberStatus:
      type: string
      title: BusinessMemberStatus
      enum:
        - BUSINESS_MEMBER_STATUS_UNSPECIFIED
        - BUSINESS_MEMBER_STATUS_ACTIVE
        - BUSINESS_MEMBER_STATUS_PENDING
        - BUSINESS_MEMBER_STATUS_INACTIVE
        - BUSINESS_MEMBER_STATUS_BANNED
    business.v1.BusinessStatusType:
      type: string
      title: BusinessStatusType
      enum:
        - BUSINESS_STATUS_TYPE_UNSPECIFIED
        - BUSINESS_STATUS_TYPE_ACTIVE
        - BUSINESS_STATUS_TYPE_INACTIVE
    business.v1.ChangeBusinessCurrencyRequest:
      type: object
      properties:
        currencyChangePolicy:
          title: currency_change_policy
          description: |-
            The policy to apply when changing the currency
             This field is required on currency change.
          $ref: '#/components/schemas/business.v1.CurrencyChangePolicyType'
        businessId:
          type: string
          title: business_id
          description: The unique ref id of the business.
        countryCode:
          type: string
          title: country_code
          description: |-
            The ISO 3166-1 alpha-2 country code of the business.
             e.g. CM, US, GB, etc.
      title: ChangeBusinessCurrencyRequest
      additionalProperties: false
    business.v1.ChangeBusinessCurrencyResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
      title: ChangeBusinessCurrencyResponse
      additionalProperties: false
    business.v1.CreateBusinessRequest:
      type: object
      properties:
        business:
          title: business
          description: |-
            The business information to create.
             Note:Only the fields that are set will be created.
          $ref: '#/components/schemas/business.v1.Business'
        logoRawImage:
          type: string
          title: logo_raw_image
          format: byte
          description: The raw image of the logo of the business.
          nullable: true
        externalLinks:
          type: array
          items:
            $ref: '#/components/schemas/link.v1.ResourceLink'
          title: external_links
          description: The links of the business.
      title: CreateBusinessRequest
      additionalProperties: false
    business.v1.CreateBusinessResponse:
      type: object
      properties:
        businessId:
          type: string
          title: business_id
          minLength: 3
          description: The reference id to the business identifier.
      title: CreateBusinessResponse
      required:
        - businessId
      additionalProperties: false
    business.v1.CreateUserToBusinessRequest:
      type: object
      properties:
        firstName:
          type: string
          title: first_name
          description: The first name of the user.
        lastName:
          type: string
          title: last_name
          description: The last name of the user.
        userName:
          type: string
          title: user_name
          description: The username of the user.
        phoneNumber:
          type: string
          title: phone_number
          description: The phone number of the user.
        email:
          type: string
          title: email
          description: The email of the user.
        password:
          type: string
          title: password
          description: The password of the user.
        businessId:
          type: string
          title: business_id
          description: The unique identifier of the business.
      title: CreateUserToBusinessRequest
      additionalProperties: false
      description: |-
        The unique identifier of the user.
         For example, the email address or @username.
         string u_ref = 1;
    business.v1.CreateUserToBusinessResponse:
      type: object
      properties:
        businessMember:
          title: business_member
          description: The business member to return
          $ref: '#/components/schemas/business.v1.BusinessMember'
      title: CreateUserToBusinessResponse
      additionalProperties: false
    business.v1.CurrencyChangePolicyType:
      type: string
      title: CurrencyChangePolicyType
      enum:
        - CURRENCY_CHANGE_POLICY_TYPE_UNSPECIFIED
        - CURRENCY_CHANGE_POLICY_TYPE_KEEP_PREVIOUS_CURRENCY_VALUE
        - CURRENCY_CHANGE_POLICY_TYPE_CONVERT_BASED_ON_CURRENT_EXCHANGE_RATE
    business.v1.GetBusinessDetailsRequest:
      type: object
      properties:
        businessId:
          type: string
          title: business_id
          minLength: 3
          description: The reference id to the business identifier.
      title: GetBusinessDetailsRequest
      required:
        - businessId
      additionalProperties: false
    business.v1.GetBusinessDetailsResponse:
      type: object
      properties:
        business:
          title: business
          description: The retrieved business data.
          $ref: '#/components/schemas/business.v1.Business'
      title: GetBusinessDetailsResponse
      additionalProperties: false
    business.v1.GetBusinessMemberRequest:
      type: object
      properties:
        userId:
          type: string
          title: user_id
          minLength: 3
          description: The unique identifier of the user.
        businessId:
          type: string
          title: business_id
          minLength: 3
          description: The unique identifier of the business.
      title: GetBusinessMemberRequest
      required:
        - userId
        - businessId
      additionalProperties: false
    business.v1.GetBusinessMemberResponse:
      type: object
      properties:
        businessMember:
          title: business_member
          description: The business member.
          $ref: '#/components/schemas/business.v1.BusinessMember'
      title: GetBusinessMemberResponse
      additionalProperties: false
    business.v1.GetBusinessMembersRequest:
      type: object
      properties:
        businessId:
          type: string
          title: business_id
          minLength: 3
          description: The reference id to the business identifier.
      title: GetBusinessMembersRequest
      required:
        - businessId
      additionalProperties: false
    business.v1.GetBusinessMembersResponse:
      type: object
      properties:
        businessMembers:
          type: array
          items:
            $ref: '#/components/schemas/business.v1.BusinessMember'
          title: business_members
          description: The set of business member
      title: GetBusinessMembersResponse
      additionalProperties: false
    business.v1.GetMyBusinessesRequest:
      type: object
      properties:
        ownerId:
          type: string
          title: owner_id
          description: The unique identifier of the user.
      title: GetMyBusinessesRequest
      additionalProperties: false
    business.v1.GetMyBusinessesResponse:
      type: object
      properties:
        businesses:
          type: array
          items:
            $ref: '#/components/schemas/business.v1.Business'
          title: businesses
      title: GetMyBusinessesResponse
      additionalProperties: false
    business.v1.RemoveUserFromBusinessRequest:
      type: object
      properties:
        userId:
          type: string
          title: user_id
          minLength: 3
          description: The unique identifier of the user.
        businessId:
          type: string
          title: business_id
          minLength: 3
      title: RemoveUserFromBusinessRequest
      required:
        - userId
        - businessId
      additionalProperties: false
    business.v1.RemoveUserFromBusinessResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the user was successfully removed from the business.
      title: RemoveUserFromBusinessResponse
      additionalProperties: false
    business.v1.RequestDeleteBusinessRequest:
      type: object
      properties:
        businessId:
          type: string
          title: business_id
          minLength: 3
          description: The reference id to the business identifier.
        password:
          type: string
          title: password
          description: |-
            The password of the user who is trying to delete the business.
             If the user doesn't have a password, he must set it before handling any deletion.
      title: RequestDeleteBusinessRequest
      required:
        - businessId
      additionalProperties: false
    business.v1.RequestDeleteBusinessResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the business will be deleted or not.
        noticePeriod:
          type: string
          title: notice_period
          description: The notice period before the business will be deleted.
      title: RequestDeleteBusinessResponse
      additionalProperties: false
    business.v1.StreamBusinessMembersRequest:
      type: object
      properties:
        businessId:
          type: string
          title: business_id
          minLength: 3
          description: The unique identifier of the business.
      title: StreamBusinessMembersRequest
      required:
        - businessId
      additionalProperties: false
    business.v1.StreamBusinessMembersResponse:
      type: object
      properties:
        businessMembers:
          type: array
          items:
            $ref: '#/components/schemas/business.v1.BusinessMember'
          title: business_members
          description: The business members.
      title: StreamBusinessMembersResponse
      additionalProperties: false
    business.v1.UpdateBusinessMemberRequest:
      type: object
      properties:
        userId:
          type: string
          title: user_id
          minLength: 3
          description: The unique identifier of the user.
        businessId:
          type: string
          title: business_id
          minLength: 3
          description: The unique identifier of the business.
      title: UpdateBusinessMemberRequest
      required:
        - userId
        - businessId
      additionalProperties: false
    business.v1.UpdateBusinessMemberResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the member was successfully updated.
        businessMember:
          title: business_member
          description: The updated business member.
          $ref: '#/components/schemas/business.v1.BusinessMember'
      title: UpdateBusinessMemberResponse
      additionalProperties: false
    business.v1.UpdateBusinessRequest:
      type: object
      properties:
        business:
          title: business
          description: |-
            The business information to update.
             Note:Only the fields that are set will be updated.
          $ref: '#/components/schemas/business.v1.Business'
        logoRawImage:
          type: string
          title: logo_raw_image
          format: byte
          description: The raw image of the logo of the business.
          nullable: true
        externalLinks:
          type: array
          items:
            $ref: '#/components/schemas/link.v1.ResourceLink'
          title: external_links
          description: The links of the business.
      title: UpdateBusinessRequest
      additionalProperties: false
    business.v1.UpdateBusinessResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the business was successfully updated.
      title: UpdateBusinessResponse
      additionalProperties: false
    connect-protocol-version:
      type: number
      title: Connect-Protocol-Version
      enum:
        - 1
      description: Define the version of the Connect protocol
      const: 1
    connect-timeout-header:
      type: number
      title: Connect-Timeout-Ms
      description: Define the timeout, in ms
    connect.error:
      type: object
      properties:
        code:
          type: string
          examples:
            - not_found
          enum:
            - canceled
            - unknown
            - invalid_argument
            - deadline_exceeded
            - not_found
            - already_exists
            - permission_denied
            - resource_exhausted
            - failed_precondition
            - aborted
            - out_of_range
            - unimplemented
            - internal
            - unavailable
            - data_loss
            - unauthenticated
          description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
        details:
          type: array
          items:
            $ref: '#/components/schemas/connect.error_details.Any'
          description: A list of messages that carry the error details. There is no limit on the number of messages.
      title: Connect Error
      additionalProperties: true
      description: 'Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation'
    connect.error_details.Any:
      type: object
      properties:
        type:
          type: string
          description: 'A URL that acts as a globally unique identifier for the type of the serialized message. For example: `type.googleapis.com/google.rpc.ErrorInfo`. This is used to determine the schema of the data in the `value` field and is the discriminator for the `debug` field.'
        value:
          type: string
          format: binary
          description: The Protobuf message, serialized as bytes and base64-encoded. The specific message type is identified by the `type` field.
        debug:
          oneOf:
            - type: object
              title: Any
              additionalProperties: true
              description: Detailed error information.
          discriminator:
            propertyName: type
          title: Debug
          description: Deserialized error detail payload. The 'type' field indicates the schema. This field is for easier debugging and should not be relied upon for application logic.
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message, with an additional debug field for ConnectRPC error details.
    google.protobuf.Timestamp:
      type: string
      examples:
        - "2023-01-15T01:30:15.01Z"
        - "2024-12-25T12:00:00Z"
      format: date-time
      description: |-
        A Timestamp represents a point in time independent of any time zone or local
         calendar, encoded as a count of seconds and fractions of seconds at
         nanosecond resolution. The count is relative to an epoch at UTC midnight on
         January 1, 1970, in the proleptic Gregorian calendar which extends the
         Gregorian calendar backwards to year one.

         All minutes are 60 seconds long. Leap seconds are "smeared" so that no leap
         second table is needed for interpretation, using a [24-hour linear
         smear](https://developers.google.com/time/smear).

         The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By
         restricting to that range, we ensure that we can convert to and from [RFC
         3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.

         # Examples

         Example 1: Compute Timestamp from POSIX `time()`.

             Timestamp timestamp;
             timestamp.set_seconds(time(NULL));
             timestamp.set_nanos(0);

         Example 2: Compute Timestamp from POSIX `gettimeofday()`.

             struct timeval tv;
             gettimeofday(&tv, NULL);

             Timestamp timestamp;
             timestamp.set_seconds(tv.tv_sec);
             timestamp.set_nanos(tv.tv_usec * 1000);

         Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.

             FILETIME ft;
             GetSystemTimeAsFileTime(&ft);
             UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;

             // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z
             // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.
             Timestamp timestamp;
             timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));
             timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));

         Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.

             long millis = System.currentTimeMillis();

             Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)
                 .setNanos((int) ((millis % 1000) * 1000000)).build();

         Example 5: Compute Timestamp from Java `Instant.now()`.

             Instant now = Instant.now();

             Timestamp timestamp =
                 Timestamp.newBuilder().setSeconds(now.getEpochSecond())
                     .setNanos(now.getNano()).build();

         Example 6: Compute Timestamp from current time in Python.

             timestamp = Timestamp()
             timestamp.GetCurrentTime()

         # JSON Mapping

         In JSON format, the Timestamp type is encoded as a string in the
         [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the
         format is "{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z"
         where {year} is always expressed using four digits while {month}, {day},
         {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional
         seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),
         are optional. The "Z" suffix indicates the timezone ("UTC"); the timezone
         is required. A proto3 JSON serializer should always use UTC (as indicated by
         "Z") when printing the Timestamp type and a proto3 JSON parser should be
         able to accept both UTC and other timezones (as indicated by an offset).

         For example, "2017-01-15T01:30:15.01Z" encodes 15.01 seconds past
         01:30 UTC on January 15, 2017.

         In JavaScript, one can convert a Date object to this format using the
         standard
         [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)
         method. In Python, a standard `datetime.datetime` object can be converted
         to this format using
         [`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with
         the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use
         the Joda Time's [`ISODateTimeFormat.dateTime()`](
         http://joda-time.sourceforge.net/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime()
         ) to obtain a formatter capable of generating timestamps in this format.
    identity.v1.AccountStatusType:
      type: string
      title: AccountStatusType
      enum:
        - ACCOUNT_STATUS_TYPE_UNSPECIFIED
        - ACCOUNT_STATUS_TYPE_ACTIVE
        - ACCOUNT_STATUS_TYPE_DELETED
    identity.v1.AuthActionType:
      type: string
      title: AuthActionType
      enum:
        - AUTH_ACTION_TYPE_UNSPECIFIED
        - AUTH_ACTION_TYPE_VERIFY_EMAIL
        - AUTH_ACTION_TYPE_VERIFY_PHONE_NUMBER
        - AUTH_ACTION_TYPE_INITIALIZE_PASSWORD
        - AUTH_ACTION_TYPE_RESET_PASSWORD
    identity.v1.ConnectedAccount:
      type: object
      properties:
        provider:
          title: provider
          description: |-
            The provider of the connected account.
             For example, "google.com" or "email".
          $ref: '#/components/schemas/identity.v1.ProviderType'
        rawData:
          type: string
          title: raw_data
          description: The raw information returned by the provider.
      title: ConnectedAccount
      additionalProperties: false
    identity.v1.ProviderType:
      type: string
      title: ProviderType
      enum:
        - PROVIDER_TYPE_UNSPECIFIED
        - PROVIDER_TYPE_FIREBASE_EMAIL
        - PROVIDER_TYPE_GOOGLE
        - PROVIDER_TYPE_INTERNAL_BUSINESS_AUTH
    identity.v1.User:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          description: The unique identifier of the user.
          nullable: true
        userName:
          type: string
          title: user_name
          description: '[public] The user name of the user.'
        connectedAccounts:
          type: array
          items:
            $ref: '#/components/schemas/identity.v1.ConnectedAccount'
          title: connected_accounts
          description: The connected accounts used by the user for authentication.
        email:
          type: string
          title: email
          format: email
          description: The email address of the user.
          nullable: true
        phoneNumber:
          type: string
          title: phone_number
          description: The phone number of the user.
          nullable: true
        firstName:
          type: string
          title: first_name
          description: '[public] The first name of the user.'
          nullable: true
        lastName:
          type: string
          title: last_name
          description: '[public] The last name of the user.'
          nullable: true
        profileLink:
          title: profile_link
          description: '[public] The profile link of the user.'
          nullable: true
          $ref: '#/components/schemas/link.v1.ResourceLink'
        accountStatus:
          title: account_status
          description: The status of the user's account.
          nullable: true
          $ref: '#/components/schemas/identity.v1.AccountStatusType'
        requiredActions:
          type: array
          items:
            $ref: '#/components/schemas/identity.v1.AuthActionType'
          title: required_actions
          description: The actions that the user must complete to authenticate.
      title: User
      additionalProperties: false
      description: |-
        The user record.
         The id of the user is the same as the uid of the Firebase user.
    link.v1.ResourceLink:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          description: The unique identifier of the resource link.
          nullable: true
        targetUri:
          type: string
          title: target_uri
          description: The link of the resource link.
        iconUri:
          type: string
          title: icon_uri
          description: The icon of the resource type or owner.
          nullable: true
        info:
          type: string
          title: info
          description: |-
            The meta data of the resource link.
             It can be the title of the target resource.
          nullable: true
        label:
          type: string
          title: label
          description: The label use to identify the resource type.
          nullable: true
      title: ResourceLink
      additionalProperties: false
      description: 'TODO: Auto delete resource link not linked to any other resource.'
    business.v1.BusinessClient:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          description: The reference id to the client identifier.
          nullable: true
        fullName:
          type: string
          title: full_name
          description: The name of the client.
        externalLinksIds:
          type: array
          items:
            type: string
          title: external_links_ids
          description: The links of the client it can contain client mail, phone number, website etc.
        logoLinkId:
          type: string
          title: logo_link_id
          description: The id of the media of the logo of the client.
          nullable: true
        businessId:
          type: string
          title: business_id
          minLength: 3
          description: The id of the business of the client.
      title: BusinessClient
      required:
        - businessId
      additionalProperties: false
    business.v1.CreateBusinessClientRequest:
      type: object
      properties:
        client:
          title: client
          description: The client information to create.
          $ref: '#/components/schemas/business.v1.BusinessClient'
        logoRawImage:
          type: string
          title: logo_raw_image
          format: byte
          description: The raw image of the logo of the client.
          nullable: true
      title: CreateBusinessClientRequest
      additionalProperties: false
    business.v1.CreateBusinessClientResponse:
      type: object
      properties:
        clientId:
          type: string
          title: client_id
          minLength: 3
          description: The reference id to the client identifier.
      title: CreateBusinessClientResponse
      required:
        - clientId
      additionalProperties: false
    business.v1.DeleteBusinessClientRequest:
      type: object
      properties:
        clientId:
          type: string
          title: client_id
          minLength: 3
          description: The reference id to the client identifier.
      title: DeleteBusinessClientRequest
      required:
        - clientId
      additionalProperties: false
    business.v1.DeleteBusinessClientResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the client was successfully deleted.
      title: DeleteBusinessClientResponse
      additionalProperties: false
    business.v1.GetBusinessClientRequest:
      type: object
      properties:
        clientId:
          type: string
          title: client_id
          minLength: 3
          description: The reference id to the client identifier.
      title: GetBusinessClientRequest
      required:
        - clientId
      additionalProperties: false
    business.v1.GetBusinessClientResponse:
      type: object
      properties:
        client:
          title: client
          description: The retrieved client data.
          $ref: '#/components/schemas/business.v1.BusinessClient'
      title: GetBusinessClientResponse
      additionalProperties: false
    business.v1.UpdateBusinessClientRequest:
      type: object
      properties:
        client:
          title: client
          description: |-
            The client information to update.
             Note:Only the fields that are set will be updated.
          $ref: '#/components/schemas/business.v1.BusinessClient'
        logoRawImage:
          type: string
          title: logo_raw_image
          format: byte
          description: The raw image of the logo of the client.
          nullable: true
      title: UpdateBusinessClientRequest
      additionalProperties: false
    business.v1.UpdateBusinessClientResponse:
      type: object
      properties:
        client:
          title: client
          description: The updated client data.
          $ref: '#/components/schemas/business.v1.BusinessClient'
      title: UpdateBusinessClientResponse
      additionalProperties: false
    business.v1.CreateSupplierRequest:
      type: object
      properties:
        supplier:
          title: supplier
          description: The supplier information to create.
          $ref: '#/components/schemas/business.v1.Supplier'
        logoRawImage:
          type: string
          title: logo_raw_image
          format: byte
          description: The raw image of the logo of the supplier.
          nullable: true
        externalLinks:
          type: array
          items:
            $ref: '#/components/schemas/link.v1.ResourceLink'
          title: external_links
          description: The links of the supplier.
      title: CreateSupplierRequest
      additionalProperties: false
    business.v1.CreateSupplierResponse:
      type: object
      properties:
        supplierId:
          type: string
          title: supplier_id
          minLength: 3
          description: The reference id to the supplier identifier.
      title: CreateSupplierResponse
      required:
        - supplierId
      additionalProperties: false
    business.v1.DeleteSupplierRequest:
      type: object
      properties:
        supplierId:
          type: string
          title: supplier_id
          minLength: 3
          description: The reference id to the supplier identifier.
      title: DeleteSupplierRequest
      required:
        - supplierId
      additionalProperties: false
    business.v1.DeleteSupplierResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the supplier was successfully deleted.
      title: DeleteSupplierResponse
      additionalProperties: false
    business.v1.GetBusinessSuppliersRequest:
      type: object
      properties:
        businessId:
          type: string
          title: business_id
          minLength: 3
          description: The reference id to the business identifier.
      title: GetBusinessSuppliersRequest
      required:
        - businessId
      additionalProperties: false
    business.v1.GetBusinessSuppliersResponse:
      type: object
      properties:
        suppliers:
          type: array
          items:
            $ref: '#/components/schemas/business.v1.Supplier'
          title: suppliers
          description: |-
            The list of suppliers of the business.
             Note: Only the ids and names of the suppliers are returned.
      title: GetBusinessSuppliersResponse
      additionalProperties: false
    business.v1.GetSupplierRequest:
      type: object
      properties:
        supplierId:
          type: string
          title: supplier_id
          minLength: 3
          description: The reference id to the supplier identifier.
      title: GetSupplierRequest
      required:
        - supplierId
      additionalProperties: false
    business.v1.GetSupplierResponse:
      type: object
      properties:
        supplier:
          title: supplier
          description: The retrieved supplier data.
          $ref: '#/components/schemas/business.v1.Supplier'
      title: GetSupplierResponse
      additionalProperties: false
    business.v1.Link:
      type: object
      properties:
        label:
          type: string
          title: label
          description: The label of the link.
        url:
          type: string
          title: url
          description: |-
            The url of the link.
             Todo: We must automatically retrieve the icon of the link.
      title: Link
      additionalProperties: false
    business.v1.Supplier:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          description: The reference id to the supplier identifier.
          nullable: true
        name:
          type: string
          title: name
          description: The name of the supplier.
        description:
          type: string
          title: description
          description: The description of the supplier.
          nullable: true
        logoLinkId:
          type: string
          title: logo_link_id
          description: The id of the media of the logo of the supplier.
          nullable: true
        externalLinksIds:
          type: array
          items:
            type: string
          title: external_links_ids
          description: The links of the supplier.
        contactPhone:
          type: string
          title: contact_phone
          description: The contact phone number.
          nullable: true
        contactEmail:
          type: string
          title: contact_email
          description: The contact email.
          nullable: true
        contactAddress:
          type: string
          title: contact_address
          description: The contact address.
          nullable: true
        isActive:
          type: boolean
          title: is_active
          description: Whether the supplier is active.
        businessIds:
          type: array
          items:
            type: string
          title: business_ids
          description: The ids of the business of the supplier.
      title: Supplier
      additionalProperties: false
    business.v1.UpdateSupplierRequest:
      type: object
      properties:
        supplier:
          title: supplier
          description: |-
            The supplier information to update.
             Note:Only the fields that are set will be updated.
          $ref: '#/components/schemas/business.v1.Supplier'
        logoRawImage:
          type: string
          title: logo_raw_image
          format: byte
          description: The raw image of the logo of the supplier.
          nullable: true
        externalLinks:
          type: array
          items:
            $ref: '#/components/schemas/link.v1.ResourceLink'
          title: external_links
          description: The links of the supplier.
      title: UpdateSupplierRequest
      additionalProperties: false
    business.v1.UpdateSupplierResponse:
      type: object
      properties:
        supplier:
          title: supplier
          description: The updated supplier data.
          $ref: '#/components/schemas/business.v1.Supplier'
      title: UpdateSupplierResponse
      additionalProperties: false
    identity.v1.LoginRequest:
      type: object
      properties:
        password:
          type: string
          title: password
          description: The password of the user.
        email:
          type: string
          title: email
          format: email
          description: |-
            The email of the user.
             Note: required when phone_number and username are not set.
          nullable: true
        phoneNumber:
          type: string
          title: phone_number
          pattern: ^[0-9\+\-\(\)\s]+$
          description: |-
            The phone number of the user.
             Note: required when email and username are not set.
          nullable: true
        userName:
          type: string
          title: user_name
          pattern: ^@[a-zA-Z0-9_]+$
          description: |-
            The username of the user.
             Note: required when email and phone_number are not set.
          nullable: true
      title: LoginRequest
      additionalProperties: false
    identity.v1.LoginResponse:
      type: object
      properties:
        token:
          type: string
          title: token
          description: The token to use to authenticate the user in subsequent requests.
        refreshToken:
          type: string
          title: refresh_token
          description: The refresh token to use to refresh the token.
      title: LoginResponse
      additionalProperties: false
    identity.v1.RegisterRequest:
      type: object
      properties:
        userName:
          type: string
          title: user_name
          description: The unique identifier of the user.
        email:
          type: string
          title: email
          format: email
          description: The email address of the user.
        password:
          type: string
          title: password
          maxLength: 72
          minLength: 5
          description: The password of the user.
      title: RegisterRequest
      required:
        - password
      additionalProperties: false
      description: |-
        Register a new user with the minimum required information.
         The user will have to set a password later.
         For Business user registration, the business id is required.
    identity.v1.RegisterResponse:
      type: object
      properties:
        token:
          type: string
          title: token
          description: The token to use to authenticate the user in subsequent requests.
        refreshToken:
          type: string
          title: refresh_token
          description: The refresh token to use to refresh the token.
      title: RegisterResponse
      additionalProperties: false
    identity.v1.RequestPasswordResetRequest:
      type: object
      properties:
        uRef:
          type: string
          title: u_ref
          description: |
            The unique identifier of the user.
             For example, the email address or userId, later it will include the user name as well.
            string.is_user_ref // user_ref must be a valid email address or user id or @username
      title: RequestPasswordResetRequest
      additionalProperties: false
    identity.v1.RequestPasswordResetResponse:
      type: object
      properties:
        requestToken:
          type: string
          title: request_token
          description: The token to use to process the password reset request.
        verificationCode:
          type: string
          title: verification_code
          description: |-
            The verification code to use to process the password reset request.
             WARN: This field is only set if the user has not yet been verified.
          nullable: true
      title: RequestPasswordResetResponse
      additionalProperties: false
    identity.v1.ResetPasswordRequest:
      type: object
      properties:
        requestToken:
          type: string
          title: request_token
          description: The token to use to process the password reset request.
        password:
          type: string
          title: password
          description: The new password of the user.
        verificationCode:
          type: string
          title: verification_code
          description: The verification code sent to the user's email or phone number.
      title: ResetPasswordRequest
      additionalProperties: false
    identity.v1.ResetPasswordResponse:
      type: object
      properties:
        success:
          type: string
          title: success
          description: Whether the password was successfully reset.
      title: ResetPasswordResponse
      additionalProperties: false
    identity.v1.CheckStorePermissionRequest:
      type: object
      properties:
        userId:
          type: string
          title: user_id
          minLength: 3
        storeId:
          type: string
          title: store_id
          minLength: 3
        permissionField:
          type: string
          title: permission_field
          description: 'Example: "product.create_product_in_inventory"'
      title: CheckStorePermissionRequest
      required:
        - userId
        - storeId
      additionalProperties: false
    identity.v1.CheckStorePermissionResponse:
      type: object
      properties:
        hasPermission:
          type: boolean
          title: has_permission
      title: CheckStorePermissionResponse
      additionalProperties: false
    identity.v1.CreateStorePermissionRequest:
      type: object
      properties:
        permissions:
          title: permissions
          $ref: '#/components/schemas/identity.v1.StorePermissions'
        storeId:
          type: string
          title: store_id
          minLength: 3
      title: CreateStorePermissionRequest
      required:
        - storeId
      additionalProperties: false
    identity.v1.DeleteStorePermissionRequest:
      type: object
      properties:
        storePermissionId:
          type: string
          title: store_permission_id
          minLength: 3
      title: DeleteStorePermissionRequest
      required:
        - storePermissionId
      additionalProperties: false
    identity.v1.StoreInvoicePermission:
      type: object
      properties:
        readInvoice:
          type: boolean
          title: read_invoice
        createInvoice:
          type: boolean
          title: create_invoice
      title: StoreInvoicePermission
      additionalProperties: false
      description: / ----- INVOICE ----- ///
    identity.v1.StoreMemberPermission:
      type: object
      properties:
        readInformation:
          type: boolean
          title: read_information
        inviteMember:
          type: boolean
          title: invite_member
        updateMember:
          type: boolean
          title: update_member
        deleteMember:
          type: boolean
          title: delete_member
      title: StoreMemberPermission
      additionalProperties: false
      description: / ----- MEMBER ----- ///
    identity.v1.StoreOrderPermission:
      type: object
      properties:
        readOrder:
          type: boolean
          title: read_order
        createOrder:
          type: boolean
          title: create_order
      title: StoreOrderPermission
      additionalProperties: false
      description: / ----- ORDER ----- ///
    identity.v1.StorePermissions:
      type: object
      properties:
        product:
          title: product
          $ref: '#/components/schemas/identity.v1.StoreProductPermission'
        member:
          title: member
          $ref: '#/components/schemas/identity.v1.StoreMemberPermission'
        report:
          title: report
          $ref: '#/components/schemas/identity.v1.StoreReportPermission'
        order:
          title: order
          $ref: '#/components/schemas/identity.v1.StoreOrderPermission'
        invoice:
          title: invoice
          $ref: '#/components/schemas/identity.v1.StoreInvoicePermission'
        supplier:
          title: supplier
          $ref: '#/components/schemas/identity.v1.StoreSupplierPermission'
        transaction:
          title: transaction
          $ref: '#/components/schemas/identity.v1.StoreTransactionPermission'
      title: StorePermissions
      additionalProperties: false
      description: / ----- STORE PERMISSIONS (AGGREGATOR) ----- ///
    identity.v1.StoreProductPermission:
      type: object
      properties:
        readProductInInventory:
          type: boolean
          title: read_product_in_inventory
        createProductInInventory:
          type: boolean
          title: create_product_in_inventory
        updateProductInInventory:
          type: boolean
          title: update_product_in_inventory
        deleteProductInInventory:
          type: boolean
          title: delete_product_in_inventory
      title: StoreProductPermission
      additionalProperties: false
      description: / ----- PRODUCT ----- ///
    identity.v1.StoreReportPermission:
      type: object
      properties:
        readReport:
          type: boolean
          title: read_report
      title: StoreReportPermission
      additionalProperties: false
      description: / ----- REPORT ----- ///
    identity.v1.StoreSupplierPermission:
      type: object
      properties:
        readSupplier:
          type: boolean
          title: read_supplier
        createSupplier:
          type: boolean
          title: create_supplier
        updateSupplier:
          type: boolean
          title: update_supplier
        deleteSupplier:
          type: boolean
          title: delete_supplier
      title: StoreSupplierPermission
      additionalProperties: false
      description: / ----- SUPPLIER ----- ///
    identity.v1.StoreTransactionPermission:
      type: object
      properties:
        readTransaction:
          type: boolean
          title: read_transaction
        createTransaction:
          type: boolean
          title: create_transaction
        updateTransaction:
          type: boolean
          title: update_transaction
      title: StoreTransactionPermission
      additionalProperties: false
      description: / ----- TRANSACTION ----- ///
    identity.v1.SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
      title: SuccessResponse
      additionalProperties: false
    identity.v1.UpdateStorePermissionRequest:
      type: object
      properties:
        permissions:
          title: permissions
          $ref: '#/components/schemas/identity.v1.StorePermissions'
        storePermissionId:
          type: string
          title: store_permission_id
          minLength: 3
      title: UpdateStorePermissionRequest
      required:
        - storePermissionId
      additionalProperties: false
    identity.v1.ChangePasswordRequest:
      type: object
      properties:
        oldPassword:
          type: string
          title: old_password
          maxLength: 32
          minLength: 8
          description: |-
            The previous password of the user.
             TODO: Add more validation like capital letters, numbers, etc.
        newPassword:
          type: string
          title: new_password
          maxLength: 32
          minLength: 8
          description: |-
            The new password of the user.
             TODO: Add more validation like capital letters, numbers, etc.
      title: ChangePasswordRequest
      additionalProperties: false
    identity.v1.ChangePasswordResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the password was successfully changed.
      title: ChangePasswordResponse
      additionalProperties: false
    identity.v1.DeleteUserRequest:
      type: object
      properties:
        requestToken:
          type: string
          title: request_token
          description: The token to use to process the deletion of the user.
        verificationCode:
          type: string
          title: verification_code
          description: The verification code sent to the user's email or phone number.
      title: DeleteUserRequest
      additionalProperties: false
    identity.v1.DeleteUserResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the user was successfully deleted.
      title: DeleteUserResponse
      additionalProperties: false
    identity.v1.GetCurrentUserRequest:
      type: object
      title: GetCurrentUserRequest
      additionalProperties: false
      description: Empty message.
    identity.v1.GetCurrentUserResponse:
      type: object
      properties:
        me:
          title: me
          description: The user information for the currently authenticated user.
          $ref: '#/components/schemas/identity.v1.User'
      title: GetCurrentUserResponse
      additionalProperties: false
    identity.v1.GetMeRequest:
      type: object
      title: GetMeRequest
      additionalProperties: false
      description: Empty message.
    identity.v1.GetMeResponse:
      type: object
      properties:
        me:
          title: me
          description: The user information for the currently authenticated user.
          $ref: '#/components/schemas/identity.v1.User'
      title: GetMeResponse
      additionalProperties: false
    identity.v1.GetUserRequest:
      type: object
      properties:
        userId:
          type: string
          title: user_id
          minLength: 3
          description: The id of the user to retrieve.
      title: GetUserRequest
      required:
        - userId
      additionalProperties: false
    identity.v1.GetUserResponse:
      type: object
      properties:
        user:
          title: user
          description: The retrieved user data.
          $ref: '#/components/schemas/identity.v1.User'
      title: GetUserResponse
      additionalProperties: false
    identity.v1.RequestDeleteUserRequest:
      type: object
      properties:
        userId:
          type: string
          title: user_id
          minLength: 3
          description: The id of the user to delete.
        password:
          type: string
          title: password
          description: The password of the user to delete.
      title: RequestDeleteUserRequest
      required:
        - userId
      additionalProperties: false
    identity.v1.RequestDeleteUserResponse:
      type: object
      properties:
        requestToken:
          type: string
          title: request_token
          description: |-
            The token to use to process the deletion of the user
             after verification (email or phone number).
      title: RequestDeleteUserResponse
      additionalProperties: false
    identity.v1.StreamUserRequest:
      type: object
      properties:
        userId:
          type: string
          title: user_id
          minLength: 3
          description: The id of the user to retrieve.
      title: StreamUserRequest
      required:
        - userId
      additionalProperties: false
    identity.v1.StreamUserResponse:
      type: object
      properties:
        user:
          title: user
          description: The retrieved user data.
          $ref: '#/components/schemas/identity.v1.User'
      title: StreamUserResponse
      additionalProperties: false
    identity.v1.UpdateMeRequest:
      type: object
      properties:
        user:
          title: user
          description: |-
            The user information to update.
             Note:Only the fields that are set will be updated.
             WARNING:
              - The id field is required and cannot be changed.
              - The password field will be ignored. Use the ChangePassword RPC instead.
          $ref: '#/components/schemas/identity.v1.User'
      title: UpdateMeRequest
      additionalProperties: false
    identity.v1.UpdateMeResponse:
      type: object
      properties:
        user:
          title: user
          description: The updated user data.
          $ref: '#/components/schemas/identity.v1.User'
      title: UpdateMeResponse
      additionalProperties: false
    identity.v1.UpdateRequest:
      type: object
      properties:
        user:
          title: user
          description: |-
            The user information to update.
             Note:Only the fields that are set will be updated.
             WARNING:
              - The id field is required and cannot be changed.
              - The password field will be ignored. Use the ChangePassword RPC instead.
          $ref: '#/components/schemas/identity.v1.User'
      title: UpdateRequest
      additionalProperties: false
    identity.v1.UpdateResponse:
      type: object
      properties:
        user:
          title: user
          description: The updated user data.
          $ref: '#/components/schemas/identity.v1.User'
      title: UpdateResponse
      additionalProperties: false
    inventory.v1.Category:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          description: Unique identifier for the category
          nullable: true
        name:
          title: name
          description: Name of the category (e.g., "Electronics", "Smart TVs")
          $ref: '#/components/schemas/inventory.v1.Internationalized'
        parentCategoryId:
          type: string
          title: parent_category_id
          description: Reference to parent category (empty for root categories)
          nullable: true
        status:
          title: status
          description: The status of the category.
          $ref: '#/components/schemas/inventory.v1.CategoryStatus'
        type:
          title: type
          description: The status of the category.
          $ref: '#/components/schemas/inventory.v1.CategoryType'
        businessId:
          type: string
          title: business_id
          minLength: 6
          description: Business ID associated with the category
          nullable: true
        createdAt:
          title: created_at
          description: Timestamp when the category was created
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        updatedAt:
          title: updated_at
          description: Timestamp when the category was last updated
          nullable: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: Category
      required:
        - businessId
      additionalProperties: false
    inventory.v1.CategoryStatus:
      type: string
      title: CategoryStatus
      enum:
        - CATEGORY_STATUS_UNSPECIFIED
        - CATEGORY_STATUS_ACTIVE
        - CATEGORY_STATUS_INACTIVE
    inventory.v1.CategoryType:
      type: string
      title: CategoryType
      enum:
        - CATEGORY_TYPE_STORE
        - CATEGORY_TYPE_BUSINESS
        - CATEGORY_TYPE_PRODUCT
    inventory.v1.CreateCategoryRequest:
      type: object
      properties:
        category:
          title: category
          description: The category information to create.
          $ref: '#/components/schemas/inventory.v1.Category'
      title: CreateCategoryRequest
      additionalProperties: false
    inventory.v1.CreateCategoryResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the category was successfully created.
      title: CreateCategoryResponse
      additionalProperties: false
    inventory.v1.DeleteCategoryRequest:
      type: object
      properties:
        categoryId:
          type: string
          title: category_id
          minLength: 3
          description: The unique identifier of the category.
      title: DeleteCategoryRequest
      required:
        - categoryId
      additionalProperties: false
    inventory.v1.DeleteCategoryResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the category was successfully deleted.
      title: DeleteCategoryResponse
      additionalProperties: false
    inventory.v1.FindCategoriesRequest:
      type: object
      properties:
        businessId:
          type: string
          title: business_id
          minLength: 3
          description: Find the category by business_id
        refId:
          type: string
          title: ref_id
          description: Find the category by ref_id
          nullable: true
        name:
          type: string
          title: name
          description: Find the category by name
          nullable: true
        parentCategoryId:
          type: string
          title: parent_category_id
          description: Find the category by parent_category_id
          nullable: true
        status:
          title: status
          description: Find the category by status
          nullable: true
          $ref: '#/components/schemas/inventory.v1.CategoryStatus'
        type:
          title: type
          description: Find the category by type
          nullable: true
          $ref: '#/components/schemas/inventory.v1.CategoryType'
      title: FindCategoriesRequest
      required:
        - businessId
      additionalProperties: false
    inventory.v1.FindCategoriesResponse:
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/inventory.v1.Category'
          title: categories
      title: FindCategoriesResponse
      additionalProperties: false
    inventory.v1.GetCategoryRequest:
      type: object
      properties:
        categoryId:
          type: string
          title: category_id
          minLength: 3
          description: The unique identifier of the category.
      title: GetCategoryRequest
      required:
        - categoryId
      additionalProperties: false
    inventory.v1.GetCategoryResponse:
      type: object
      properties:
        category:
          title: category
          description: The retrieved category data.
          $ref: '#/components/schemas/inventory.v1.Category'
      title: GetCategoryResponse
      additionalProperties: false
    inventory.v1.Internationalized:
      type: object
      properties:
        en:
          type: string
          title: en
          description: The English name of the product category.
        fr:
          type: string
          title: fr
          description: The French name of the product category.
      title: Internationalized
      additionalProperties: false
    inventory.v1.UpdateCategoryRequest:
      type: object
      properties:
        categoryId:
          type: string
          title: category_id
          minLength: 3
          description: The category information to update.
        category:
          title: category
          description: The category information to update.
          $ref: '#/components/schemas/inventory.v1.Category'
      title: UpdateCategoryRequest
      required:
        - categoryId
      additionalProperties: false
    inventory.v1.UpdateCategoryResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the category was successfully updated.
      title: UpdateCategoryResponse
      additionalProperties: false
    inventory.v1.AddStoreProductRequest:
      type: object
      properties:
        globalProduct:
          title: global_product
          description: |-
            The product to add.
             If the product does not exist, it will be created.
          $ref: '#/components/schemas/inventory.v1.GlobalProduct'
        storeProduct:
          title: store_product
          description: The store product to add.
          $ref: '#/components/schemas/inventory.v1.StoreProduct'
      title: AddStoreProductRequest
      additionalProperties: false
    inventory.v1.AddStoreProductResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the product was successfully added.
      title: AddStoreProductResponse
      additionalProperties: false
    inventory.v1.CreateGlobalProductRequest:
      type: object
      properties:
        globalProduct:
          title: global_product
          description: The global product to add.
          $ref: '#/components/schemas/inventory.v1.GlobalProduct'
      title: CreateGlobalProductRequest
      additionalProperties: false
    inventory.v1.CreateGlobalProductResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the global product was successfully added.
      title: CreateGlobalProductResponse
      additionalProperties: false
    inventory.v1.DeleteGlobalProductRequest:
      type: object
      properties:
        globalProductId:
          type: string
          title: global_product_id
          description: The unique identifier of the global product.
      title: DeleteGlobalProductRequest
      additionalProperties: false
    inventory.v1.DeleteGlobalProductResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the global product was successfully deleted.
      title: DeleteGlobalProductResponse
      additionalProperties: false
    inventory.v1.DeleteStoreProductRequest:
      type: object
      properties:
        storeProductId:
          type: string
          title: store_product_id
          minLength: 3
          description: The unique identifier of the store product.
      title: DeleteStoreProductRequest
      required:
        - storeProductId
      additionalProperties: false
    inventory.v1.DeleteStoreProductResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the store product was successfully deleted.
      title: DeleteStoreProductResponse
      additionalProperties: false
    inventory.v1.FindGlobalProductsRequest:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          description: The reference id to the global product identifier.
          nullable: true
        categories:
          type: array
          items:
            $ref: '#/components/schemas/inventory.v1.Category'
          title: categories
          description: The query to search for products by category.
        name:
          type: string
          title: name
          description: Query the product name.
          nullable: true
        barCodeValue:
          type: string
          title: bar_code_value
          description: Identify the products by bar code.
          nullable: true
        status:
          title: status
          description: Identify the products by store.
          nullable: true
          $ref: '#/components/schemas/inventory.v1.GlobalProductStatus'
      title: FindGlobalProductsRequest
      additionalProperties: false
    inventory.v1.FindGlobalProductsResponse:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/inventory.v1.GlobalProduct'
          title: products
          description: |-
            The unique identifiers of the products.
             WARN: all returned products will only have their id and name.
      title: FindGlobalProductsResponse
      additionalProperties: false
    inventory.v1.FindProductCategoryRequest:
      type: object
      properties:
        query:
          type: string
          title: query
          description: The query to search for product categories.
      title: FindProductCategoryRequest
      additionalProperties: false
    inventory.v1.FindProductCategoryResponse:
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/inventory.v1.Category'
          title: categories
          description: |-
            The unique identifiers of the product categories.
             WARN: all returned product categories will only have their id and name.
      title: FindProductCategoryResponse
      additionalProperties: false
    inventory.v1.FindStoreProductsRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          description: The query to search for store products.
        refId:
          type: string
          title: ref_id
          description: The unique identifier of the product.
          nullable: true
        globalProductId:
          type: string
          title: global_product_id
          description: The unique identifier of the global product.
          nullable: true
        expirationDate:
          title: expiration_date
          description: Identify the products that are expired.
          nullable: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        supplierId:
          type: string
          title: supplier_id
          description: Identify the products by supplier.
          nullable: true
      title: FindStoreProductsRequest
      additionalProperties: false
    inventory.v1.FindStoreProductsResponse:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/inventory.v1.StoreProduct'
          title: products
          description: |-
            The unique identifiers of the products.
             WARN: all returned products will only have their id and name.
      title: FindStoreProductsResponse
      additionalProperties: false
    inventory.v1.GetStoreProductRequest:
      type: object
      properties:
        storeProductId:
          type: string
          title: store_product_id
          minLength: 3
          description: The unique identifier of the store product.
      title: GetStoreProductRequest
      required:
        - storeProductId
      additionalProperties: false
    inventory.v1.GetStoreProductResponse:
      type: object
      properties:
        storeProduct:
          title: store_product
          description: The retrieved store product data.
          $ref: '#/components/schemas/inventory.v1.StoreProduct'
      title: GetStoreProductResponse
      additionalProperties: false
    inventory.v1.GlobalProduct:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          description: The unique identifier of the product.
          nullable: true
        name:
          title: name
          description: The name of the product.
          $ref: '#/components/schemas/inventory.v1.Internationalized'
        description:
          title: description
          description: The description of the product.
          nullable: true
          $ref: '#/components/schemas/inventory.v1.Internationalized'
        barCodeValue:
          type: string
          title: bar_code_value
          description: The bar code value of the product.
          nullable: true
        categories:
          type: array
          items:
            $ref: '#/components/schemas/inventory.v1.Category'
          title: categories
          description: The product categories of the product.
        imagesLinksIds:
          type: array
          items:
            type: string
          title: images_links_ids
          description: The list of image related to the product.
        status:
          title: status
          description: The status of the product.
          $ref: '#/components/schemas/inventory.v1.GlobalProductStatus'
      title: GlobalProduct
      additionalProperties: false
    inventory.v1.GlobalProductStatus:
      type: string
      title: GlobalProductStatus
      enum:
        - GLOBAL_PRODUCT_STATUS_UNSPECIFIED
        - GLOBAL_PRODUCT_STATUS_ACTIVE
        - GLOBAL_PRODUCT_STATUS_INACTIVE
    inventory.v1.ProductStatus:
      type: string
      title: ProductStatus
      enum:
        - PRODUCT_STATUS_UNSPECIFIED
        - PRODUCT_STATUS_ACTIVE
        - PRODUCT_STATUS_INACTIVE
    inventory.v1.StoreProduct:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          description: The unique identifier of the business product.
          nullable: true
        storeId:
          type: string
          title: store_id
          description: The unique identifier of the store.
        globalProductId:
          type: string
          title: global_product_id
          description: The unique identifier of the global product.
        salePrice:
          type: integer
          title: sale_price
          format: int32
          description: |-
            The sale price in XAF of the product.
             The currency is determined by the business.
          nullable: true
        imagesLinksIds:
          type: array
          items:
            type: string
          title: images_links_ids
          description: The media ids of the images of the product.
        stockQuantity:
          type: integer
          title: stock_quantity
          format: int32
          description: The current stock quantity of the product.
          nullable: true
        minStockThreshold:
          type: integer
          title: min_stock_threshold
          format: int32
          description: The minimum stock threshold of the product.
        expirationDate:
          title: expiration_date
          description: The expiration date of the product.
          nullable: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        createdAt:
          title: created_at
          description: The creation date of the product.
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        updatedAt:
          title: updated_at
          description: The last update date of the product.
          nullable: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        supplierId:
          type: string
          title: supplier_id
          description: The supplier.
          nullable: true
        costPrice:
          type: integer
          title: cost_price
          format: int32
          description: Current purchase/cost price.
          nullable: true
        status:
          title: status
          description: The status of the product.
          $ref: '#/components/schemas/inventory.v1.ProductStatus'
      title: StoreProduct
      additionalProperties: false
    inventory.v1.StreamGlobalProductsRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          description: The unique identifier of the store.
      title: StreamGlobalProductsRequest
      additionalProperties: false
    inventory.v1.StreamGlobalProductsResponse:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/inventory.v1.GlobalProduct'
          title: products
          description: The global products for the specified store.
      title: StreamGlobalProductsResponse
      additionalProperties: false
    inventory.v1.StreamStoreProductsRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          minLength: 3
          description: The unique identifier of the store.
        supplierId:
          type: string
          title: supplier_id
          description: Optional filter by supplier ID.
          nullable: true
        globalProductId:
          type: string
          title: global_product_id
          description: Optional filter by global product ID.
          nullable: true
      title: StreamStoreProductsRequest
      required:
        - storeId
      additionalProperties: false
    inventory.v1.StreamStoreProductsResponse:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/inventory.v1.StoreProduct'
          title: products
          description: The store products for the specified store.
      title: StreamStoreProductsResponse
      additionalProperties: false
    inventory.v1.UpdateGlobalProductRequest:
      type: object
      properties:
        globalProductId:
          type: string
          title: global_product_id
          description: The unique identifier of the global product.
        globalProduct:
          title: global_product
          description: The global product to update.
          $ref: '#/components/schemas/inventory.v1.GlobalProduct'
      title: UpdateGlobalProductRequest
      additionalProperties: false
    inventory.v1.UpdateGlobalProductResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the global product was successfully updated.
      title: UpdateGlobalProductResponse
      additionalProperties: false
    inventory.v1.UpdateStoreProductRequest:
      type: object
      properties:
        storeProduct:
          title: store_product
          description: |-
            The store product information to update.
             Note:Only the fields that are set will be updated.
             Some fields cannot be updated like the product id, store id, and all
             product fields.
          $ref: '#/components/schemas/inventory.v1.StoreProduct'
        globalProduct:
          title: global_product
          description: |-
            The global product information to update.
             Note:Only the fields that are set will be updated if there is no
             ref_id set for the global product or will be created in other case.
          nullable: true
          $ref: '#/components/schemas/inventory.v1.GlobalProduct'
        imagesRawImages:
          type: array
          items:
            type: string
            format: byte
          title: images_raw_images
          description: The media ids of the images of the product.
      title: UpdateStoreProductRequest
      additionalProperties: false
    inventory.v1.UpdateStoreProductResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the store product was successfully updated.
      title: UpdateStoreProductResponse
      additionalProperties: false
    inventory.v1.CreateStockInboundRequest:
      type: object
      properties:
        stockInbound:
          title: stock_inbound
          description: The stock inbound to create.
          $ref: '#/components/schemas/inventory.v1.StockInbound'
      title: CreateStockInboundRequest
      additionalProperties: false
    inventory.v1.CreateStockInboundResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the stock inbound was successfully created.
      title: CreateStockInboundResponse
      additionalProperties: false
    inventory.v1.FindStockInboundRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
      title: FindStockInboundRequest
      additionalProperties: false
    inventory.v1.FindStockInboundResponse:
      type: object
      properties:
        stockInbounds:
          type: array
          items:
            $ref: '#/components/schemas/inventory.v1.StockInbound'
          title: stock_inbounds
      title: FindStockInboundResponse
      additionalProperties: false
    inventory.v1.InboundType:
      type: string
      title: InboundType
      enum:
        - INBOUND_TYPE_UNSPECIFIED
        - INBOUND_TYPE_STOCK_IN
        - INBOUND_TYPE_CUSTOMER_RETURN
        - INBOUND_TYPE_ADJUSTMENT
    inventory.v1.StockInbound:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
        globalProductId:
          type: string
          title: global_product_id
          description: The unique identifier of the global product.
        inboundType:
          title: inbound_type
          description: Type of inbound stock
          $ref: '#/components/schemas/inventory.v1.InboundType'
        quantity:
          type: integer
          title: quantity
          format: int32
          description: Quantity added to inventory
        quantityBefore:
          type: integer
          title: quantity_before
          format: int32
          description: Stock quantity before this transaction
        quantityAfter:
          type: integer
          title: quantity_after
          format: int32
          description: Stock quantity after this transaction
        unitCost:
          type: integer
          title: unit_cost
          format: int32
          description: Purchase/cost price per unit
        supplierId:
          type: string
          title: supplier_id
          description: Supplier ID (for stock in transactions)
          nullable: true
        referenceNumber:
          type: string
          title: reference_number
          description: Reference number (PO number, invoice number, etc.)
          nullable: true
        batchNumber:
          type: string
          title: batch_number
          description: Batch/lot number (for traceability if needed)
          nullable: true
        reason:
          type: string
          title: reason
          description: Reason for the transaction (especially for adjustments)
          nullable: true
        batchExpiryDate:
          title: batch_expiry_date
          description: Expiration date for this batch (if applicable)
          nullable: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        createdAt:
          title: created_at
          description: When this supply was received/processed
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        performedBy:
          type: string
          title: performed_by
          description: User who performed the transaction
        storeId:
          type: string
          title: store_id
          description: The store id
      title: StockInbound
      additionalProperties: false
      description: Tracks all stock additions to inventory
    inventory.v1.UpdateStockInboundRequest:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
        quantity:
          type: integer
          title: quantity
          format: int32
          description: |-
            The quantity to update.
             Note the quantity  can be negative for adjustments.
          nullable: true
        reason:
          type: string
          title: reason
          nullable: true
        performedBy:
          type: string
          title: performed_by
          nullable: true
      title: UpdateStockInboundRequest
      additionalProperties: false
      description: Limit the update to only (reason, quantity for return or adjustment, performed_by)
    inventory.v1.UpdateStockInboundResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
      title: UpdateStockInboundResponse
      additionalProperties: false
    link.v1.GetResourceLinksRequest:
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
          title: ids
          description: A list of unique identifiers of the resource link to retrieve.
      title: GetResourceLinksRequest
      additionalProperties: false
    link.v1.GetResourceLinksResponse:
      type: object
      properties:
        link:
          type: object
          title: link
          additionalProperties:
            title: value
            $ref: '#/components/schemas/link.v1.ResourceLink'
          description: The retrieved resource link data list.
      title: GetResourceLinksResponse
      additionalProperties: false
    link.v1.GetResourceLinksResponse.LinkEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          title: value
          $ref: '#/components/schemas/link.v1.ResourceLink'
      title: LinkEntry
      additionalProperties: false
    order.v1.CreateInvoiceRequest:
      type: object
      properties:
        invoice:
          title: invoice
          description: The invoice to create.
          $ref: '#/components/schemas/order.v1.Invoice'
      title: CreateInvoiceRequest
      additionalProperties: false
    order.v1.CreateInvoiceResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: The invoice of the order.
        error:
          type: string
          title: error
          description: The error message.
      title: CreateInvoiceResponse
      additionalProperties: false
    order.v1.FindInvoiceRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          description: The invoice to get.
      title: FindInvoiceRequest
      additionalProperties: false
    order.v1.FindInvoiceResponse:
      type: object
      properties:
        invoices:
          type: array
          items:
            $ref: '#/components/schemas/order.v1.Invoice'
          title: invoices
          description: The invoice of the order.
      title: FindInvoiceResponse
      additionalProperties: false
    order.v1.Invoice:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          format: uuid
          description: The unique identifier of the invoice.
        orderId:
          type: string
          title: order_id
          description: The unique identifier of the order.
          nullable: true
        status:
          title: status
          description: The status of the invoice.
          $ref: '#/components/schemas/order.v1.InvoiceStatus'
        orderItems:
          type: array
          items:
            $ref: '#/components/schemas/order.v1.OrderItem'
          title: order_items
          description: The list of items in the invoice.
        payments:
          type: array
          items:
            $ref: '#/components/schemas/order.v1.Payment'
          title: payments
          description: |-
            The payment methods used to pay the invoice.
             Some time, user can use multiple payment methods to pay the invoice.
        totalDiscount:
          type: number
          title: total_discount
          format: double
          description: Total discounts applied (e.g., promotions)
        totalVat:
          type: number
          title: total_vat
          format: double
          description: |-
            Total tax/VAT amount
             Example: 300.0 (e.g., 5% VAT on 6000 XAF subtotal, assuming no discount: 6000 * 0.05 = 300 XAF)
        subtotal:
          type: number
          title: subtotal
          format: double
          description: |-
            Amount hors taxe: pre-tax, pre-discount total from order_items
             Example: 6000.0 (e.g., from the 3 items at 2000 XAF each: 3 * 2000 = 6000 XAF)
        total:
          type: number
          title: total
          format: double
          description: |-
            Amount with tax: subtotal - total_discount + total_vat
             Example: 5801.0 (e.g., subtotal 6000 - discount 500 + VAT 300= 5801 XAF)
        customerTenderedAmount:
          type: number
          title: customer_tendered_amount
          format: double
          description: |-
            Amount given by client (e.g., cash tendered).
             Example: 10000.0 (e.g., customer hands over 10000 XAF cash for a 6000 XAF total)
        changeGiven:
          type: number
          title: change_given
          format: double
          description: |-
            Amount refunded to client (e.g., change or overpayment refund) Set to 0 for pending cases.
             Example: 4000.0 (e.g., immediate cash refund for overpayment: 10000 tendered - 6000 grand_total = 4000 XAF given back)
        balanceDue:
          type: number
          title: balance_due
          format: double
          description: |-
            Unpaid balance: grand_total - paid_amount (covers remaining_to_pay)
             Example: -4000.0 (e.g., after paying 10000 XAF on a 6000 XAF total: 6000 - 10000 = -4000 XAF, meaning 4000 XAF owed to customer)
        voucherId:
          type: string
          title: voucher_id
          format: uuid
          description: The voucher used to pay the invoice.
          nullable: true
        createdAt:
          title: created_at
          description: The date and time the invoice was created.
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        deliveryDate:
          title: delivery_date
          description: The delivery date of the invoice.
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        storeId:
          type: string
          title: store_id
          description: The store id
      title: Invoice
      required:
        - refId
      additionalProperties: false
      description: |-
        The invoice of an order.
         The invoice is a PDF file that can be downloaded by the customer.
         It contains the order details, the customer details, the payment details.
    order.v1.InvoiceStatus:
      type: string
      title: InvoiceStatus
      enum:
        - INVOICE_STATUS_UNSPECIFIED
        - INVOICE_STATUS_PAID
        - INVOICE_STATUS_PENDING_REFUND
        - INVOICE_STATUS_REFUNDED
    order.v1.OrderItem:
      type: object
      properties:
        storeProductId:
          type: string
          title: store_product_id
          description: The unique identifier of the store product.
        quantity:
          type: integer
          title: quantity
          format: int32
          description: The quantity of the product.
        unitPrice:
          type: integer
          title: unit_price
          format: int32
          description: |-
            The unit price in XAF of the product.
             WARN: This value is stored because the unit price can change over time.
        itemName:
          type: string
          title: item_name
          description: The name of the product.
      title: OrderItem
      additionalProperties: false
    order.v1.Payment:
      type: object
      properties:
        amount:
          type: number
          title: amount
          format: double
        method:
          title: method
          $ref: '#/components/schemas/order.v1.PaymentMethod'
        referenceId:
          type: string
          title: reference_id
          description: |-
            The reference id of the payment.
             For voucher, it is the voucher id.
          nullable: true
        timestamp:
          title: timestamp
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: Payment
      additionalProperties: false
    order.v1.PaymentMethod:
      type: string
      title: PaymentMethod
      enum:
        - PAYMENT_METHOD_UNSPECIFIED
        - PAYMENT_METHOD_CASH
        - PAYMENT_METHOD_CARD
        - PAYMENT_METHOD_ORANGE_MONEY
        - PAYMENT_METHOD_MTN_MONEY
        - PAYMENT_METHOD_VOUCHER
        - PAYMENT_METHOD_MOBILE
    order.v1.UpdateInvoiceRequest:
      type: object
      properties:
        invoice:
          title: invoice
          description: The invoice to update.
          $ref: '#/components/schemas/order.v1.Invoice'
      title: UpdateInvoiceRequest
      additionalProperties: false
    order.v1.UpdateInvoiceResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the invoice was successfully updated.
      title: UpdateInvoiceResponse
      additionalProperties: false
    order.v1.CreateOrderRequest:
      type: object
      properties:
        order:
          title: order
          description: The order to create.
          $ref: '#/components/schemas/order.v1.Order'
      title: CreateOrderRequest
      additionalProperties: false
    order.v1.CreateOrderResponse:
      type: object
      properties:
        orderId:
          type: string
          title: order_id
          minLength: 3
          description: The unique identifier of the created order.
      title: CreateOrderResponse
      required:
        - orderId
      additionalProperties: false
    order.v1.DeleteOrderRequest:
      type: object
      properties:
        orderId:
          type: string
          title: order_id
          minLength: 3
          description: The unique identifier of the order to delete.
      title: DeleteOrderRequest
      required:
        - orderId
      additionalProperties: false
    order.v1.DeleteOrderResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the order was successfully deleted.
      title: DeleteOrderResponse
      additionalProperties: false
    order.v1.FindOrdersRequest:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          description: The unique identifier of the order to retrieve.
          nullable: true
        fromId:
          type: string
          title: from_id
          description: The id of the client or the supplier if available.
          nullable: true
        isClientOrder:
          type: string
          title: is_client_order
          description: Whether the order is from the client or the supplier.
          nullable: true
        status:
          type: array
          items:
            $ref: '#/components/schemas/order.v1.OrderStatus'
          title: status
          description: The status of the order.
        storeId:
          type: string
          title: store_id
          description: The unique identifier of the store associated with the order.
          nullable: true
      title: FindOrdersRequest
      additionalProperties: false
    order.v1.FindOrdersResponse:
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/order.v1.Order'
          title: orders
          description: The unique identifiers of the orders.
      title: FindOrdersResponse
      additionalProperties: false
    order.v1.GetOrderRequest:
      type: object
      properties:
        orderId:
          type: string
          title: order_id
          minLength: 3
          description: The unique identifier of the order to retrieve.
      title: GetOrderRequest
      required:
        - orderId
      additionalProperties: false
    order.v1.GetOrderResponse:
      type: object
      properties:
        order:
          title: order
          description: The retrieved order data.
          $ref: '#/components/schemas/order.v1.Order'
        createdAt:
          title: created_at
          description: The date and time the order was created.
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        updatedAt:
          title: updated_at
          description: The date and time the order was last updated.
          nullable: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: GetOrderResponse
      additionalProperties: false
    order.v1.Order:
      type: object
      allOf:
        - properties:
            refId:
              type: string
              title: ref_id
              description: The unique identifier of the order.
              nullable: true
            orderItems:
              type: array
              items:
                $ref: '#/components/schemas/order.v1.OrderItem'
              title: order_items
              description: The list of items in the order.
            orderPrices:
              title: order_prices
              description: The total price of the order in XAF.
              $ref: '#/components/schemas/order.v1.OrderPrices'
            status:
              title: status
              description: The status of the order.
              $ref: '#/components/schemas/order.v1.OrderStatus'
            statusHistory:
              type: array
              items:
                $ref: '#/components/schemas/order.v1.StatusHistory'
              title: status_history
              description: The status history.
            createdAt:
              title: created_at
              description: The date and time the order was created.
              $ref: '#/components/schemas/google.protobuf.Timestamp'
            updatedAt:
              title: updated_at
              description: The date and time the order was last updated.
              nullable: true
              $ref: '#/components/schemas/google.protobuf.Timestamp'
            storeId:
              type: string
              title: store_id
              format: uuid
              description: The unique identifier of the store associated with the order.
            initiatedBy:
              type: string
              title: initiated_by
              minLength: 3
              description: The unique identifier of the user who initiated the order.
            cancellationReason:
              type: string
              title: cancellation_reason
              description: The reason for the cancellation of the order.
              nullable: true
        - oneOf:
            - properties:
                purchaseOrder:
                  title: purchase_order
                  $ref: '#/components/schemas/order.v1.PurchaseOrder'
              title: purchase_order
              required:
                - purchaseOrder
            - properties:
                saleOrder:
                  title: sale_order
                  $ref: '#/components/schemas/order.v1.SaleOrder'
              title: sale_order
              required:
                - saleOrder
      title: Order
      required:
        - storeId
        - initiatedBy
      additionalProperties: false
    order.v1.OrderPrices:
      type: object
      properties:
        subtotal:
          type: integer
          title: subtotal
          format: int32
        discounts:
          type: integer
          title: discounts
          format: int32
        totalVatAmount:
          type: integer
          title: total_vat_amount
          format: int32
        grandTotal:
          type: integer
          title: grand_total
          format: int32
      title: OrderPrices
      additionalProperties: false
    order.v1.OrderStatus:
      type: string
      title: OrderStatus
      enum:
        - ORDER_STATUS_UNSPECIFIED
        - ORDER_STATUS_PENDING
        - ORDER_STATUS_PROCESSING
        - ORDER_STATUS_COMPLETED
        - ORDER_STATUS_CANCELLED
    order.v1.PurchaseOrder:
      type: object
      properties:
        expectedDeliveryDate:
          title: expected_delivery_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        supplierId:
          type: string
          title: supplier_id
          format: uuid
      title: PurchaseOrder
      required:
        - supplierId
      additionalProperties: false
    order.v1.SaleOrder:
      type: object
      properties:
        commitmentDate:
          title: commitment_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        clientId:
          type: string
          title: client_id
          format: uuid
          nullable: true
      title: SaleOrder
      additionalProperties: false
    order.v1.StatusHistory:
      type: object
      properties:
        status:
          title: status
          $ref: '#/components/schemas/order.v1.OrderStatus'
        updatedBy:
          type: string
          title: updated_by
        updatedAt:
          title: updated_at
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: StatusHistory
      additionalProperties: false
    order.v1.GenerateBillingRequest:
      type: object
      properties:
        orderId:
          type: string
          title: order_id
          description: The unique identifier of the order.
      title: GenerateBillingRequest
      additionalProperties: false
    order.v1.GenerateBillingResponse:
      type: object
      properties:
        orderReceipt:
          title: order_receipt
          description: The receipt of the order.
          $ref: '#/components/schemas/order.v1.OrderReceipt'
      title: GenerateBillingResponse
      additionalProperties: false
    order.v1.OrderReceipt:
      type: object
      properties:
        orderId:
          type: string
          title: order_id
          description: / ...order details...
        orderStatus:
          type: string
          title: order_status
        orderTotalPrice:
          type: string
          title: order_total_price
        orderCreatedAt:
          type: string
          title: order_created_at
        orderUpdatedAt:
          type: string
          title: order_updated_at
        orderResourceName:
          type: string
          title: order_resource_name
        orderResourceAddress:
          type: string
          title: order_resource_address
        orderResourcePhoneNumber:
          type: string
          title: order_resource_phone_number
        orderResourceEmail:
          type: string
          title: order_resource_email
        orderResourceLogoMediaId:
          type: string
          title: order_resource_logo_media_id
        orderItems:
          type: array
          items:
            $ref: '#/components/schemas/order.v1.OrderReceiptItem'
          title: order_items
      title: OrderReceipt
      additionalProperties: false
      description: |-
        The receipt of an order.
         The receipt is a PDF file that can be downloaded by the customer.
         It contains the order details, the customer details, the payment details.
    order.v1.OrderReceiptItem:
      type: object
      properties:
        productId:
          type: string
          title: product_id
        productName:
          type: string
          title: product_name
        productPrice:
          type: string
          title: product_price
        quantity:
          type: integer
          title: quantity
          format: int32
        receiptItemTotalPrice:
          type: integer
          title: receipt_item_total_price
          format: int32
      title: OrderReceiptItem
      additionalProperties: false
    order.v1.CreateVoucherRequest:
      type: object
      properties:
        voucher:
          title: voucher
          $ref: '#/components/schemas/order.v1.Voucher'
      title: CreateVoucherRequest
      additionalProperties: false
    order.v1.CreateVoucherResponse:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
      title: CreateVoucherResponse
      additionalProperties: false
    order.v1.FindVouchersRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          description: The store id.
      title: FindVouchersRequest
      additionalProperties: false
    order.v1.FindVouchersResponse:
      type: object
      properties:
        vouchers:
          type: array
          items:
            $ref: '#/components/schemas/order.v1.Voucher'
          title: vouchers
      title: FindVouchersResponse
      additionalProperties: false
    order.v1.GetVoucherRequest:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
      title: GetVoucherRequest
      additionalProperties: false
    order.v1.GetVoucherResponse:
      type: object
      properties:
        voucher:
          title: voucher
          $ref: '#/components/schemas/order.v1.Voucher'
      title: GetVoucherResponse
      additionalProperties: false
    order.v1.RedeemVoucherRequest:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
      title: RedeemVoucherRequest
      additionalProperties: false
    order.v1.RedeemVoucherResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
        error:
          type: string
          title: error
          nullable: true
      title: RedeemVoucherResponse
      additionalProperties: false
    order.v1.Voucher:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          format: uuid
        orderId:
          type: string
          title: order_id
          format: uuid
        invoiceId:
          type: string
          title: invoice_id
          format: uuid
        storeId:
          type: string
          title: store_id
          format: uuid
        amount:
          type: number
          title: amount
          format: double
        createdAt:
          title: created_at
          description: When the voucher was created.
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        expiryDate:
          title: expiry_date
          description: When the voucher expires.
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        status:
          title: status
          $ref: '#/components/schemas/order.v1.VoucherStatus'
        redeemedByReferenceId:
          type: string
          title: redeemed_by_reference_id
          description: |-
            Who redeemed the voucher.
             The voucher can be redeemed by another invoice.
          nullable: true
        redeemedAt:
          title: redeemed_at
          nullable: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        additionalInfo:
          type: string
          title: additional_info
          description: The additional information about the voucher.
          nullable: true
      title: Voucher
      required:
        - refId
        - orderId
        - invoiceId
        - storeId
      additionalProperties: false
    order.v1.VoucherStatus:
      type: string
      title: VoucherStatus
      enum:
        - VOUCHER_STATUS_UNSPECIFIED
        - VOUCHER_STATUS_ISSUED
        - VOUCHER_STATUS_REDEEMED
        - VOUCHER_STATUS_EXPIRED
    store.v1.AddUserToStoreRequest:
      type: object
      properties:
        email:
          type: string
          title: email
          description: The email of the user.
        permissions:
          title: permissions
          description: The permissions that the user has.
          $ref: '#/components/schemas/identity.v1.StorePermissions'
        storeId:
          type: string
          title: store_id
          description: The store id.
      title: AddUserToStoreRequest
      additionalProperties: false
    store.v1.AddUserToStoreResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the store was successfully deleted.
        storeMember:
          title: store_member
          description: The store member to return
          $ref: '#/components/schemas/store.v1.StoreMember'
      title: AddUserToStoreResponse
      additionalProperties: false
    store.v1.CreateStoreRequest:
      type: object
      properties:
        store:
          title: store
          description: The store information to create.
          $ref: '#/components/schemas/store.v1.Store'
        logoRawImage:
          type: string
          title: logo_raw_image
          format: byte
          description: The raw image of the logo of the store.
          nullable: true
      title: CreateStoreRequest
      additionalProperties: false
    store.v1.CreateStoreResponse:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          minLength: 3
          description: The unique identifier of the created store.
      title: CreateStoreResponse
      required:
        - storeId
      additionalProperties: false
    store.v1.DeleteStoreRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          minLength: 3
          description: The unique identifier of the store to delete.
      title: DeleteStoreRequest
      required:
        - storeId
      additionalProperties: false
    store.v1.DeleteStoreResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the store was successfully deleted.
      title: DeleteStoreResponse
      additionalProperties: false
    store.v1.GetBusinessStoresRequest:
      type: object
      properties:
        businessId:
          type: string
          title: business_id
          minLength: 3
          description: The reference id to the supplier identifier.
      title: GetBusinessStoresRequest
      required:
        - businessId
      additionalProperties: false
    store.v1.GetBusinessStoresResponse:
      type: object
      properties:
        stores:
          type: array
          items:
            $ref: '#/components/schemas/store.v1.Store'
          title: stores
          description: |-
            The list of stores of the business.
             Note: Only the ids and names of the stores are returned.
      title: GetBusinessStoresResponse
      additionalProperties: false
    store.v1.GetStoreMemberRequest:
      type: object
      properties:
        userId:
          type: string
          title: user_id
          minLength: 3
          description: The unique identifier of the user.
        storeId:
          type: string
          title: store_id
          minLength: 3
          description: The unique identifier of the store.
      title: GetStoreMemberRequest
      required:
        - userId
        - storeId
      additionalProperties: false
    store.v1.GetStoreMemberResponse:
      type: object
      properties:
        storeMember:
          title: store_member
          description: The store member.
          $ref: '#/components/schemas/store.v1.StoreMember'
      title: GetStoreMemberResponse
      additionalProperties: false
    store.v1.GetStoreMembersRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          minLength: 3
          description: The unique identifier of the store.
      title: GetStoreMembersRequest
      required:
        - storeId
      additionalProperties: false
    store.v1.GetStoreMembersResponse:
      type: object
      properties:
        storeMembers:
          type: array
          items:
            $ref: '#/components/schemas/store.v1.StoreMember'
          title: store_members
          description: The store members.
      title: GetStoreMembersResponse
      additionalProperties: false
    store.v1.GetStoreRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          minLength: 3
          description: The unique identifier of the store to retrieve.
      title: GetStoreRequest
      required:
        - storeId
      additionalProperties: false
    store.v1.GetStoreResponse:
      type: object
      properties:
        store:
          title: store
          description: The retrieved store data.
          $ref: '#/components/schemas/store.v1.Store'
      title: GetStoreResponse
      additionalProperties: false
    store.v1.RemoveUserFromStoreRequest:
      type: object
      properties:
        userId:
          type: string
          title: user_id
          minLength: 3
          description: The unique identifier of the user.
        storeId:
          type: string
          title: store_id
          minLength: 3
      title: RemoveUserFromStoreRequest
      required:
        - userId
        - storeId
      additionalProperties: false
    store.v1.RemoveUserFromStoreResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the user was successfully removed from the store.
      title: RemoveUserFromStoreResponse
      additionalProperties: false
    store.v1.SetStoreMemberStatusRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          minLength: 3
          description: The unique identifier of the store.
        userId:
          type: string
          title: user_id
          minLength: 3
          description: The unique identifier of the user.
        status:
          title: status
          description: The status of the user.
          $ref: '#/components/schemas/store.v1.StoreMemberStatus'
      title: SetStoreMemberStatusRequest
      required:
        - storeId
        - userId
      additionalProperties: false
    store.v1.SetStoreMemberStatusResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the member was successfully updated.
      title: SetStoreMemberStatusResponse
      additionalProperties: false
    store.v1.Store:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          description: The unique identifier of the store.
          nullable: true
        name:
          type: string
          title: name
          description: The name of the store.
        description:
          type: string
          title: description
          description: The description of the store.
          nullable: true
        logoLinkId:
          type: string
          title: logo_link_id
          description: The id of the media of the logo of the store.
          nullable: true
        externalLinksIds:
          type: string
          title: external_links_ids
          description: The list of external links of the store it can be an address link, a phone number, an email, a website etc.
          nullable: true
        businessId:
          type: string
          title: business_id
          description: The id of the business of the store.
        createdAt:
          title: created_at
          description: The date and time the store was created.
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        updatedAt:
          title: updated_at
          description: The date and time the store was last updated.
          nullable: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        contactInfo:
          type: string
          title: contact_info
          description: The business contact information.
          nullable: true
        address:
          type: string
          title: address
          description: The business address.
          nullable: true
        email:
          type: string
          title: email
          description: The business email.
          nullable: true
        costingMethod:
          title: costing_method
          description: The costing method of the store.
          nullable: true
          $ref: '#/components/schemas/store.v1.StoreCostingMethod'
      title: Store
      additionalProperties: false
      description: |-
        Stores are used to store products.
         Note: A store is not always a shop.
    store.v1.StoreCostingMethod:
      type: string
      title: StoreCostingMethod
      enum:
        - STORE_COSTING_METHOD_UNSPECIFIED
        - STORE_COSTING_METHOD_FIFO
        - STORE_COSTING_METHOD_AVERAGE
    store.v1.StoreMember:
      type: object
      properties:
        user:
          title: user
          description: The user.
          $ref: '#/components/schemas/identity.v1.User'
        storeId:
          type: string
          title: store_id
          description: The unique identifier of the store.
        permissions:
          title: permissions
          description: The permissions that the user has.
          $ref: '#/components/schemas/identity.v1.StorePermissions'
        memberSince:
          title: member_since
          description: The date since when the user became a member.
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        status:
          title: status
          description: The status of the user.
          $ref: '#/components/schemas/store.v1.StoreMemberStatus'
      title: StoreMember
      additionalProperties: false
    store.v1.StoreMemberStatus:
      type: string
      title: StoreMemberStatus
      enum:
        - STORE_MEMBER_STATUS_UNSPECIFIED
        - STORE_MEMBER_STATUS_ACTIVE
        - STORE_MEMBER_STATUS_PENDING
        - STORE_MEMBER_STATUS_INACTIVE
        - STORE_MEMBER_STATUS_BANNED
    store.v1.StreamStoreMembersRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          minLength: 3
          description: The unique identifier of the store.
      title: StreamStoreMembersRequest
      required:
        - storeId
      additionalProperties: false
    store.v1.StreamStoreMembersResponse:
      type: object
      properties:
        storeMembers:
          type: array
          items:
            $ref: '#/components/schemas/store.v1.StoreMember'
          title: store_members
          description: The store members.
      title: StreamStoreMembersResponse
      additionalProperties: false
    store.v1.UpdateStoreMemberRequest:
      type: object
      properties:
        userId:
          type: string
          title: user_id
          minLength: 3
          description: The unique identifier of the user.
        storeId:
          type: string
          title: store_id
          minLength: 3
          description: The unique identifier of the store.
        permissions:
          title: permissions
          description: The new permissions to add (optional).
          $ref: '#/components/schemas/identity.v1.StorePermissions'
      title: UpdateStoreMemberRequest
      required:
        - userId
        - storeId
      additionalProperties: false
    store.v1.UpdateStoreMemberResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the member was successfully updated.
        storeMember:
          title: store_member
          description: The updated store member.
          $ref: '#/components/schemas/store.v1.StoreMember'
      title: UpdateStoreMemberResponse
      additionalProperties: false
    store.v1.UpdateStoreRequest:
      type: object
      properties:
        store:
          title: store
          description: |-
            The store information to update.
             Note:Only the fields that are set will be updated.
          $ref: '#/components/schemas/store.v1.Store'
        logoRawImage:
          type: string
          title: logo_raw_image
          format: byte
          description: The raw image of the logo of the store.
          nullable: true
      title: UpdateStoreRequest
      additionalProperties: false
    store.v1.UpdateStoreResponse:
      type: object
      properties:
        store:
          title: store
          description: The updated store data.
          $ref: '#/components/schemas/store.v1.Store'
      title: UpdateStoreResponse
      additionalProperties: false
    store.v1.CreateSupplierRequest:
      type: object
      properties:
        supplier:
          title: supplier
          description: The supplier information to create.
          $ref: '#/components/schemas/store.v1.Supplier'
        logoRawImage:
          type: string
          title: logo_raw_image
          format: byte
          description: The raw image of the logo of the supplier.
          nullable: true
        externalLinks:
          type: array
          items:
            $ref: '#/components/schemas/link.v1.ResourceLink'
          title: external_links
          description: The links of the supplier.
      title: CreateSupplierRequest
      additionalProperties: false
    store.v1.CreateSupplierResponse:
      type: object
      properties:
        supplierId:
          type: string
          title: supplier_id
          minLength: 3
          description: The reference id to the supplier identifier.
      title: CreateSupplierResponse
      required:
        - supplierId
      additionalProperties: false
    store.v1.DeleteSupplierRequest:
      type: object
      properties:
        supplierId:
          type: string
          title: supplier_id
          minLength: 3
          description: The reference id to the supplier identifier.
      title: DeleteSupplierRequest
      required:
        - supplierId
      additionalProperties: false
    store.v1.DeleteSupplierResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the supplier was successfully deleted.
      title: DeleteSupplierResponse
      additionalProperties: false
    store.v1.GetStoreSuppliersRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          minLength: 3
          description: The reference id to the store identifier.
      title: GetStoreSuppliersRequest
      required:
        - storeId
      additionalProperties: false
    store.v1.GetStoreSuppliersResponse:
      type: object
      properties:
        suppliers:
          type: array
          items:
            $ref: '#/components/schemas/store.v1.Supplier'
          title: suppliers
          description: |-
            The list of suppliers of the store.
             Note: Only the ids and names of the suppliers are returned.
      title: GetStoreSuppliersResponse
      additionalProperties: false
    store.v1.GetSupplierRequest:
      type: object
      properties:
        supplierId:
          type: string
          title: supplier_id
          minLength: 3
          description: The reference id to the supplier identifier.
      title: GetSupplierRequest
      required:
        - supplierId
      additionalProperties: false
    store.v1.GetSupplierResponse:
      type: object
      properties:
        supplier:
          title: supplier
          description: The retrieved supplier data.
          $ref: '#/components/schemas/store.v1.Supplier'
      title: GetSupplierResponse
      additionalProperties: false
    store.v1.Link:
      type: object
      properties:
        label:
          type: string
          title: label
          description: The label of the link.
        url:
          type: string
          title: url
          description: |-
            The url of the link.
             Todo: We must automatically retrieve the icon of the link.
      title: Link
      additionalProperties: false
    store.v1.StreamStoreSuppliersRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          minLength: 3
          description: The reference id to the store identifier.
      title: StreamStoreSuppliersRequest
      required:
        - storeId
      additionalProperties: false
    store.v1.StreamStoreSuppliersResponse:
      type: object
      properties:
        suppliers:
          type: array
          items:
            $ref: '#/components/schemas/store.v1.Supplier'
          title: suppliers
          description: |-
            The list of suppliers of the store.
             Note: Only the ids and names of the suppliers are returned.
      title: StreamStoreSuppliersResponse
      additionalProperties: false
    store.v1.Supplier:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          description: The reference id to the supplier identifier.
          nullable: true
        name:
          type: string
          title: name
          description: The name of the supplier.
        description:
          type: string
          title: description
          description: The description of the supplier.
          nullable: true
        logoLinkId:
          type: string
          title: logo_link_id
          description: The id of the media of the logo of the supplier.
          nullable: true
        externalLinksIds:
          type: array
          items:
            type: string
          title: external_links_ids
          description: The links of the supplier.
        contactPhone:
          type: string
          title: contact_phone
          description: The contact phone number.
          nullable: true
        contactEmail:
          type: string
          title: contact_email
          description: The contact email.
          nullable: true
        contactAddress:
          type: string
          title: contact_address
          description: The contact address.
          nullable: true
        status:
          title: status
          description: Whether the supplier is active.
          $ref: '#/components/schemas/store.v1.SupplierStatus'
        storeIds:
          type: array
          items:
            type: string
          title: store_ids
          description: The ids of the store of the supplier.
      title: Supplier
      additionalProperties: false
    store.v1.SupplierStatus:
      type: string
      title: SupplierStatus
      enum:
        - SUPPLIER_STATUS_UNSPECIFIED
        - SUPPLIER_STATUS_ACTIVE
        - SUPPLIER_STATUS_INACTIVE
    store.v1.UpdateSupplierRequest:
      type: object
      properties:
        supplier:
          title: supplier
          description: |-
            The supplier information to update.
             Note:Only the fields that are set will be updated.
          $ref: '#/components/schemas/store.v1.Supplier'
        logoRawImage:
          type: string
          title: logo_raw_image
          format: byte
          description: The raw image of the logo of the supplier.
          nullable: true
        externalLinks:
          type: array
          items:
            $ref: '#/components/schemas/link.v1.ResourceLink'
          title: external_links
          description: The links of the supplier.
      title: UpdateSupplierRequest
      additionalProperties: false
    store.v1.UpdateSupplierResponse:
      type: object
      properties:
        supplier:
          title: supplier
          description: The updated supplier data.
          $ref: '#/components/schemas/store.v1.Supplier'
      title: UpdateSupplierResponse
      additionalProperties: false
    sync.v1.GetSyncOperationsStatusRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          description: Store ID
          nullable: true
        businessId:
          type: string
          title: business_id
          description: Business ID
          nullable: true
        userId:
          type: string
          title: user_id
          description: User ID
          nullable: true
        batchId:
          type: string
          title: batch_id
          description: Batch ID to check status for
          nullable: true
        operationIds:
          type: array
          items:
            type: string
          title: operation_ids
          description: List of operation IDs to check
        statusFilter:
          type: array
          items:
            $ref: '#/components/schemas/sync.v1.SyncOperationStatus'
          title: status_filter
          description: Filter by status
        entityTypeFilter:
          type: array
          items:
            $ref: '#/components/schemas/sync.v1.SyncEntityType'
          title: entity_type_filter
          description: Filter by entity type
        limit:
          type: integer
          title: limit
          format: int32
          description: Maximum number of results
          nullable: true
        offset:
          type: integer
          title: offset
          format: int32
          description: Offset for pagination
          nullable: true
      title: GetSyncOperationsStatusRequest
      additionalProperties: false
      description: Request to get sync operations status
    sync.v1.GetSyncOperationsStatusResponse:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/sync.v1.SyncOperation'
          title: operations
          description: List of operations with their current status
        totalCount:
          type: integer
          title: total_count
          format: int32
          description: Total number of operations matching the filter
        summary:
          title: summary
          description: Summary statistics
          $ref: '#/components/schemas/sync.v1.SyncOperationsSummary'
      title: GetSyncOperationsStatusResponse
      additionalProperties: false
      description: Response with sync operations status
    sync.v1.RetrySyncOperationsRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          description: Store ID
          nullable: true
        businessId:
          type: string
          title: business_id
          description: Business ID
          nullable: true
        userId:
          type: string
          title: user_id
          description: User ID
          nullable: true
        operationIds:
          type: array
          items:
            type: string
          title: operation_ids
          description: Specific operation IDs to retry
        batchId:
          type: string
          title: batch_id
          description: Batch ID to retry all operations in batch
          nullable: true
        retryAllFailed:
          type: boolean
          title: retry_all_failed
          description: Retry all failed operations (if no specific IDs provided)
          nullable: true
      title: RetrySyncOperationsRequest
      additionalProperties: false
      description: Request to retry failed sync operations
    sync.v1.RetrySyncOperationsResponse:
      type: object
      properties:
        operationsQueued:
          type: integer
          title: operations_queued
          format: int32
          description: Number of operations queued for retry
        queuedOperationIds:
          type: array
          items:
            type: string
          title: queued_operation_ids
          description: List of operation IDs that were queued for retry
        failedToQueueIds:
          type: array
          items:
            type: string
          title: failed_to_queue_ids
          description: List of operation IDs that could not be retried
      title: RetrySyncOperationsResponse
      additionalProperties: false
      description: Response to retry sync operations
    sync.v1.StreamSyncOperationsRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          description: Store ID
          nullable: true
        businessId:
          type: string
          title: business_id
          description: Business ID
          nullable: true
        userId:
          type: string
          title: user_id
          description: User ID
          nullable: true
        entityTypeFilter:
          type: array
          items:
            $ref: '#/components/schemas/sync.v1.SyncEntityType'
          title: entity_type_filter
          description: Filter by entity types
        operationTypeFilter:
          type: array
          items:
            $ref: '#/components/schemas/sync.v1.SyncOperationType'
          title: operation_type_filter
          description: Filter by operation types
      title: StreamSyncOperationsRequest
      additionalProperties: false
      description: Request to stream sync operations in real-time
    sync.v1.StreamSyncOperationsResponse:
      type: object
      properties:
        operation:
          title: operation
          description: The sync operation that was updated
          $ref: '#/components/schemas/sync.v1.SyncOperation'
        updateType:
          type: string
          title: update_type
          description: Type of update (created, updated, deleted)
        updateTimestamp:
          title: update_timestamp
          description: Timestamp of the update
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: StreamSyncOperationsResponse
      additionalProperties: false
      description: Response for streaming sync operations
    sync.v1.SubmitSyncOperationsRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          description: Store ID
          nullable: true
        businessId:
          type: string
          title: business_id
          description: Business ID
          nullable: true
        userId:
          type: string
          title: user_id
          description: User ID
          nullable: true
        operations:
          type: array
          items:
            $ref: '#/components/schemas/sync.v1.SyncOperation'
          title: operations
          minItems: 1
          description: List of operations to submit
        deviceId:
          type: string
          title: device_id
          description: Client device identifier
          nullable: true
        appVersion:
          type: string
          title: app_version
          description: Client application version
          nullable: true
      title: SubmitSyncOperationsRequest
      additionalProperties: false
      description: Request to submit sync operations
    sync.v1.SubmitSyncOperationsResponse:
      type: object
      properties:
        batchId:
          type: string
          title: batch_id
          description: Batch ID for submitted operations
        operationResults:
          type: array
          items:
            $ref: '#/components/schemas/sync.v1.SyncOperationResult'
          title: operation_results
          description: List of operation results
        batchStatus:
          title: batch_status
          description: Overall batch status
          $ref: '#/components/schemas/sync.v1.SyncOperationStatus'
        processedAt:
          title: processed_at
          description: Timestamp when batch was processed
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: SubmitSyncOperationsResponse
      additionalProperties: false
      description: Response to submit sync operations
    sync.v1.SyncEntityType:
      type: string
      title: SyncEntityType
      enum:
        - SYNC_ENTITY_TYPE_UNSPECIFIED
        - SYNC_ENTITY_TYPE_ORDER
      description: Enum for sync entity types
    sync.v1.SyncOperation:
      type: object
      allOf:
        - properties:
            refId:
              type: string
              title: ref_id
              minLength: 1
              description: Unique identifier for the operation
            operationType:
              title: operation_type
              description: Type of operation (create, update, delete)
              $ref: '#/components/schemas/sync.v1.SyncOperationType'
            entityType:
              title: entity_type
              description: Type of entity being synchronized
              $ref: '#/components/schemas/sync.v1.SyncEntityType'
            entityId:
              type: string
              title: entity_id
              minLength: 1
              description: Unique identifier of the entity
            storeId:
              type: string
              title: store_id
              description: Store ID (if applicable)
              nullable: true
            businessId:
              type: string
              title: business_id
              description: Business ID (if applicable)
              nullable: true
            userId:
              type: string
              title: user_id
              description: User ID who performed the operation
              nullable: true
            createdAt:
              title: created_at
              description: Timestamp when operation was created
              $ref: '#/components/schemas/google.protobuf.Timestamp'
            updatedAt:
              title: updated_at
              description: Timestamp when operation was last updated
              $ref: '#/components/schemas/google.protobuf.Timestamp'
            status:
              title: status
              description: Current status of the operation
              $ref: '#/components/schemas/sync.v1.SyncOperationStatus'
            retryCount:
              type: integer
              title: retry_count
              format: int32
              description: Number of retry attempts
            maxRetries:
              type: integer
              title: max_retries
              format: int32
              description: Maximum number of retries allowed
            nextRetryAt:
              title: next_retry_at
              description: Next retry timestamp (if applicable)
              nullable: true
              $ref: '#/components/schemas/google.protobuf.Timestamp'
            errorMessage:
              type: string
              title: error_message
              description: Error message (if operation failed)
              nullable: true
            metadata:
              type: object
              title: metadata
              additionalProperties:
                type: string
                title: value
              description: Additional metadata
        - oneOf:
            - properties:
                categoryData:
                  title: category_data
                  description: Product category data
                  $ref: '#/components/schemas/inventory.v1.Category'
              title: category_data
              required:
                - categoryData
            - properties:
                globalProductData:
                  title: global_product_data
                  description: Global product data
                  $ref: '#/components/schemas/inventory.v1.GlobalProduct'
              title: global_product_data
              required:
                - globalProductData
            - properties:
                jsonData:
                  type: string
                  title: json_data
                  description: Generic JSON data for other entities
              title: json_data
              required:
                - jsonData
            - properties:
                orderData:
                  title: order_data
                  description: Order data
                  $ref: '#/components/schemas/order.v1.Order'
              title: order_data
              required:
                - orderData
            - properties:
                storeProductData:
                  title: store_product_data
                  description: Store product data
                  $ref: '#/components/schemas/inventory.v1.StoreProduct'
              title: store_product_data
              required:
                - storeProductData
      title: SyncOperation
      additionalProperties: false
      description: A single sync operation
    sync.v1.SyncOperation.MetadataEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          type: string
          title: value
      title: MetadataEntry
      additionalProperties: false
    sync.v1.SyncOperationBatch:
      type: object
      properties:
        batchId:
          type: string
          title: batch_id
          minLength: 1
          description: Unique identifier for the batch
        operations:
          type: array
          items:
            $ref: '#/components/schemas/sync.v1.SyncOperation'
          title: operations
          description: List of operations in this batch
        storeId:
          type: string
          title: store_id
          description: Store ID for all operations in this batch
          nullable: true
        businessId:
          type: string
          title: business_id
          description: Business ID for all operations in this batch
          nullable: true
        userId:
          type: string
          title: user_id
          description: User ID who created this batch
          nullable: true
        createdAt:
          title: created_at
          description: Timestamp when batch was created
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        totalOperations:
          type: integer
          title: total_operations
          format: int32
          description: Total number of operations in batch
        successfulOperations:
          type: integer
          title: successful_operations
          format: int32
          description: Number of successful operations
        failedOperations:
          type: integer
          title: failed_operations
          format: int32
          description: Number of failed operations
        metadata:
          type: object
          title: metadata
          additionalProperties:
            type: string
            title: value
          description: Batch metadata
      title: SyncOperationBatch
      additionalProperties: false
      description: Batch of sync operations
    sync.v1.SyncOperationBatch.MetadataEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          type: string
          title: value
      title: MetadataEntry
      additionalProperties: false
    sync.v1.SyncOperationResult:
      type: object
      properties:
        operationId:
          type: string
          title: operation_id
          description: Operation ID
        status:
          title: status
          description: Result status
          $ref: '#/components/schemas/sync.v1.SyncOperationStatus'
        errorMessage:
          type: string
          title: error_message
          description: Error message (if failed)
          nullable: true
        serverEntityId:
          type: string
          title: server_entity_id
          description: Server-side entity ID (if different from client)
          nullable: true
        processedAt:
          title: processed_at
          description: Timestamp when operation was processed
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: SyncOperationResult
      additionalProperties: false
      description: Result of a single sync operation
    sync.v1.SyncOperationStatus:
      type: string
      title: SyncOperationStatus
      enum:
        - SYNC_OPERATION_STATUS_UNSPECIFIED
        - SYNC_OPERATION_STATUS_PENDING
        - SYNC_OPERATION_STATUS_IN_PROGRESS
        - SYNC_OPERATION_STATUS_SUCCESS
        - SYNC_OPERATION_STATUS_FAILED
        - SYNC_OPERATION_STATUS_RETRYING
        - SYNC_OPERATION_STATUS_ABANDONED
      description: Enum for sync operation status
    sync.v1.SyncOperationType:
      type: string
      title: SyncOperationType
      enum:
        - SYNC_OPERATION_TYPE_UNSPECIFIED
        - SYNC_OPERATION_TYPE_CREATE
        - SYNC_OPERATION_TYPE_UPDATE
        - SYNC_OPERATION_TYPE_DELETE
      description: Enum for sync operation types
    sync.v1.SyncOperationsSummary:
      type: object
      properties:
        totalOperations:
          type: integer
          title: total_operations
          format: int32
          description: Total operations
        pendingOperations:
          type: integer
          title: pending_operations
          format: int32
          description: Pending operations
        inProgressOperations:
          type: integer
          title: in_progress_operations
          format: int32
          description: In progress operations
        successfulOperations:
          type: integer
          title: successful_operations
          format: int32
          description: Successful operations
        failedOperations:
          type: integer
          title: failed_operations
          format: int32
          description: Failed operations
        retryingOperations:
          type: integer
          title: retrying_operations
          format: int32
          description: Retrying operations
        abandonedOperations:
          type: integer
          title: abandoned_operations
          format: int32
          description: Abandoned operations
      title: SyncOperationsSummary
      additionalProperties: false
      description: Summary of sync operations
    transaction.v1.AddTransactionRequest:
      type: object
      properties:
        transaction:
          title: transaction
          description: The transaction to add.
          $ref: '#/components/schemas/transaction.v1.Transaction'
      title: AddTransactionRequest
      additionalProperties: false
    transaction.v1.AddTransactionResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the transaction was successfully added.
      title: AddTransactionResponse
      additionalProperties: false
    transaction.v1.DeleteTransactionRequest:
      type: object
      properties:
        transactionId:
          type: string
          title: transaction_id
          description: The unique identifier of the transaction.
      title: DeleteTransactionRequest
      additionalProperties: false
    transaction.v1.DeleteTransactionResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the transaction was successfully deleted.
      title: DeleteTransactionResponse
      additionalProperties: false
    transaction.v1.FindTransactionsRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          minLength: 3
        orderId:
          type: string
          title: order_id
          nullable: true
        startDate:
          title: start_date
          nullable: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        endDate:
          title: end_date
          nullable: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        type:
          type: array
          items:
            $ref: '#/components/schemas/transaction.v1.TransactionType'
          title: type
        status:
          type: array
          items:
            $ref: '#/components/schemas/transaction.v1.TransactionStatus'
          title: status
      title: FindTransactionsRequest
      required:
        - storeId
      additionalProperties: false
    transaction.v1.FindTransactionsResponse:
      type: object
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/transaction.v1.Transaction'
          title: transactions
          description: The list of transactions found.
      title: FindTransactionsResponse
      additionalProperties: false
    transaction.v1.GetTransactionRequest:
      type: object
      properties:
        transactionId:
          type: string
          title: transaction_id
          description: The unique identifier of the transaction.
      title: GetTransactionRequest
      additionalProperties: false
    transaction.v1.GetTransactionResponse:
      type: object
      properties:
        transaction:
          title: transaction
          description: The retrieved transaction.
          $ref: '#/components/schemas/transaction.v1.Transaction'
      title: GetTransactionResponse
      additionalProperties: false
    transaction.v1.Transaction:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          description: The unique identifier of the transaction.
          nullable: true
        type:
          title: type
          description: The type of the transaction (sale, purchase, refund, etc.).
          $ref: '#/components/schemas/transaction.v1.TransactionType'
        status:
          title: status
          description: The status of the transaction (pending, completed, failed, cancelled).
          $ref: '#/components/schemas/transaction.v1.TransactionStatus'
        storeId:
          type: string
          title: store_id
          minLength: 3
          description: The unique identifier of the store associated with the transaction.
        orderId:
          type: string
          title: order_id
          description: The unique identifier of the order associated with the transaction.
          nullable: true
        fromId:
          type: string
          title: from_id
          description: The unique identifier of the client or supplier associated with the transaction.
          nullable: true
        amount:
          type: number
          title: amount
          format: double
          description: The amount of the transaction in XAF.
        currencyCode:
          type: string
          title: currency_code
          description: The currency code of the transaction (ISO 4217).
        createdAt:
          title: created_at
          description: The creation date of the transaction (ISO 8601).
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        updatedAt:
          title: updated_at
          description: The update date of the transaction (ISO 8601).
          nullable: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        description:
          type: string
          title: description
          description: 'The description or note of the transaction (ex. : "Refund for order cancellation").'
          nullable: true
        storeProductId:
          type: string
          title: store_product_id
          description: The unique identifier of the store product associated with the transaction.
          nullable: true
        quantity:
          type: integer
          title: quantity
          format: int32
          description: The quantity associated with the transaction (optional, for stock adjustments or stock transfers).
          nullable: true
        initiatedBy:
          type: string
          title: initiated_by
          description: The unique identifier of the user who initiated the transaction.
          nullable: true
        externalLinksIds:
          type: array
          items:
            type: string
          title: external_links_ids
          description: 'The external links of the transaction (ex. : payment receipt, invoice).'
      title: Transaction
      required:
        - storeId
        - currencyCode
      additionalProperties: false
      description: |-
        The Transaction represents an entry of actions impacting the stock or finances,
         such as sales, purchases, refunds, stock adjustments, or stock transfers.
         It ensures traceability of operations by capturing the user, date, product,
         associated order, amount or quantity, for audit and reports.
    transaction.v1.TransactionStatus:
      type: string
      title: TransactionStatus
      enum:
        - TRANSACTION_STATUS_UNSPECIFIED
        - TRANSACTION_STATUS_PENDING
        - TRANSACTION_STATUS_COMPLETED
        - TRANSACTION_STATUS_FAILED
        - TRANSACTION_STATUS_CANCELLED
    transaction.v1.TransactionType:
      type: string
      title: TransactionType
      enum:
        - TRANSACTION_TYPE_UNSPECIFIED
        - TRANSACTION_TYPE_SALE
        - TRANSACTION_TYPE_PURCHASE
        - TRANSACTION_TYPE_REFUND
        - TRANSACTION_TYPE_ADJUSTMENT
    transaction.v1.UpdateTransactionRequest:
      type: object
      properties:
        transaction:
          title: transaction
          description: The transaction to update.
          $ref: '#/components/schemas/transaction.v1.Transaction'
      title: UpdateTransactionRequest
      additionalProperties: false
    transaction.v1.UpdateTransactionResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the transaction was successfully updated.
      title: UpdateTransactionResponse
      additionalProperties: false
security: []
tags:
  - name: transaction.v1.TransactionService
