openapi: 3.1.0
info:
  title: transaction.v1
paths: {/business.v1.BusinessService/AssociateUserToBusiness: {post: {tags: [business.v1.BusinessService], summary: Associate user to business., description: Associate user to business., operationId: business.v1.BusinessService.AssociateUserToBusiness, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.AssociateUserToBusinessRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.AssociateUserToBusinessResponse'}}}}}}}, /business.v1.BusinessService/ChangeBusinessCurrency: {post: {tags: [business.v1.BusinessService], summary: Changes the business currency, description: Changes the business currency, operationId: business.v1.BusinessService.ChangeBusinessCurrency, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.ChangeBusinessCurrencyRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.ChangeBusinessCurrencyResponse'}}}}}}}, /business.v1.BusinessService/CreateBusiness: {post: {tags: [business.v1.BusinessService], summary: Create a new business., description: Create a new business., operationId: business.v1.BusinessService.CreateBusiness, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.CreateBusinessRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.CreateBusinessResponse'}}}}}}}, /business.v1.BusinessService/CreateUserToBusiness: {post: {tags: [business.v1.BusinessService], summary: Add user to business or invite user to business., description: Add user to business or invite user to business., operationId: business.v1.BusinessService.CreateUserToBusiness, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.CreateUserToBusinessRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.CreateUserToBusinessResponse'}}}}}}}, /business.v1.BusinessService/GetBusinessDetails: {post: {tags: [business.v1.BusinessService], summary: Get a business by id., description: Get a business by id., operationId: business.v1.BusinessService.GetBusinessDetails, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.GetBusinessDetailsRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.GetBusinessDetailsResponse'}}}}}}}, /business.v1.BusinessService/GetBusinessMember: {post: {tags: [business.v1.BusinessService], summary: Get a specific business member., description: Get a specific business member., operationId: business.v1.BusinessService.GetBusinessMember, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.GetBusinessMemberRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.GetBusinessMemberResponse'}}}}}}}, /business.v1.BusinessService/GetBusinessMembers: {post: {tags: [business.v1.BusinessService], summary: Get the users of the business., description: Get the users of the business., operationId: business.v1.BusinessService.GetBusinessMembers, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.GetBusinessMembersRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.GetBusinessMembersResponse'}}}}}}}, /business.v1.BusinessService/GetMyBusinesses: {post: {tags: [business.v1.BusinessService], summary: Get all businesses of the current user., description: Get all businesses of the current user., operationId: business.v1.BusinessService.GetMyBusinesses, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.GetMyBusinessesRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.GetMyBusinessesResponse'}}}}}}}, /business.v1.BusinessService/RemoveUserFromBusiness: {post: {tags: [business.v1.BusinessService], summary: 'Remove user from business.  If the user has been created by the business, the user will be deleted.  NOTE: The authenticated user need to have the permission to remove the  user.', description: "Remove user from business.\n If the user has been created by the business, the user will be deleted.\n NOTE: The authenticated user need to have the permission to remove the\n user.", operationId: business.v1.BusinessService.RemoveUserFromBusiness, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.RemoveUserFromBusinessRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.RemoveUserFromBusinessResponse'}}}}}}}, /business.v1.BusinessService/RequestDeleteBusiness: {post: {tags: [business.v1.BusinessService], summary: Request the deletion of the business. This request doesn't delete the business directly instead it put the business in inactive state and remove all business members., description: Request the deletion of the business. This request doesn't delete the business directly instead it put the business in inactive state and remove all business members., operationId: business.v1.BusinessService.RequestDeleteBusiness, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.RequestDeleteBusinessRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.RequestDeleteBusinessResponse'}}}}}}}, /business.v1.BusinessService/StreamBusinessMembers: {}, /business.v1.BusinessService/UpdateBusiness: {post: {tags: [business.v1.BusinessService], summary: Update a business., description: Update a business., operationId: business.v1.BusinessService.UpdateBusiness, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.UpdateBusinessRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.UpdateBusinessResponse'}}}}}}}, /business.v1.BusinessService/UpdateBusinessMember: {post: {tags: [business.v1.BusinessService], summary: 'Update a business member (role, status, permissions).', description: 'Update a business member (role, status, permissions).', operationId: business.v1.BusinessService.UpdateBusinessMember, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.UpdateBusinessMemberRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.UpdateBusinessMemberResponse'}}}}}}}, /business.v1.BusinessClientService/CreateBusinessClient: {post: {tags: [business.v1.BusinessClientService], summary: Creates a new client., description: Creates a new client., operationId: business.v1.BusinessClientService.CreateBusinessClient, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.CreateBusinessClientRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.CreateBusinessClientResponse'}}}}}}}, /business.v1.BusinessClientService/DeleteBusinessClient: {post: {tags: [business.v1.BusinessClientService], summary: Deletes a client., description: Deletes a client., operationId: business.v1.BusinessClientService.DeleteBusinessClient, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.DeleteBusinessClientRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.DeleteBusinessClientResponse'}}}}}}}, /business.v1.BusinessClientService/GetBusinessClient: {post: {tags: [business.v1.BusinessClientService], summary: Gets a client by id., description: Gets a client by id., operationId: business.v1.BusinessClientService.GetBusinessClient, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.GetBusinessClientRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.GetBusinessClientResponse'}}}}}}}, /business.v1.BusinessClientService/UpdateBusinessClient: {post: {tags: [business.v1.BusinessClientService], summary: 'Updates a client.  Note:Only the fields that are set will be updated.', description: "Updates a client.\n Note:Only the fields that are set will be updated.", operationId: business.v1.BusinessClientService.UpdateBusinessClient, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.UpdateBusinessClientRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.UpdateBusinessClientResponse'}}}}}}}, /business.v1.SupplierService/CreateSupplier: {post: {tags: [business.v1.SupplierService], summary: Creates a new supplier., description: Creates a new supplier., operationId: business.v1.SupplierService.CreateSupplier, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.CreateSupplierRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.CreateSupplierResponse'}}}}}}}, /business.v1.SupplierService/DeleteSupplier: {post: {tags: [business.v1.SupplierService], summary: Deletes a supplier., description: Deletes a supplier., operationId: business.v1.SupplierService.DeleteSupplier, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.DeleteSupplierRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.DeleteSupplierResponse'}}}}}}}, /business.v1.SupplierService/GetBusinessSuppliers: {post: {tags: [business.v1.SupplierService], summary: Gets all suppliers of a business., description: Gets all suppliers of a business., operationId: business.v1.SupplierService.GetBusinessSuppliers, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.GetBusinessSuppliersRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.GetBusinessSuppliersResponse'}}}}}}}, /business.v1.SupplierService/GetSupplier: {post: {tags: [business.v1.SupplierService], summary: Gets a supplier by id., description: Gets a supplier by id., operationId: business.v1.SupplierService.GetSupplier, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.GetSupplierRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.GetSupplierResponse'}}}}}}}, /business.v1.SupplierService/StreamBusinessSuppliers: {}, /business.v1.SupplierService/UpdateSupplier: {post: {tags: [business.v1.SupplierService], summary: 'Updates a supplier.  Note:Only the fields that are set will be updated. array fiels like external_links will be replaced.', description: "Updates a supplier.\n Note:Only the fields that are set will be updated. array fiels like external_links will be replaced.", operationId: business.v1.SupplierService.UpdateSupplier, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.UpdateSupplierRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/business.v1.UpdateSupplierResponse'}}}}}}}, /identity.v1.AuthService/Login: {post: {tags: [identity.v1.AuthService], summary: Authenticate the user with the given credentials., description: Authenticate the user with the given credentials., operationId: identity.v1.AuthService.Login, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/identity.v1.LoginRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/identity.v1.LoginResponse'}}}}}}}, /identity.v1.AuthService/Register: {post: {tags: [identity.v1.AuthService], summary: Create a user without a password., description: Create a user without a password., operationId: identity.v1.AuthService.Register, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/identity.v1.RegisterRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/identity.v1.RegisterResponse'}}}}}}}, /identity.v1.AuthService/RequestPasswordReset: {post: {tags: [identity.v1.AuthService], summary: Request the password reset of the user., description: Request the password reset of the user., operationId: identity.v1.AuthService.RequestPasswordReset, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/identity.v1.RequestPasswordResetRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/identity.v1.RequestPasswordResetResponse'}}}}}}}, /identity.v1.AuthService/ResetPassword: {post: {tags: [identity.v1.AuthService], summary: Process the password reset request., description: Process the password reset request., operationId: identity.v1.AuthService.ResetPassword, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/identity.v1.ResetPasswordRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/identity.v1.ResetPasswordResponse'}}}}}}}, /identity.v1.UserService/ChangePassword: {post: {tags: [identity.v1.UserService], summary: Change the password for the currently authenticated user., description: Change the password for the currently authenticated user., operationId: identity.v1.UserService.ChangePassword, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/identity.v1.ChangePasswordRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/identity.v1.ChangePasswordResponse'}}}}}}}, /identity.v1.UserService/DeleteUser: {post: {tags: [identity.v1.UserService], summary: Processes the deletion of the user account requested by the user., description: Processes the deletion of the user account requested by the user., operationId: identity.v1.UserService.DeleteUser, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/identity.v1.DeleteUserRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/identity.v1.DeleteUserResponse'}}}}}}}, /identity.v1.UserService/GetCurrentUser: {post: {tags: [identity.v1.UserService], summary: Get the user information for the currently authenticated user., description: Get the user information for the currently authenticated user., operationId: identity.v1.UserService.GetCurrentUser, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/identity.v1.GetCurrentUserRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/identity.v1.GetCurrentUserResponse'}}}}}}}, /identity.v1.UserService/GetMe: {post: {tags: [identity.v1.UserService], summary: Get the user information for the currently authenticated user.  @deprecated use GetCurrentUser instead., description: "Get the user information for the currently authenticated user.\n @deprecated use GetCurrentUser instead.", operationId: identity.v1.UserService.GetMe, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/identity.v1.GetMeRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/identity.v1.GetMeResponse'}}}}}}}, /identity.v1.UserService/GetUser: {post: {tags: [identity.v1.UserService], summary: Get the public information for the given user id., description: Get the public information for the given user id., operationId: identity.v1.UserService.GetUser, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/identity.v1.GetUserRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/identity.v1.GetUserResponse'}}}}}}}, /identity.v1.UserService/RequestDeleteUser: {post: {tags: [identity.v1.UserService], summary: Request the deletion of the user account.  This will send a verification code to the user's email address  or phone number., description: "Request the deletion of the user account.\n This will send a verification code to the user's email address\n or phone number.", operationId: identity.v1.UserService.RequestDeleteUser, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/identity.v1.RequestDeleteUserRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/identity.v1.RequestDeleteUserResponse'}}}}}}}, /identity.v1.UserService/StreamUser: {}, /identity.v1.UserService/Update: {post: {tags: [identity.v1.UserService], summary: Update the user information for the user., description: Update the user information for the user., operationId: identity.v1.UserService.Update, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/identity.v1.UpdateRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/identity.v1.UpdateResponse'}}}}}}}, /identity.v1.UserService/UpdateMe: {post: {tags: [identity.v1.UserService], summary: Update the user information for the currently authenticated user., description: Update the user information for the currently authenticated user., operationId: identity.v1.UserService.UpdateMe, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/identity.v1.UpdateMeRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/identity.v1.UpdateMeResponse'}}}}}}}, /inventory.v1.CategoryService/CreateCategory: {post: {tags: [inventory.v1.CategoryService], summary: Creates a new category., description: Creates a new category., operationId: inventory.v1.CategoryService.CreateCategory, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.CreateCategoryRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.CreateCategoryResponse'}}}}}}}, /inventory.v1.CategoryService/DeleteCategory: {post: {tags: [inventory.v1.CategoryService], summary: Deletes a category., description: Deletes a category., operationId: inventory.v1.CategoryService.DeleteCategory, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.DeleteCategoryRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.DeleteCategoryResponse'}}}}}}}, /inventory.v1.CategoryService/FindCategories: {post: {tags: [inventory.v1.CategoryService], summary: Finds categories by name., description: Finds categories by name., operationId: inventory.v1.CategoryService.FindCategories, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.FindCategoriesRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.FindCategoriesResponse'}}}}}}}, /inventory.v1.CategoryService/GetCategory: {post: {tags: [inventory.v1.CategoryService], summary: Gets a category by id., description: Gets a category by id., operationId: inventory.v1.CategoryService.GetCategory, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.GetCategoryRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.GetCategoryResponse'}}}}}}}, /inventory.v1.CategoryService/UpdateCategory: {post: {tags: [inventory.v1.CategoryService], summary: Updates a category., description: Updates a category., operationId: inventory.v1.CategoryService.UpdateCategory, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.UpdateCategoryRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.UpdateCategoryResponse'}}}}}}}, /inventory.v1.InventoryService/CheckProductAvailability: {post: {tags: [inventory.v1.InventoryService], summary: Checks if a product is available in a warehouse., description: Checks if a product is available in a warehouse., operationId: inventory.v1.InventoryService.CheckProductAvailability, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.CheckProductAvailabilityRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.CheckProductAvailabilityResponse'}}}}}}}, /inventory.v1.InventoryService/GetLowStockItems: {post: {tags: [inventory.v1.InventoryService], summary: Gets low stock items for a store., description: Gets low stock items for a store., operationId: inventory.v1.InventoryService.GetLowStockItems, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.GetLowStockItemsRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.GetLowStockItemsResponse'}}}}}}}, /inventory.v1.InventoryService/GetProductInventoryLevels: {post: {tags: [inventory.v1.InventoryService], summary: Gets the inventory levels of a product., description: Gets the inventory levels of a product., operationId: inventory.v1.InventoryService.GetProductInventoryLevels, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.GetProductInventoryLevelsRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.GetProductInventoryLevelsResponse'}}}}}}}, /inventory.v1.InventoryService/GetProductTransactionHistory: {post: {tags: [inventory.v1.InventoryService], summary: Gets the transaction history of a product., description: Gets the transaction history of a product., operationId: inventory.v1.InventoryService.GetProductTransactionHistory, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.GetProductTransactionHistoryRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.GetProductTransactionHistoryResponse'}}}}}}}, /inventory.v1.InventoryService/GetRecentInventoryTransactions: {post: {tags: [inventory.v1.InventoryService], summary: Gets recent inventory transactions for a store (for dashboard activity)., description: Gets recent inventory transactions for a store (for dashboard activity)., operationId: inventory.v1.InventoryService.GetRecentInventoryTransactions, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.GetInventoryTransactionHistoryRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.GetInventoryTransactionHistoryResponse'}}}}}}}, /inventory.v1.InventoryService/GetResourceInventory: {post: {tags: [inventory.v1.InventoryService], summary: Gets a snapshot of store inventory., description: Gets a snapshot of store inventory., operationId: inventory.v1.InventoryService.GetResourceInventory, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.GetResourceInventoryRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.GetResourceInventoryResponse'}}}}}}}, /inventory.v1.ProductService/AddProduct: {post: {tags: [inventory.v1.ProductService], summary: Adds a product to a store., description: Adds a product to a store., operationId: inventory.v1.ProductService.AddProduct, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.AddStoreProductRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.AddStoreProductResponse'}}}}}}}, /inventory.v1.ProductService/CreateGlobalProduct: {post: {tags: [inventory.v1.ProductService], summary: Creates a global product., description: Creates a global product., operationId: inventory.v1.ProductService.CreateGlobalProduct, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.CreateGlobalProductRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.CreateGlobalProductResponse'}}}}}}}, /inventory.v1.ProductService/DeleteGlobalProduct: {post: {tags: [inventory.v1.ProductService], summary: Deletes a global product., description: Deletes a global product., operationId: inventory.v1.ProductService.DeleteGlobalProduct, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.DeleteGlobalProductRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.DeleteGlobalProductResponse'}}}}}}}, /inventory.v1.ProductService/DeleteProduct: {post: {tags: [inventory.v1.ProductService], summary: Deletes a store product.  Only store products that are not in any orders can be deleted., description: "Deletes a store product.\n Only store products that are not in any orders can be deleted.", operationId: inventory.v1.ProductService.DeleteProduct, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.DeleteStoreProductRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.DeleteStoreProductResponse'}}}}}}}, /inventory.v1.ProductService/FindGlobalProducts: {post: {tags: [inventory.v1.ProductService], summary: Finds products by name., description: Finds products by name., operationId: inventory.v1.ProductService.FindGlobalProducts, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.FindGlobalProductsRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.FindGlobalProductsResponse'}}}}}}}, /inventory.v1.ProductService/FindProductCategory: {post: {tags: [inventory.v1.ProductService], summary: Finds categories by name., description: Finds categories by name., operationId: inventory.v1.ProductService.FindProductCategory, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.FindProductCategoryRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.FindProductCategoryResponse'}}}}}}}, /inventory.v1.ProductService/FindStoreProducts: {post: {tags: [inventory.v1.ProductService], summary: Finds products by name., description: Finds products by name., operationId: inventory.v1.ProductService.FindStoreProducts, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.FindStoreProductsRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.FindStoreProductsResponse'}}}}}}}, /inventory.v1.ProductService/GetProduct: {post: {tags: [inventory.v1.ProductService], summary: Gets a store product by id., description: Gets a store product by id., operationId: inventory.v1.ProductService.GetProduct, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.GetStoreProductRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.GetStoreProductResponse'}}}}}}}, /inventory.v1.ProductService/StreamGlobalProducts: {}, /inventory.v1.ProductService/StreamStoreProducts: {}, /inventory.v1.ProductService/UpdateGlobalProduct: {post: {tags: [inventory.v1.ProductService], summary: Updates a global product., description: Updates a global product., operationId: inventory.v1.ProductService.UpdateGlobalProduct, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.UpdateGlobalProductRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.UpdateGlobalProductResponse'}}}}}}}, /inventory.v1.ProductService/UpdateProduct: {post: {tags: [inventory.v1.ProductService], summary: Updates a store product., description: Updates a store product., operationId: inventory.v1.ProductService.UpdateProduct, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.UpdateStoreProductRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.UpdateStoreProductResponse'}}}}}}}, /inventory.v1.StockInboundService/CreateStockInbound: {post: {tags: [inventory.v1.StockInboundService], summary: Creates a stock in bound., description: Creates a stock in bound., operationId: inventory.v1.StockInboundService.CreateStockInbound, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.CreateStockInboundRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.CreateStockInboundResponse'}}}}}}}, /inventory.v1.StockInboundService/FindStockInbounds: {post: {tags: [inventory.v1.StockInboundService], summary: Finds the stock in bounds., description: Finds the stock in bounds., operationId: inventory.v1.StockInboundService.FindStockInbounds, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.FindStockInboundRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.FindStockInboundResponse'}}}}}}}, /inventory.v1.StockInboundService/UpdateStockInbound: {post: {tags: [inventory.v1.StockInboundService], summary: Updates the stock in bound., description: Updates the stock in bound., operationId: inventory.v1.StockInboundService.UpdateStockInbound, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.UpdateStockInboundRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.UpdateStockInboundResponse'}}}}}}}, /inventory.v1.StoreProductService/AddProduct: {post: {tags: [inventory.v1.StoreProductService], summary: Adds a product to a store., description: Adds a product to a store., operationId: inventory.v1.StoreProductService.AddProduct, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.AddStoreProductRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.AddStoreProductResponse'}}}}}}}, /inventory.v1.StoreProductService/CreateGlobalProduct: {post: {tags: [inventory.v1.StoreProductService], summary: Creates a global product., description: Creates a global product., operationId: inventory.v1.StoreProductService.CreateGlobalProduct, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.CreateGlobalProductRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.CreateGlobalProductResponse'}}}}}}}, /inventory.v1.StoreProductService/DeleteGlobalProduct: {post: {tags: [inventory.v1.StoreProductService], summary: Deletes a global product., description: Deletes a global product., operationId: inventory.v1.StoreProductService.DeleteGlobalProduct, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.DeleteGlobalProductRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.DeleteGlobalProductResponse'}}}}}}}, /inventory.v1.StoreProductService/DeleteStoreProduct: {post: {tags: [inventory.v1.StoreProductService], summary: Deletes a store product.  Only store products that are not in any orders can be deleted., description: "Deletes a store product.\n Only store products that are not in any orders can be deleted.", operationId: inventory.v1.StoreProductService.DeleteStoreProduct, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.DeleteStoreProductRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.DeleteStoreProductResponse'}}}}}}}, /inventory.v1.StoreProductService/FindGlobalProducts: {post: {tags: [inventory.v1.StoreProductService], summary: Finds products by name., description: Finds products by name., operationId: inventory.v1.StoreProductService.FindGlobalProducts, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.FindGlobalProductsRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.FindGlobalProductsResponse'}}}}}}}, /inventory.v1.StoreProductService/FindStoreProducts: {post: {tags: [inventory.v1.StoreProductService], summary: Finds products by name., description: Finds products by name., operationId: inventory.v1.StoreProductService.FindStoreProducts, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.FindStoreProductsRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.FindStoreProductsResponse'}}}}}}}, /inventory.v1.StoreProductService/GetStoreProduct: {post: {tags: [inventory.v1.StoreProductService], summary: Gets a store product by id., description: Gets a store product by id., operationId: inventory.v1.StoreProductService.GetStoreProduct, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.GetStoreProductRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.GetStoreProductResponse'}}}}}}}, /inventory.v1.StoreProductService/ListStoreProducts: {post: {tags: [inventory.v1.StoreProductService], summary: Lists products with pagination and filters., description: Lists products with pagination and filters., operationId: inventory.v1.StoreProductService.ListStoreProducts, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.ListStoreProductsRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.ListStoreProductsResponse'}}}}}}}, /inventory.v1.StoreProductService/StreamGlobalProducts: {}, /inventory.v1.StoreProductService/StreamStoreProducts: {}, /inventory.v1.StoreProductService/UpdateGlobalProduct: {post: {tags: [inventory.v1.StoreProductService], summary: Updates a global product., description: Updates a global product., operationId: inventory.v1.StoreProductService.UpdateGlobalProduct, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.UpdateGlobalProductRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.UpdateGlobalProductResponse'}}}}}}}, /inventory.v1.StoreProductService/UpdateStoreProduct: {post: {tags: [inventory.v1.StoreProductService], summary: Updates a store product., description: Updates a store product., operationId: inventory.v1.StoreProductService.UpdateStoreProduct, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.UpdateStoreProductRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/inventory.v1.UpdateStoreProductResponse'}}}}}}}, /link.v1.ResourceLinkService/GetResourceLinks: {post: {tags: [link.v1.ResourceLinkService], summary: Gets a resource link by id.  Returns the resources in the same order as the ids., description: "Gets a resource link by id.\n Returns the resources in the same order as the ids.", operationId: link.v1.ResourceLinkService.GetResourceLinks, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/link.v1.GetResourceLinksRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/link.v1.GetResourceLinksResponse'}}}}}}}, /logistic.v1.ReturnService/CreateCreditNoteFromReturn: {post: {tags: [logistic.v1.ReturnService], summary: Create credit note from return, description: Create credit note from return, operationId: logistic.v1.ReturnService.CreateCreditNoteFromReturn, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/logistic.v1.CreateCreditNoteFromReturnRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/logistic.v1.CreateCreditNoteFromReturnResponse'}}}}}}}, /logistic.v1.ReturnService/CreateCustomerReturn: {post: {tags: [logistic.v1.ReturnService], summary: Create a return note (customer returning to you), description: Create a return note (customer returning to you), operationId: logistic.v1.ReturnService.CreateCustomerReturn, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/logistic.v1.CreateCustomerReturnRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/logistic.v1.CreateCustomerReturnResponse'}}}}}}}, /logistic.v1.ReturnService/CreateDebitNoteFromReturn: {post: {tags: [logistic.v1.ReturnService], summary: Create debit note for supplier return, description: Create debit note for supplier return, operationId: logistic.v1.ReturnService.CreateDebitNoteFromReturn, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/logistic.v1.CreateDebitNoteFromReturnRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/logistic.v1.CreateDebitNoteFromReturnResponse'}}}}}}}, /logistic.v1.ReturnService/GetReturn: {post: {tags: [logistic.v1.ReturnService], summary: Get return details, description: Get return details, operationId: logistic.v1.ReturnService.GetReturn, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/logistic.v1.GetReturnRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/logistic.v1.GetReturnResponse'}}}}}}}, /logistic.v1.ReturnService/ListReturns: {post: {tags: [logistic.v1.ReturnService], summary: List returns, description: List returns, operationId: logistic.v1.ReturnService.ListReturns, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/logistic.v1.ListReturnsRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/logistic.v1.ListReturnsResponse'}}}}}}}, /logistic.v1.ReturnService/ProcessReturnRequest: {post: {tags: [logistic.v1.ReturnService], summary: Approve/reject a return request, description: Approve/reject a return request, operationId: logistic.v1.ReturnService.ProcessReturnRequest, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/logistic.v1.ProcessReturnRequestRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/logistic.v1.ProcessReturnRequestResponse'}}}}}}}, /order.v1.InvoiceService/CreateInvoice: {post: {tags: [order.v1.InvoiceService], summary: Creates an invoice for the order., description: Creates an invoice for the order., operationId: order.v1.InvoiceService.CreateInvoice, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.CreateInvoiceRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.CreateInvoiceResponse'}}}}}}}, /order.v1.InvoiceService/FindInvoices: {post: {tags: [order.v1.InvoiceService], summary: Finds the invoices., description: Finds the invoices., operationId: order.v1.InvoiceService.FindInvoices, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.FindInvoiceRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.FindInvoiceResponse'}}}}}}}, /order.v1.InvoiceService/UpdateInvoice: {post: {tags: [order.v1.InvoiceService], summary: Updates an invoice., description: Updates an invoice., operationId: order.v1.InvoiceService.UpdateInvoice, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.UpdateInvoiceRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.UpdateInvoiceResponse'}}}}}}}, /order.v1.OrderService/CreateOrder: {post: {tags: [order.v1.OrderService], summary: Creates a new order., description: Creates a new order., operationId: order.v1.OrderService.CreateOrder, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.CreateOrderRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.CreateOrderResponse'}}}}}}}, /order.v1.OrderService/DeleteOrder: {post: {tags: [order.v1.OrderService], summary: Deletes an order., description: Deletes an order., operationId: order.v1.OrderService.DeleteOrder, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.DeleteOrderRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.DeleteOrderResponse'}}}}}}}, /order.v1.OrderService/FindOrders: {post: {tags: [order.v1.OrderService], summary: Finds orders by query., description: Finds orders by query., operationId: order.v1.OrderService.FindOrders, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.FindOrdersRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.FindOrdersResponse'}}}}}}}, /order.v1.OrderService/GetOrder: {post: {tags: [order.v1.OrderService], summary: Gets an order by id., description: Gets an order by id., operationId: order.v1.OrderService.GetOrder, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.GetOrderRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.GetOrderResponse'}}}}}}}, /order.v1.PurchaseOrderService/CancelPurchaseOrder: {post: {tags: [order.v1.PurchaseOrderService], summary: Cancel purchase order, description: Cancel purchase order, operationId: order.v1.PurchaseOrderService.CancelPurchaseOrder, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.CancelPurchaseOrderRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.CancelPurchaseOrderResponse'}}}}}}}, /order.v1.PurchaseOrderService/CreatePurchaseOrder: {post: {tags: [order.v1.PurchaseOrderService], summary: Create a purchase order to supplier, description: Create a purchase order to supplier, operationId: order.v1.PurchaseOrderService.CreatePurchaseOrder, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.CreatePurchaseOrderRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.CreatePurchaseOrderResponse'}}}}}}}, /order.v1.PurchaseOrderService/CreateReceivingNote: {post: {tags: [order.v1.PurchaseOrderService], summary: Create receiving note when goods arrive, description: Create receiving note when goods arrive, operationId: order.v1.PurchaseOrderService.CreateReceivingNote, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.CreateReceivingNoteRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.CreateReceivingNoteResponse'}}}}}}}, /order.v1.PurchaseOrderService/GetPurchaseOrder: {post: {tags: [order.v1.PurchaseOrderService], summary: Get purchase order details, description: Get purchase order details, operationId: order.v1.PurchaseOrderService.GetPurchaseOrder, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.GetPurchaseOrderRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.GetPurchaseOrderResponse'}}}}}}}, /order.v1.PurchaseOrderService/GetSuggestedPurchaseOrders: {post: {tags: [order.v1.PurchaseOrderService], summary: Get suggested purchase orders (low stock items), description: Get suggested purchase orders (low stock items), operationId: order.v1.PurchaseOrderService.GetSuggestedPurchaseOrders, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.GetSuggestedPurchaseOrdersRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.GetSuggestedPurchaseOrdersResponse'}}}}}}}, /order.v1.PurchaseOrderService/ListPurchaseOrders: {post: {tags: [order.v1.PurchaseOrderService], summary: List purchase orders, description: List purchase orders, operationId: order.v1.PurchaseOrderService.ListPurchaseOrders, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.ListPurchaseOrdersRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.ListPurchaseOrdersResponse'}}}}}}}, /order.v1.PurchaseOrderService/UpdatePurchaseOrderStatus: {post: {tags: [order.v1.PurchaseOrderService], summary: Update purchase order status, description: Update purchase order status, operationId: order.v1.PurchaseOrderService.UpdatePurchaseOrderStatus, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.UpdatePurchaseOrderStatusRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.UpdatePurchaseOrderStatusResponse'}}}}}}}, /order.v1.BillingService/GenerateBilling: {post: {tags: [order.v1.BillingService], summary: Generates a billing for the order., description: Generates a billing for the order., operationId: order.v1.BillingService.GenerateBilling, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.GenerateBillingRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.GenerateBillingResponse'}}}}}}}, /order.v1.SalesOrderService/CancelSalesOrder: {post: {tags: [order.v1.SalesOrderService], summary: Cancel a sales order, description: Cancel a sales order, operationId: order.v1.SalesOrderService.CancelSalesOrder, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.CancelSalesOrderRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.CancelSalesOrderResponse'}}}}}}}, /order.v1.SalesOrderService/CreateDeliveryNote: {post: {tags: [order.v1.SalesOrderService], summary: Create delivery note from sales order, description: Create delivery note from sales order, operationId: order.v1.SalesOrderService.CreateDeliveryNote, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.CreateDeliveryNoteRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.CreateDeliveryNoteResponse'}}}}}}}, /order.v1.SalesOrderService/CreateInvoiceFromSalesOrder: {post: {tags: [order.v1.SalesOrderService], summary: Create invoice from sales order, description: Create invoice from sales order, operationId: order.v1.SalesOrderService.CreateInvoiceFromSalesOrder, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.CreateInvoiceFromSalesOrderRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.CreateInvoiceFromSalesOrderResponse'}}}}}}}, /order.v1.SalesOrderService/CreateSalesOrder: {post: {tags: [order.v1.SalesOrderService], summary: Create a sales order (customer order), description: Create a sales order (customer order), operationId: order.v1.SalesOrderService.CreateSalesOrder, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.CreateSalesOrderRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.CreateSalesOrderResponse'}}}}}}}, /order.v1.SalesOrderService/GetSalesOrder: {post: {tags: [order.v1.SalesOrderService], summary: Get sales order details, description: Get sales order details, operationId: order.v1.SalesOrderService.GetSalesOrder, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.GetSalesOrderRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.GetSalesOrderResponse'}}}}}}}, /order.v1.SalesOrderService/ListSalesOrders: {post: {tags: [order.v1.SalesOrderService], summary: List sales orders with filtering, description: List sales orders with filtering, operationId: order.v1.SalesOrderService.ListSalesOrders, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.ListSalesOrdersRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.ListSalesOrdersResponse'}}}}}}}, /order.v1.SalesOrderService/UpdateSalesOrderStatus: {post: {tags: [order.v1.SalesOrderService], summary: Update sales order status, description: Update sales order status, operationId: order.v1.SalesOrderService.UpdateSalesOrderStatus, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.UpdateSalesOrderStatusRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.UpdateSalesOrderStatusResponse'}}}}}}}, /order.v1.VoucherService/CreateVoucher: {post: {tags: [order.v1.VoucherService], summary: CreateVoucher, operationId: order.v1.VoucherService.CreateVoucher, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.CreateVoucherRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.CreateVoucherResponse'}}}}}}}, /order.v1.VoucherService/FindVouchers: {post: {tags: [order.v1.VoucherService], summary: FindVouchers, operationId: order.v1.VoucherService.FindVouchers, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.FindVouchersRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.FindVouchersResponse'}}}}}}}, /order.v1.VoucherService/GetVoucher: {post: {tags: [order.v1.VoucherService], summary: GetVoucher, operationId: order.v1.VoucherService.GetVoucher, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.GetVoucherRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.GetVoucherResponse'}}}}}}}, /order.v1.VoucherService/RedeemVoucher: {post: {tags: [order.v1.VoucherService], summary: RedeemVoucher, operationId: order.v1.VoucherService.RedeemVoucher, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.RedeemVoucherRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/order.v1.RedeemVoucherResponse'}}}}}}}, /payments.v1.GiftVoucherService/CancelVoucher: {post: {tags: [payments.v1.GiftVoucherService], summary: Cancel a voucher, description: Cancel a voucher, operationId: payments.v1.GiftVoucherService.CancelVoucher, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/payments.v1.CancelVoucherRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/payments.v1.CancelVoucherResponse'}}}}}}}, /payments.v1.GiftVoucherService/CreateGiftVoucher: {post: {tags: [payments.v1.GiftVoucherService], summary: Create a gift voucher (manual or from change shortage), description: Create a gift voucher (manual or from change shortage), operationId: payments.v1.GiftVoucherService.CreateGiftVoucher, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/payments.v1.CreateGiftVoucherRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/payments.v1.CreateGiftVoucherResponse'}}}}}}}, /payments.v1.GiftVoucherService/GetVoucher: {post: {tags: [payments.v1.GiftVoucherService], summary: Get voucher details, description: Get voucher details, operationId: payments.v1.GiftVoucherService.GetVoucher, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/payments.v1.GetVoucherRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/payments.v1.GetVoucherResponse'}}}}}}}, /payments.v1.GiftVoucherService/GetVoucherHistory: {post: {tags: [payments.v1.GiftVoucherService], summary: Get voucher usage history, description: Get voucher usage history, operationId: payments.v1.GiftVoucherService.GetVoucherHistory, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/payments.v1.GetVoucherHistoryRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/payments.v1.GetVoucherHistoryResponse'}}}}}}}, /payments.v1.GiftVoucherService/ListVouchers: {post: {tags: [payments.v1.GiftVoucherService], summary: List vouchers with filtering, description: List vouchers with filtering, operationId: payments.v1.GiftVoucherService.ListVouchers, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/payments.v1.ListVouchersRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/payments.v1.ListVouchersResponse'}}}}}}}, /payments.v1.GiftVoucherService/UseVoucher: {post: {tags: [payments.v1.GiftVoucherService], summary: Use voucher in transaction (called by PointOfSaleService), description: Use voucher in transaction (called by PointOfSaleService), operationId: payments.v1.GiftVoucherService.UseVoucher, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/payments.v1.UseVoucherRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/payments.v1.UseVoucherResponse'}}}}}}}, /payments.v1.GiftVoucherService/ValidateVoucher: {post: {tags: [payments.v1.GiftVoucherService], summary: Validate voucher before use, description: Validate voucher before use, operationId: payments.v1.GiftVoucherService.ValidateVoucher, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/payments.v1.ValidateVoucherRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/payments.v1.ValidateVoucherResponse'}}}}}}}, /payments.v1.PaymentService/CreatePayment: {post: {tags: [payments.v1.PaymentService], summary: Record a payment, description: Record a payment, operationId: payments.v1.PaymentService.CreatePayment, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/payments.v1.CreatePaymentRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/payments.v1.CreatePaymentResponse'}}}}}}}, /payments.v1.PaymentService/CreateRefund: {post: {tags: [payments.v1.PaymentService], summary: Process refund, description: Process refund, operationId: payments.v1.PaymentService.CreateRefund, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/payments.v1.CreateRefundRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/payments.v1.CreateRefundResponse'}}}}}}}, /payments.v1.PaymentService/GetPayment: {post: {tags: [payments.v1.PaymentService], summary: Get payment details, description: Get payment details, operationId: payments.v1.PaymentService.GetPayment, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/payments.v1.GetPaymentRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/payments.v1.GetPaymentResponse'}}}}}}}, /payments.v1.PaymentService/ListPayments: {post: {tags: [payments.v1.PaymentService], summary: List payments with filtering, description: List payments with filtering, operationId: payments.v1.PaymentService.ListPayments, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/payments.v1.ListPaymentsRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/payments.v1.ListPaymentsResponse'}}}}}}}, /payments.v1.PointOfSaleService/CreateCashReceipt: {post: {tags: [payments.v1.PointOfSaleService], summary: Create a cash receipt (most common - 95% of transactions), description: Create a cash receipt (most common - 95% of transactions), operationId: payments.v1.PointOfSaleService.CreateCashReceipt, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/payments.v1.CreateCashReceiptRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/payments.v1.CreateCashReceiptResponse'}}}}}}}, /payments.v1.PointOfSaleService/GetCashierDailySummary: {post: {tags: [payments.v1.PointOfSaleService], summary: Get daily sales summary for a cashier, description: Get daily sales summary for a cashier, operationId: payments.v1.PointOfSaleService.GetCashierDailySummary, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/payments.v1.GetCashierDailySummaryRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/payments.v1.GetCashierDailySummaryResponse'}}}}}}}, /payments.v1.PointOfSaleService/PayWithVoucher: {post: {tags: [payments.v1.PointOfSaleService], summary: Use gift voucher in payment, description: Use gift voucher in payment, operationId: payments.v1.PointOfSaleService.PayWithVoucher, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/payments.v1.PayWithVoucherRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/payments.v1.PayWithVoucherResponse'}}}}}}}, /payments.v1.PointOfSaleService/ProcessSaleWithVoucher: {post: {tags: [payments.v1.PointOfSaleService], summary: Handle insufficient change scenario (create invoice + gift voucher), description: Handle insufficient change scenario (create invoice + gift voucher), operationId: payments.v1.PointOfSaleService.ProcessSaleWithVoucher, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/payments.v1.ProcessSaleWithVoucherRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/payments.v1.ProcessSaleWithVoucherResponse'}}}}}}}, /reports.v1.DashboardReportingService/GetDashboardReport: {post: {tags: [reports.v1.DashboardReportingService], summary: Get comprehensive dashboard data with all calculated fields, description: Get comprehensive dashboard data with all calculated fields, operationId: reports.v1.DashboardReportingService.GetDashboardReport, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/reports.v1.GetDashboardReportRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/reports.v1.GetDashboardReportResponse'}}}}}}}, /reports.v1.ReportingService/GetBestSellingProducts: {post: {tags: [reports.v1.ReportingService], summary: Best selling products, description: Best selling products, operationId: reports.v1.ReportingService.GetBestSellingProducts, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/reports.v1.GetBestSellingProductsRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/reports.v1.GetBestSellingProductsResponse'}}}}}}}, /reports.v1.ReportingService/GetFinancialReport: {post: {tags: [reports.v1.ReportingService], summary: Comprehensive financial report with purchases and balances, description: Comprehensive financial report with purchases and balances, operationId: reports.v1.ReportingService.GetFinancialReport, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/reports.v1.GetFinancialReportRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/reports.v1.GetFinancialReportResponse'}}}}}}}, /reports.v1.ReportingService/GetInventoryMovementReport: {post: {tags: [reports.v1.ReportingService], summary: Inventory movement report, description: Inventory movement report, operationId: reports.v1.ReportingService.GetInventoryMovementReport, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/reports.v1.GetInventoryMovementReportRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/reports.v1.GetInventoryMovementReportResponse'}}}}}}}, /reports.v1.ReportingService/GetInventoryReport: {post: {tags: [reports.v1.ReportingService], summary: Comprehensive inventory report with aggregates, description: Comprehensive inventory report with aggregates, operationId: reports.v1.ReportingService.GetInventoryReport, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/reports.v1.GetInventoryReportRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/reports.v1.GetInventoryReportResponse'}}}}}}}, /reports.v1.ReportingService/GetProfitLossReport: {post: {tags: [reports.v1.ReportingService], summary: Profit & Loss report, description: Profit & Loss report, operationId: reports.v1.ReportingService.GetProfitLossReport, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/reports.v1.GetProfitLossReportRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/reports.v1.GetProfitLossReportResponse'}}}}}}}, /reports.v1.ReportingService/GetPurchaseReport: {post: {tags: [reports.v1.ReportingService], summary: Purchase report by period, description: Purchase report by period, operationId: reports.v1.ReportingService.GetPurchaseReport, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/reports.v1.GetPurchaseReportRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/reports.v1.GetPurchaseReportResponse'}}}}}}}, /reports.v1.ReportingService/GetSalesReport: {post: {tags: [reports.v1.ReportingService], summary: Sales report by period, description: Sales report by period, operationId: reports.v1.ReportingService.GetSalesReport, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/reports.v1.GetSalesReportRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/reports.v1.GetSalesReportResponse'}}}}}}}, /reports.v1.ReportingService/GetSalesReportFull: {post: {tags: [reports.v1.ReportingService], summary: Full sales report including best sellers, description: Full sales report including best sellers, operationId: reports.v1.ReportingService.GetSalesReportFull, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/reports.v1.GetSalesReportRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/reports.v1.GetSalesReportFullResponse'}}}}}}}, /reports.v1.ReportingService/GetStockAgingReport: {post: {tags: [reports.v1.ReportingService], summary: Stock aging report, description: Stock aging report, operationId: reports.v1.ReportingService.GetStockAgingReport, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/reports.v1.GetStockAgingReportRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/reports.v1.GetStockAgingReportResponse'}}}}}}}, /reports.v1.ReportingService/GetStorePurchaseHistory: {post: {tags: [reports.v1.ReportingService], summary: Store purchase history, description: Store purchase history, operationId: reports.v1.ReportingService.GetStorePurchaseHistory, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/reports.v1.GetStorePurchaseHistoryRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/reports.v1.GetStorePurchaseHistoryResponse'}}}}}}}, /reports.v1.ReportingService/GetSupplierPerformanceReport: {post: {tags: [reports.v1.ReportingService], summary: Supplier performance report, description: Supplier performance report, operationId: reports.v1.ReportingService.GetSupplierPerformanceReport, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/reports.v1.GetSupplierPerformanceReportRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/reports.v1.GetSupplierPerformanceReportResponse'}}}}}}}, /store.v1.StoreService/AddUserToStore: {post: {tags: [store.v1.StoreService], summary: Add user to store or invite user to store., description: Add user to store or invite user to store., operationId: store.v1.StoreService.AddUserToStore, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/store.v1.AddUserToStoreRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/store.v1.AddUserToStoreResponse'}}}}}}}, /store.v1.StoreService/CreateStore: {post: {tags: [store.v1.StoreService], summary: Creates a new store., description: Creates a new store., operationId: store.v1.StoreService.CreateStore, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/store.v1.CreateStoreRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/store.v1.CreateStoreResponse'}}}}}}}, /store.v1.StoreService/DeleteStore: {post: {tags: [store.v1.StoreService], summary: Deletes a store., description: Deletes a store., operationId: store.v1.StoreService.DeleteStore, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/store.v1.DeleteStoreRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/store.v1.DeleteStoreResponse'}}}}}}}, /store.v1.StoreService/GetBusinessStores: {post: {tags: [store.v1.StoreService], summary: Gets all stores base on business Id., description: Gets all stores base on business Id., operationId: store.v1.StoreService.GetBusinessStores, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/store.v1.GetBusinessStoresRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/store.v1.GetBusinessStoresResponse'}}}}}}}, /store.v1.StoreService/GetStore: {post: {tags: [store.v1.StoreService], summary: Gets a store by id., description: Gets a store by id., operationId: store.v1.StoreService.GetStore, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/store.v1.GetStoreRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/store.v1.GetStoreResponse'}}}}}}}, /store.v1.StoreService/GetStoreMember: {post: {tags: [store.v1.StoreService], summary: Get store member., description: Get store member., operationId: store.v1.StoreService.GetStoreMember, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/store.v1.GetStoreMemberRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/store.v1.GetStoreMemberResponse'}}}}}}}, /store.v1.StoreService/GetStoreMembers: {post: {tags: [store.v1.StoreService], summary: Get store members., description: Get store members., operationId: store.v1.StoreService.GetStoreMembers, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/store.v1.GetStoreMembersRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/store.v1.GetStoreMembersResponse'}}}}}}}, /store.v1.StoreService/RemoveUserFromStore: {post: {tags: [store.v1.StoreService], summary: Remove user from store., description: Remove user from store., operationId: store.v1.StoreService.RemoveUserFromStore, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/store.v1.RemoveUserFromStoreRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/store.v1.RemoveUserFromStoreResponse'}}}}}}}, /store.v1.StoreService/SetStoreMemberStatus: {post: {tags: [store.v1.StoreService], summary: Set store member status., description: Set store member status., operationId: store.v1.StoreService.SetStoreMemberStatus, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/store.v1.SetStoreMemberStatusRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/store.v1.SetStoreMemberStatusResponse'}}}}}}}, /store.v1.StoreService/StreamStoreMembers: {}, /store.v1.StoreService/UpdateStore: {post: {tags: [store.v1.StoreService], summary: 'Updates a store.  Note:Only the fields that are set will be updated.', description: "Updates a store.\n Note:Only the fields that are set will be updated.", operationId: store.v1.StoreService.UpdateStore, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/store.v1.UpdateStoreRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/store.v1.UpdateStoreResponse'}}}}}}}, /store.v1.StoreService/UpdateStoreMember: {post: {tags: [store.v1.StoreService], summary: Update store member., description: Update store member., operationId: store.v1.StoreService.UpdateStoreMember, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/store.v1.UpdateStoreMemberRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/store.v1.UpdateStoreMemberResponse'}}}}}}}, /store.v1.SupplierService/CreateSupplier: {post: {tags: [store.v1.SupplierService], summary: Creates a new supplier., description: Creates a new supplier., operationId: store.v1.SupplierService.CreateSupplier, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/store.v1.CreateSupplierRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/store.v1.CreateSupplierResponse'}}}}}}}, /store.v1.SupplierService/DeleteSupplier: {post: {tags: [store.v1.SupplierService], summary: Deletes a supplier., description: Deletes a supplier., operationId: store.v1.SupplierService.DeleteSupplier, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/store.v1.DeleteSupplierRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/store.v1.DeleteSupplierResponse'}}}}}}}, /store.v1.SupplierService/GetStoreSuppliers: {post: {tags: [store.v1.SupplierService], summary: Gets all suppliers of a store., description: Gets all suppliers of a store., operationId: store.v1.SupplierService.GetStoreSuppliers, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/store.v1.GetStoreSuppliersRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/store.v1.GetStoreSuppliersResponse'}}}}}}}, /store.v1.SupplierService/GetSupplier: {post: {tags: [store.v1.SupplierService], summary: Gets a supplier by id., description: Gets a supplier by id., operationId: store.v1.SupplierService.GetSupplier, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/store.v1.GetSupplierRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/store.v1.GetSupplierResponse'}}}}}}}, /store.v1.SupplierService/StreamStoreSuppliers: {}, /store.v1.SupplierService/UpdateSupplier: {post: {tags: [store.v1.SupplierService], summary: 'Updates a supplier.  Note:Only the fields that are set will be updated. array fields like external_links will be replaced.', description: "Updates a supplier.\n Note:Only the fields that are set will be updated. array fields like external_links will be replaced.", operationId: store.v1.SupplierService.UpdateSupplier, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/store.v1.UpdateSupplierRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/store.v1.UpdateSupplierResponse'}}}}}}}, /sync.v1.SyncService/GetSyncOperationsStatus: {post: {tags: [sync.v1.SyncService], summary: Get status of sync operations, description: Get status of sync operations, operationId: sync.v1.SyncService.GetSyncOperationsStatus, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/sync.v1.GetSyncOperationsStatusRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/sync.v1.GetSyncOperationsStatusResponse'}}}}}}}, /sync.v1.SyncService/RetrySyncOperations: {post: {tags: [sync.v1.SyncService], summary: Retry failed sync operations, description: Retry failed sync operations, operationId: sync.v1.SyncService.RetrySyncOperations, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/sync.v1.RetrySyncOperationsRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/sync.v1.RetrySyncOperationsResponse'}}}}}}}, /sync.v1.SyncService/StreamSyncOperations: {}, /sync.v1.SyncService/SubmitSyncOperations: {post: {tags: [sync.v1.SyncService], summary: Submit sync operations for processing, description: Submit sync operations for processing, operationId: sync.v1.SyncService.SubmitSyncOperations, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/sync.v1.SubmitSyncOperationsRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/sync.v1.SubmitSyncOperationsResponse'}}}}}}}, /transaction.v1.TransactionService/AddTransaction: {post: {tags: [transaction.v1.TransactionService], summary: Adds a transaction., description: Adds a transaction., operationId: transaction.v1.TransactionService.AddTransaction, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/transaction.v1.AddTransactionRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/transaction.v1.AddTransactionResponse'}}}}}}}, /transaction.v1.TransactionService/DeleteTransaction: {post: {tags: [transaction.v1.TransactionService], summary: Deletes a transaction., description: Deletes a transaction., operationId: transaction.v1.TransactionService.DeleteTransaction, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/transaction.v1.DeleteTransactionRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/transaction.v1.DeleteTransactionResponse'}}}}}}}, /transaction.v1.TransactionService/FindTransactions: {post: {tags: [transaction.v1.TransactionService], summary: Find transactions by query., description: Find transactions by query., operationId: transaction.v1.TransactionService.FindTransactions, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/transaction.v1.FindTransactionsRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/transaction.v1.FindTransactionsResponse'}}}}}}}, /transaction.v1.TransactionService/GetTransaction: {post: {tags: [transaction.v1.TransactionService], summary: Gets a transaction by id., description: Gets a transaction by id., operationId: transaction.v1.TransactionService.GetTransaction, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/transaction.v1.GetTransactionRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/transaction.v1.GetTransactionResponse'}}}}}}}, /transaction.v1.TransactionService/UpdateTransaction: {post: {tags: [transaction.v1.TransactionService], summary: Updates a transaction., description: Updates a transaction., operationId: transaction.v1.TransactionService.UpdateTransaction, parameters: [{name: Connect-Protocol-Version, in: header, required: true, schema: {$ref: '#/components/schemas/connect-protocol-version'}}, {name: Connect-Timeout-Ms, in: header, schema: {$ref: '#/components/schemas/connect-timeout-header'}}], requestBody: {content: {application/json: {schema: {$ref: '#/components/schemas/transaction.v1.UpdateTransactionRequest'}}}, required: true}, responses: {default: {description: Error, content: {application/json: {schema: {$ref: '#/components/schemas/connect.error'}}}}, "200": {description: Success, content: {application/json: {schema: {$ref: '#/components/schemas/transaction.v1.UpdateTransactionResponse'}}}}}}}}
components:
  schemas:
    audits.v1.InventoryTransaction:
      type: object
      properties:
        documentId:
          type: string
          title: document_id
          description: '"TXN-2025-00123"'
          nullable: true
        storeId:
          type: string
          title: store_id
        productId:
          type: string
          title: product_id
        transactionType:
          title: transaction_type
          $ref: '#/components/schemas/audits.v1.TransactionType'
        quantityChange:
          type: number
          title: quantity_change
          format: double
          description: Positive = increase, negative = decrease
        quantityBefore:
          type: number
          title: quantity_before
          format: double
          description: Stock level before
        quantityAfter:
          type: number
          title: quantity_after
          format: double
          description: Stock level after
        relatedDocumentType:
          type: string
          title: related_document_type
          description: '"DeliveryNote", "ReceivingNote", etc.'
        relatedDocumentId:
          type: string
          title: related_document_id
          description: ID of the document
        performedByUserId:
          type: string
          title: performed_by_user_id
        transactionTime:
          title: transaction_time
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        notes:
          type: string
          title: notes
        batchId:
          type: string
          title: batch_id
          description: Specific batch affected
      title: InventoryTransaction
      required:
        - documentId
      additionalProperties: false
      description: |-
        *
         InventoryTransaction (Journal des Mouvements)
         Complete audit trail of every inventory change.
         Auto-generated by all operations that affect stock.

         Fix: Added batch_id for lot-specific transactions.

         Example:
           transaction_id: "TXN-2025-00123"
           warehouse_id: "WH-001"
           product_id: "PRD-001"
           transaction_type: TXN_TYPE_SALE
           quantity_change: -10
           quantity_before: 100
           quantity_after: 90
           related_document_type: "DeliveryNote"
           related_document_id: "DN-2025-001"
           performed_by_user_id: "USR-003"
           batch_id: "BATCH-2025-001"
    audits.v1.TransactionType:
      type: string
      title: TransactionType
      enum:
        - TXN_TYPE_UNSPECIFIED
        - TXN_TYPE_PURCHASE
        - TXN_TYPE_SALE
        - TXN_TYPE_RETURN_IN
        - TXN_TYPE_RETURN_OUT
        - TXN_TYPE_TRANSFER_OUT
        - TXN_TYPE_TRANSFER_IN
        - TXN_TYPE_ADJUSTMENT
        - TXN_TYPE_DAMAGE
        - TXN_TYPE_THEFT
        - TXN_TYPE_INITIAL
        - TXN_TYPE_EXPIRATION
    google.protobuf.Timestamp:
      type: string
      examples:
        - "2023-01-15T01:30:15.01Z"
        - "2024-12-25T12:00:00Z"
      format: date-time
      description: |-
        A Timestamp represents a point in time independent of any time zone or local
         calendar, encoded as a count of seconds and fractions of seconds at
         nanosecond resolution. The count is relative to an epoch at UTC midnight on
         January 1, 1970, in the proleptic Gregorian calendar which extends the
         Gregorian calendar backwards to year one.

         All minutes are 60 seconds long. Leap seconds are "smeared" so that no leap
         second table is needed for interpretation, using a [24-hour linear
         smear](https://developers.google.com/time/smear).

         The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By
         restricting to that range, we ensure that we can convert to and from [RFC
         3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.

         # Examples

         Example 1: Compute Timestamp from POSIX `time()`.

             Timestamp timestamp;
             timestamp.set_seconds(time(NULL));
             timestamp.set_nanos(0);

         Example 2: Compute Timestamp from POSIX `gettimeofday()`.

             struct timeval tv;
             gettimeofday(&tv, NULL);

             Timestamp timestamp;
             timestamp.set_seconds(tv.tv_sec);
             timestamp.set_nanos(tv.tv_usec * 1000);

         Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.

             FILETIME ft;
             GetSystemTimeAsFileTime(&ft);
             UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;

             // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z
             // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.
             Timestamp timestamp;
             timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));
             timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));

         Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.

             long millis = System.currentTimeMillis();

             Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)
                 .setNanos((int) ((millis % 1000) * 1000000)).build();

         Example 5: Compute Timestamp from Java `Instant.now()`.

             Instant now = Instant.now();

             Timestamp timestamp =
                 Timestamp.newBuilder().setSeconds(now.getEpochSecond())
                     .setNanos(now.getNano()).build();

         Example 6: Compute Timestamp from current time in Python.

             timestamp = Timestamp()
             timestamp.GetCurrentTime()

         # JSON Mapping

         In JSON format, the Timestamp type is encoded as a string in the
         [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the
         format is "{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z"
         where {year} is always expressed using four digits while {month}, {day},
         {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional
         seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),
         are optional. The "Z" suffix indicates the timezone ("UTC"); the timezone
         is required. A proto3 JSON serializer should always use UTC (as indicated by
         "Z") when printing the Timestamp type and a proto3 JSON parser should be
         able to accept both UTC and other timezones (as indicated by an offset).

         For example, "2017-01-15T01:30:15.01Z" encodes 15.01 seconds past
         01:30 UTC on January 15, 2017.

         In JavaScript, one can convert a Date object to this format using the
         standard
         [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)
         method. In Python, a standard `datetime.datetime` object can be converted
         to this format using
         [`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with
         the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use
         the Joda Time's [`ISODateTimeFormat.dateTime()`](
         http://joda-time.sourceforge.net/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime()
         ) to obtain a formatter capable of generating timestamps in this format.
    business.v1.AssociateUserToBusinessRequest:
      type: object
      properties:
        userId:
          type: string
          title: user_id
          description: The unique identifier of the user.
        businessId:
          type: string
          title: business_id
          description: The unique identifier of the business.
      title: AssociateUserToBusinessRequest
      additionalProperties: false
      description: |-
        The unique identifier of the user.
         For example, the email address or @username.
         string u_ref = 1;
    business.v1.AssociateUserToBusinessResponse:
      type: object
      properties:
        businessMember:
          title: business_member
          description: The business member to return
          $ref: '#/components/schemas/business.v1.BusinessMember'
      title: AssociateUserToBusinessResponse
      additionalProperties: false
    business.v1.Business:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          description: The reference id to the business identifier.
          nullable: true
        name:
          type: string
          title: name
          description: The name of the business.
        description:
          type: string
          title: description
          description: The description of the business.
          nullable: true
        status:
          title: status
          description: The status of the business.
          $ref: '#/components/schemas/business.v1.BusinessStatusType'
        ownerId:
          type: string
          title: owner_id
          description: The id of the owner of the business.
        logoLinkId:
          type: string
          title: logo_link_id
          description: The id of the media of the logo of the business.
          nullable: true
        countryCode:
          type: string
          title: country_code
          description: |-
            The ISO 3166-1 alpha-2 country code of the business.
             e.g. CM, US, GB, etc.
        currencyCode:
          type: string
          title: currency_code
          description: |-
            The ISO 4217 currency code of the business.
             For example: XAF, USD, EUR, etc.
             Note: All price in the business will be in this currency.
        externalLinksIds:
          type: array
          items:
            type: string
          title: external_links_ids
          description: |-
            The media ids of different links of the business.
             It can be social media links, website links, etc.
        contactInfo:
          type: string
          title: contact_info
          description: The business contact information.
          nullable: true
        address:
          type: string
          title: address
          description: The business address.
          nullable: true
        email:
          type: string
          title: email
          description: The business email.
          nullable: true
      title: Business
      additionalProperties: false
    business.v1.BusinessMember:
      type: object
      properties:
        user:
          title: user
          description: The user.
          $ref: '#/components/schemas/identity.v1.User'
        businessId:
          type: string
          title: business_id
          description: The unique identifier of the business.
        memberSince:
          title: member_since
          description: The date since when the user became a member.
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        status:
          title: status
          description: The status of the user.
          $ref: '#/components/schemas/business.v1.BusinessMemberStatus'
      title: BusinessMember
      additionalProperties: false
    business.v1.BusinessMemberStatus:
      type: string
      title: BusinessMemberStatus
      enum:
        - BUSINESS_MEMBER_STATUS_UNSPECIFIED
        - BUSINESS_MEMBER_STATUS_ACTIVE
        - BUSINESS_MEMBER_STATUS_PENDING
        - BUSINESS_MEMBER_STATUS_INACTIVE
        - BUSINESS_MEMBER_STATUS_BANNED
    business.v1.BusinessStatusType:
      type: string
      title: BusinessStatusType
      enum:
        - BUSINESS_STATUS_TYPE_UNSPECIFIED
        - BUSINESS_STATUS_TYPE_ACTIVE
        - BUSINESS_STATUS_TYPE_INACTIVE
    business.v1.ChangeBusinessCurrencyRequest:
      type: object
      properties:
        currencyChangePolicy:
          title: currency_change_policy
          description: |-
            The policy to apply when changing the currency
             This field is required on currency change.
          $ref: '#/components/schemas/business.v1.CurrencyChangePolicyType'
        businessId:
          type: string
          title: business_id
          description: The unique ref id of the business.
        countryCode:
          type: string
          title: country_code
          description: |-
            The ISO 3166-1 alpha-2 country code of the business.
             e.g. CM, US, GB, etc.
      title: ChangeBusinessCurrencyRequest
      additionalProperties: false
    business.v1.ChangeBusinessCurrencyResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
      title: ChangeBusinessCurrencyResponse
      additionalProperties: false
    business.v1.CreateBusinessRequest:
      type: object
      properties:
        business:
          title: business
          description: |-
            The business information to create.
             Note:Only the fields that are set will be created.
          $ref: '#/components/schemas/business.v1.Business'
        logoRawImage:
          type: string
          title: logo_raw_image
          format: byte
          description: The raw image of the logo of the business.
          nullable: true
        externalLinks:
          type: array
          items:
            $ref: '#/components/schemas/link.v1.ResourceLink'
          title: external_links
          description: The links of the business.
      title: CreateBusinessRequest
      additionalProperties: false
    business.v1.CreateBusinessResponse:
      type: object
      properties:
        businessId:
          type: string
          title: business_id
          minLength: 3
          description: The reference id to the business identifier.
      title: CreateBusinessResponse
      required:
        - businessId
      additionalProperties: false
    business.v1.CreateUserToBusinessRequest:
      type: object
      properties:
        firstName:
          type: string
          title: first_name
          description: The first name of the user.
        lastName:
          type: string
          title: last_name
          description: The last name of the user.
        userName:
          type: string
          title: user_name
          description: The username of the user.
        phoneNumber:
          type: string
          title: phone_number
          description: The phone number of the user.
        email:
          type: string
          title: email
          description: The email of the user.
        password:
          type: string
          title: password
          description: The password of the user.
        businessId:
          type: string
          title: business_id
          description: The unique identifier of the business.
      title: CreateUserToBusinessRequest
      additionalProperties: false
      description: |-
        The unique identifier of the user.
         For example, the email address or @username.
         string u_ref = 1;
    business.v1.CreateUserToBusinessResponse:
      type: object
      properties:
        businessMember:
          title: business_member
          description: The business member to return
          $ref: '#/components/schemas/business.v1.BusinessMember'
      title: CreateUserToBusinessResponse
      additionalProperties: false
    business.v1.CurrencyChangePolicyType:
      type: string
      title: CurrencyChangePolicyType
      enum:
        - CURRENCY_CHANGE_POLICY_TYPE_UNSPECIFIED
        - CURRENCY_CHANGE_POLICY_TYPE_KEEP_PREVIOUS_CURRENCY_VALUE
        - CURRENCY_CHANGE_POLICY_TYPE_CONVERT_BASED_ON_CURRENT_EXCHANGE_RATE
    business.v1.GetBusinessDetailsRequest:
      type: object
      properties:
        businessId:
          type: string
          title: business_id
          minLength: 3
          description: The reference id to the business identifier.
      title: GetBusinessDetailsRequest
      required:
        - businessId
      additionalProperties: false
    business.v1.GetBusinessDetailsResponse:
      type: object
      properties:
        business:
          title: business
          description: The retrieved business data.
          $ref: '#/components/schemas/business.v1.Business'
      title: GetBusinessDetailsResponse
      additionalProperties: false
    business.v1.GetBusinessMemberRequest:
      type: object
      properties:
        userId:
          type: string
          title: user_id
          minLength: 3
          description: The unique identifier of the user.
        businessId:
          type: string
          title: business_id
          minLength: 3
          description: The unique identifier of the business.
      title: GetBusinessMemberRequest
      required:
        - userId
        - businessId
      additionalProperties: false
    business.v1.GetBusinessMemberResponse:
      type: object
      properties:
        businessMember:
          title: business_member
          description: The business member.
          $ref: '#/components/schemas/business.v1.BusinessMember'
      title: GetBusinessMemberResponse
      additionalProperties: false
    business.v1.GetBusinessMembersRequest:
      type: object
      properties:
        businessId:
          type: string
          title: business_id
          minLength: 3
          description: The reference id to the business identifier.
      title: GetBusinessMembersRequest
      required:
        - businessId
      additionalProperties: false
    business.v1.GetBusinessMembersResponse:
      type: object
      properties:
        businessMembers:
          type: array
          items:
            $ref: '#/components/schemas/business.v1.BusinessMember'
          title: business_members
          description: The set of business member
      title: GetBusinessMembersResponse
      additionalProperties: false
    business.v1.GetMyBusinessesRequest:
      type: object
      properties:
        ownerId:
          type: string
          title: owner_id
          description: The unique identifier of the user.
      title: GetMyBusinessesRequest
      additionalProperties: false
    business.v1.GetMyBusinessesResponse:
      type: object
      properties:
        businesses:
          type: array
          items:
            $ref: '#/components/schemas/business.v1.Business'
          title: businesses
      title: GetMyBusinessesResponse
      additionalProperties: false
    business.v1.RemoveUserFromBusinessRequest:
      type: object
      properties:
        userId:
          type: string
          title: user_id
          minLength: 3
          description: The unique identifier of the user.
        businessId:
          type: string
          title: business_id
          minLength: 3
      title: RemoveUserFromBusinessRequest
      required:
        - userId
        - businessId
      additionalProperties: false
    business.v1.RemoveUserFromBusinessResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the user was successfully removed from the business.
      title: RemoveUserFromBusinessResponse
      additionalProperties: false
    business.v1.RequestDeleteBusinessRequest:
      type: object
      properties:
        businessId:
          type: string
          title: business_id
          minLength: 3
          description: The reference id to the business identifier.
        password:
          type: string
          title: password
          description: |-
            The password of the user who is trying to delete the business.
             If the user doesn't have a password, he must set it before handling any deletion.
      title: RequestDeleteBusinessRequest
      required:
        - businessId
      additionalProperties: false
    business.v1.RequestDeleteBusinessResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the business will be deleted or not.
        noticePeriod:
          type: string
          title: notice_period
          description: The notice period before the business will be deleted.
      title: RequestDeleteBusinessResponse
      additionalProperties: false
    business.v1.StreamBusinessMembersRequest:
      type: object
      properties:
        businessId:
          type: string
          title: business_id
          minLength: 3
          description: The unique identifier of the business.
      title: StreamBusinessMembersRequest
      required:
        - businessId
      additionalProperties: false
    business.v1.StreamBusinessMembersResponse:
      type: object
      properties:
        businessMembers:
          type: array
          items:
            $ref: '#/components/schemas/business.v1.BusinessMember'
          title: business_members
          description: The business members.
      title: StreamBusinessMembersResponse
      additionalProperties: false
    business.v1.UpdateBusinessMemberRequest:
      type: object
      properties:
        userId:
          type: string
          title: user_id
          minLength: 3
          description: The unique identifier of the user.
        businessId:
          type: string
          title: business_id
          minLength: 3
          description: The unique identifier of the business.
      title: UpdateBusinessMemberRequest
      required:
        - userId
        - businessId
      additionalProperties: false
    business.v1.UpdateBusinessMemberResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the member was successfully updated.
        businessMember:
          title: business_member
          description: The updated business member.
          $ref: '#/components/schemas/business.v1.BusinessMember'
      title: UpdateBusinessMemberResponse
      additionalProperties: false
    business.v1.UpdateBusinessRequest:
      type: object
      properties:
        business:
          title: business
          description: |-
            The business information to update.
             Note:Only the fields that are set will be updated.
          $ref: '#/components/schemas/business.v1.Business'
        logoRawImage:
          type: string
          title: logo_raw_image
          format: byte
          description: The raw image of the logo of the business.
          nullable: true
        externalLinks:
          type: array
          items:
            $ref: '#/components/schemas/link.v1.ResourceLink'
          title: external_links
          description: The links of the business.
      title: UpdateBusinessRequest
      additionalProperties: false
    business.v1.UpdateBusinessResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the business was successfully updated.
      title: UpdateBusinessResponse
      additionalProperties: false
    connect-protocol-version:
      type: number
      title: Connect-Protocol-Version
      enum:
        - 1
      description: Define the version of the Connect protocol
      const: 1
    connect-timeout-header:
      type: number
      title: Connect-Timeout-Ms
      description: Define the timeout, in ms
    connect.error:
      type: object
      properties:
        code:
          type: string
          examples:
            - not_found
          enum:
            - canceled
            - unknown
            - invalid_argument
            - deadline_exceeded
            - not_found
            - already_exists
            - permission_denied
            - resource_exhausted
            - failed_precondition
            - aborted
            - out_of_range
            - unimplemented
            - internal
            - unavailable
            - data_loss
            - unauthenticated
          description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
        details:
          type: array
          items:
            $ref: '#/components/schemas/connect.error_details.Any'
          description: A list of messages that carry the error details. There is no limit on the number of messages.
      title: Connect Error
      additionalProperties: true
      description: 'Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation'
    connect.error_details.Any:
      type: object
      properties:
        type:
          type: string
          description: 'A URL that acts as a globally unique identifier for the type of the serialized message. For example: `type.googleapis.com/google.rpc.ErrorInfo`. This is used to determine the schema of the data in the `value` field and is the discriminator for the `debug` field.'
        value:
          type: string
          format: binary
          description: The Protobuf message, serialized as bytes and base64-encoded. The specific message type is identified by the `type` field.
        debug:
          oneOf:
            - type: object
              title: Any
              additionalProperties: true
              description: Detailed error information.
          discriminator:
            propertyName: type
          title: Debug
          description: Deserialized error detail payload. The 'type' field indicates the schema. This field is for easier debugging and should not be relied upon for application logic.
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message, with an additional debug field for ConnectRPC error details.
    identity.v1.AccountStatusType:
      type: string
      title: AccountStatusType
      enum:
        - ACCOUNT_STATUS_TYPE_UNSPECIFIED
        - ACCOUNT_STATUS_TYPE_ACTIVE
        - ACCOUNT_STATUS_TYPE_DELETED
    identity.v1.AuthActionType:
      type: string
      title: AuthActionType
      enum:
        - AUTH_ACTION_TYPE_UNSPECIFIED
        - AUTH_ACTION_TYPE_VERIFY_EMAIL
        - AUTH_ACTION_TYPE_VERIFY_PHONE_NUMBER
        - AUTH_ACTION_TYPE_INITIALIZE_PASSWORD
        - AUTH_ACTION_TYPE_RESET_PASSWORD
    identity.v1.ConnectedAccount:
      type: object
      properties:
        provider:
          title: provider
          description: |-
            The provider of the connected account.
             For example, "google.com" or "email".
          $ref: '#/components/schemas/identity.v1.ProviderType'
        rawData:
          type: string
          title: raw_data
          description: The raw information returned by the provider.
      title: ConnectedAccount
      additionalProperties: false
    identity.v1.ProviderType:
      type: string
      title: ProviderType
      enum:
        - PROVIDER_TYPE_UNSPECIFIED
        - PROVIDER_TYPE_FIREBASE_EMAIL
        - PROVIDER_TYPE_GOOGLE
        - PROVIDER_TYPE_INTERNAL_BUSINESS_AUTH
    identity.v1.User:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          description: The unique identifier of the user.
          nullable: true
        userName:
          type: string
          title: user_name
          description: '[public] The user name of the user.'
        connectedAccounts:
          type: array
          items:
            $ref: '#/components/schemas/identity.v1.ConnectedAccount'
          title: connected_accounts
          description: The connected accounts used by the user for authentication.
        email:
          type: string
          title: email
          format: email
          description: The email address of the user.
          nullable: true
        phoneNumber:
          type: string
          title: phone_number
          description: The phone number of the user.
          nullable: true
        firstName:
          type: string
          title: first_name
          description: '[public] The first name of the user.'
          nullable: true
        lastName:
          type: string
          title: last_name
          description: '[public] The last name of the user.'
          nullable: true
        profileLink:
          title: profile_link
          description: '[public] The profile link of the user.'
          nullable: true
          $ref: '#/components/schemas/link.v1.ResourceLink'
        accountStatus:
          title: account_status
          description: The status of the user's account.
          nullable: true
          $ref: '#/components/schemas/identity.v1.AccountStatusType'
        requiredActions:
          type: array
          items:
            $ref: '#/components/schemas/identity.v1.AuthActionType'
          title: required_actions
          description: The actions that the user must complete to authenticate.
      title: User
      additionalProperties: false
      description: |-
        The user record.
         The id of the user is the same as the uid of the Firebase user.
    link.v1.ResourceLink:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          description: The unique identifier of the resource link.
          nullable: true
        targetUri:
          type: string
          title: target_uri
          description: The link of the resource link.
        iconUri:
          type: string
          title: icon_uri
          description: The icon of the resource type or owner.
          nullable: true
        info:
          type: string
          title: info
          description: |-
            The meta data of the resource link.
             It can be the title of the target resource.
          nullable: true
        label:
          type: string
          title: label
          description: The label use to identify the resource type.
          nullable: true
      title: ResourceLink
      additionalProperties: false
      description: 'TODO: Auto delete resource link not linked to any other resource.'
    business.v1.BusinessClient:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          description: The reference id to the client identifier.
          nullable: true
        fullName:
          type: string
          title: full_name
          description: The name of the client.
        externalLinksIds:
          type: array
          items:
            type: string
          title: external_links_ids
          description: The links of the client it can contain client mail, phone number, website etc.
        logoLinkId:
          type: string
          title: logo_link_id
          description: The id of the media of the logo of the client.
          nullable: true
        businessId:
          type: string
          title: business_id
          minLength: 3
          description: The id of the business of the client.
      title: BusinessClient
      required:
        - businessId
      additionalProperties: false
    business.v1.CreateBusinessClientRequest:
      type: object
      properties:
        client:
          title: client
          description: The client information to create.
          $ref: '#/components/schemas/business.v1.BusinessClient'
        logoRawImage:
          type: string
          title: logo_raw_image
          format: byte
          description: The raw image of the logo of the client.
          nullable: true
      title: CreateBusinessClientRequest
      additionalProperties: false
    business.v1.CreateBusinessClientResponse:
      type: object
      properties:
        clientId:
          type: string
          title: client_id
          minLength: 3
          description: The reference id to the client identifier.
      title: CreateBusinessClientResponse
      required:
        - clientId
      additionalProperties: false
    business.v1.DeleteBusinessClientRequest:
      type: object
      properties:
        clientId:
          type: string
          title: client_id
          minLength: 3
          description: The reference id to the client identifier.
      title: DeleteBusinessClientRequest
      required:
        - clientId
      additionalProperties: false
    business.v1.DeleteBusinessClientResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the client was successfully deleted.
      title: DeleteBusinessClientResponse
      additionalProperties: false
    business.v1.GetBusinessClientRequest:
      type: object
      properties:
        clientId:
          type: string
          title: client_id
          minLength: 3
          description: The reference id to the client identifier.
      title: GetBusinessClientRequest
      required:
        - clientId
      additionalProperties: false
    business.v1.GetBusinessClientResponse:
      type: object
      properties:
        client:
          title: client
          description: The retrieved client data.
          $ref: '#/components/schemas/business.v1.BusinessClient'
      title: GetBusinessClientResponse
      additionalProperties: false
    business.v1.UpdateBusinessClientRequest:
      type: object
      properties:
        client:
          title: client
          description: |-
            The client information to update.
             Note:Only the fields that are set will be updated.
          $ref: '#/components/schemas/business.v1.BusinessClient'
        logoRawImage:
          type: string
          title: logo_raw_image
          format: byte
          description: The raw image of the logo of the client.
          nullable: true
      title: UpdateBusinessClientRequest
      additionalProperties: false
    business.v1.UpdateBusinessClientResponse:
      type: object
      properties:
        client:
          title: client
          description: The updated client data.
          $ref: '#/components/schemas/business.v1.BusinessClient'
      title: UpdateBusinessClientResponse
      additionalProperties: false
    business.v1.CreateSupplierRequest:
      type: object
      properties:
        supplier:
          title: supplier
          description: The supplier information to create.
          $ref: '#/components/schemas/business.v1.Supplier'
        logoRawImage:
          type: string
          title: logo_raw_image
          format: byte
          description: The raw image of the logo of the supplier.
          nullable: true
        externalLinks:
          type: array
          items:
            $ref: '#/components/schemas/link.v1.ResourceLink'
          title: external_links
          description: The links of the supplier.
      title: CreateSupplierRequest
      additionalProperties: false
    business.v1.CreateSupplierResponse:
      type: object
      properties:
        supplierId:
          type: string
          title: supplier_id
          minLength: 3
          description: The reference id to the supplier identifier.
      title: CreateSupplierResponse
      required:
        - supplierId
      additionalProperties: false
    business.v1.DeleteSupplierRequest:
      type: object
      properties:
        supplierId:
          type: string
          title: supplier_id
          minLength: 3
          description: The reference id to the supplier identifier.
      title: DeleteSupplierRequest
      required:
        - supplierId
      additionalProperties: false
    business.v1.DeleteSupplierResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the supplier was successfully deleted.
      title: DeleteSupplierResponse
      additionalProperties: false
    business.v1.GetBusinessSuppliersRequest:
      type: object
      properties:
        businessId:
          type: string
          title: business_id
          minLength: 3
          description: The reference id to the business identifier.
      title: GetBusinessSuppliersRequest
      required:
        - businessId
      additionalProperties: false
    business.v1.GetBusinessSuppliersResponse:
      type: object
      properties:
        suppliers:
          type: array
          items:
            $ref: '#/components/schemas/business.v1.Supplier'
          title: suppliers
          description: |-
            The list of suppliers of the business.
             Note: Only the ids and names of the suppliers are returned.
      title: GetBusinessSuppliersResponse
      additionalProperties: false
    business.v1.GetSupplierRequest:
      type: object
      properties:
        supplierId:
          type: string
          title: supplier_id
          minLength: 3
          description: The reference id to the supplier identifier.
      title: GetSupplierRequest
      required:
        - supplierId
      additionalProperties: false
    business.v1.GetSupplierResponse:
      type: object
      properties:
        supplier:
          title: supplier
          description: The retrieved supplier data.
          $ref: '#/components/schemas/business.v1.Supplier'
      title: GetSupplierResponse
      additionalProperties: false
    business.v1.Link:
      type: object
      properties:
        label:
          type: string
          title: label
          description: The label of the link.
        url:
          type: string
          title: url
          description: |-
            The url of the link.
             Todo: We must automatically retrieve the icon of the link.
      title: Link
      additionalProperties: false
    business.v1.Supplier:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          description: The reference id to the supplier identifier.
          nullable: true
        name:
          type: string
          title: name
          description: The name of the supplier.
        description:
          type: string
          title: description
          description: The description of the supplier.
          nullable: true
        logoLinkId:
          type: string
          title: logo_link_id
          description: The id of the media of the logo of the supplier.
          nullable: true
        externalLinksIds:
          type: array
          items:
            type: string
          title: external_links_ids
          description: The links of the supplier.
        contactPhone:
          type: string
          title: contact_phone
          description: The contact phone number.
          nullable: true
        contactEmail:
          type: string
          title: contact_email
          description: The contact email.
          nullable: true
        contactAddress:
          type: string
          title: contact_address
          description: The contact address.
          nullable: true
        isActive:
          type: boolean
          title: is_active
          description: Whether the supplier is active.
        businessIds:
          type: array
          items:
            type: string
          title: business_ids
          description: The ids of the business of the supplier.
      title: Supplier
      additionalProperties: false
    business.v1.UpdateSupplierRequest:
      type: object
      properties:
        supplier:
          title: supplier
          description: |-
            The supplier information to update.
             Note:Only the fields that are set will be updated.
          $ref: '#/components/schemas/business.v1.Supplier'
        logoRawImage:
          type: string
          title: logo_raw_image
          format: byte
          description: The raw image of the logo of the supplier.
          nullable: true
        externalLinks:
          type: array
          items:
            $ref: '#/components/schemas/link.v1.ResourceLink'
          title: external_links
          description: The links of the supplier.
      title: UpdateSupplierRequest
      additionalProperties: false
    business.v1.UpdateSupplierResponse:
      type: object
      properties:
        supplier:
          title: supplier
          description: The updated supplier data.
          $ref: '#/components/schemas/business.v1.Supplier'
      title: UpdateSupplierResponse
      additionalProperties: false
    financial.v1.CreditNote:
      type: object
      properties:
        documentId:
          type: string
          title: document_id
          description: '"CN-2025-001"'
        relatedInvoiceId:
          type: string
          title: related_invoice_id
          description: Which invoice this corrects
        creditType:
          title: credit_type
          description: Why credit is issued
          $ref: '#/components/schemas/financial.v1.CreditNoteType'
        issuerId:
          type: string
          title: issuer_id
          description: Who issues the credit
        recipientId:
          type: string
          title: recipient_id
          description: Who receives the credit
        status:
          title: status
          $ref: '#/components/schemas/financial.v1.CreditNoteStatus'
        items:
          type: array
          items:
            $ref: '#/components/schemas/financial.v1.InvoiceLineItem'
          title: items
          description: What's being credited
        totalAmount:
          type:
            - integer
            - string
          title: total_amount
          format: int64
          description: Negative value
        currency:
          type: string
          title: currency
        hasInventoryImpact:
          type: boolean
          title: has_inventory_impact
          description: Does stock come back?
        relatedReturnNoteId:
          type: string
          title: related_return_note_id
          description: If goods returned
        issueDate:
          title: issue_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        createdByUserId:
          type: string
          title: created_by_user_id
        reason:
          type: string
          title: reason
          description: Detailed explanation
        notes:
          type: string
          title: notes
      title: CreditNote
      required:
        - documentId
      additionalProperties: false
      description: |-
        *
         CreditNote (Avoir / Bon d'Avoir)
         Issued to cancel or reduce a previous invoice.
         Can be for returns, errors, discounts, etc.

         Fix: Items include batch_id if inventory impact involves specific lots.

         Example - Customer returns damaged goods:
           cn_id: "CN-2025-001"
           related_invoice_id: "INV-2025-001"
           credit_type: CREDIT_TYPE_RETURN
           recipient_id: "CMP-003" (customer)
           items: [2x PRD-001 @ 450000]
           total_amount: -900000 (negative = credit)
           has_inventory_impact: true

         INVENTORY IMPACT (if has_inventory_impact = true):
           +2 PRD-001 back to warehouse

         ACCOUNTING IMPACT:
           Customer now owes: 5400000 - 900000 = 4500000
    financial.v1.CreditNoteStatus:
      type: string
      title: CreditNoteStatus
      enum:
        - CN_STATUS_UNSPECIFIED
        - CN_STATUS_DRAFT
        - CN_STATUS_ISSUED
        - CN_STATUS_APPLIED
    financial.v1.CreditNoteType:
      type: string
      title: CreditNoteType
      enum:
        - CREDIT_TYPE_UNSPECIFIED
        - CREDIT_TYPE_RETURN
        - CREDIT_TYPE_PRICE_ERROR
        - CREDIT_TYPE_DISCOUNT
        - CREDIT_TYPE_CANCELLATION
        - CREDIT_TYPE_DAMAGED_GOODS
    financial.v1.InvoiceLineItem:
      type: object
      properties:
        productId:
          type: string
          title: product_id
        quantity:
          type: number
          title: quantity
          format: double
        unitPrice:
          type:
            - integer
            - string
          title: unit_price
          format: int64
        subtotal:
          type:
            - integer
            - string
          title: subtotal
          format: int64
          description: quantity * unit_price
        taxRate:
          type: number
          title: tax_rate
          format: double
          description: 0.20 for 20% VAT
        taxAmount:
          type:
            - integer
            - string
          title: tax_amount
          format: int64
        total:
          type:
            - integer
            - string
          title: total
          format: int64
          description: subtotal + tax_amount
        batchId:
          type: string
          title: batch_id
          description: 'Optional: Batch/lot referenced'
        productName:
          title: product_name
          description: The name of the item
          $ref: '#/components/schemas/inventory.v1.Internationalized'
      title: InvoiceLineItem
      additionalProperties: false
      description: |-
        *
         InvoiceLineItem represents one product on an invoice.

         Fix: Added optional batch_id for lot traceability in accounting.
    inventory.v1.Internationalized:
      type: object
      properties:
        en:
          type: string
          title: en
          description: The English name of the product category.
        fr:
          type: string
          title: fr
          description: The French name of the product category.
      title: Internationalized
      additionalProperties: false
    financial.v1.DebitNote:
      type: object
      properties:
        documentId:
          type: string
          title: document_id
          description: '"DEBIT-2025-001"'
        relatedInvoiceId:
          type: string
          title: related_invoice_id
          description: Purchase invoice being adjusted
        debitType:
          title: debit_type
          $ref: '#/components/schemas/financial.v1.DebitNoteType'
        issuerId:
          type: string
          title: issuer_id
          description: You (buyer)
        recipientId:
          type: string
          title: recipient_id
          description: Supplier
        status:
          title: status
          $ref: '#/components/schemas/financial.v1.DebitNoteStatus'
        items:
          type: array
          items:
            $ref: '#/components/schemas/financial.v1.InvoiceLineItem'
          title: items
        totalAmount:
          type:
            - integer
            - string
          title: total_amount
          format: int64
          description: Negative value
        currency:
          type: string
          title: currency
        hasInventoryImpact:
          type: boolean
          title: has_inventory_impact
        relatedReturnNoteId:
          type: string
          title: related_return_note_id
        issueDate:
          title: issue_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        createdByUserId:
          type: string
          title: created_by_user_id
        reason:
          type: string
          title: reason
        notes:
          type: string
          title: notes
      title: DebitNote
      required:
        - documentId
      additionalProperties: false
      description: |-
        *
         DebitNote (Note de Débit)
         Like a CreditNote but in reverse - YOU issue it TO supplier.
         Used when returning goods to supplier or correcting purchase invoice.

         Fix: Items include batch_id.

         Example - You return defective goods to supplier:
           dn_id: "DEBIT-2025-001"
           related_invoice_id: "PINV-2025-001" (purchase invoice)
           debit_type: DEBIT_TYPE_RETURN
           issuer_id: "CMP-001" (your company)
           recipient_id: "CMP-002" (supplier)
           items: [5x PRD-001 @ 400000]
           total_amount: -2000000

         INVENTORY IMPACT: -5 PRD-001 (returned to supplier)
         ACCOUNTING IMPACT: You owe supplier 2000000 less
    financial.v1.DebitNoteStatus:
      type: string
      title: DebitNoteStatus
      enum:
        - DEBIT_STATUS_UNSPECIFIED
        - DEBIT_STATUS_DRAFT
        - DEBIT_STATUS_ISSUED
        - DEBIT_STATUS_ACCEPTED
        - DEBIT_STATUS_DISPUTED
    financial.v1.DebitNoteType:
      type: string
      title: DebitNoteType
      enum:
        - DEBIT_TYPE_UNSPECIFIED
        - DEBIT_TYPE_RETURN
        - DEBIT_TYPE_PRICE_DISPUTE
        - DEBIT_TYPE_QUALITY_ISSUE
        - DEBIT_TYPE_SHORTAGE
    financial.v1.Invoice:
      type: object
      properties:
        documentId:
          type: string
          title: document_id
          description: '"INV-2025-001"'
        invoiceType:
          title: invoice_type
          description: Sales or Purchase
          $ref: '#/components/schemas/financial.v1.InvoiceType'
        issuerId:
          type: string
          title: issuer_id
          description: Company issuing invoice
        recipientId:
          type: string
          title: recipient_id
          description: Company receiving invoice
        relatedSalesOrderId:
          type: string
          title: related_sales_order_id
          description: Optional link
        relatedPurchaseOrderId:
          type: string
          title: related_purchase_order_id
          description: Optional link
        relatedDeliveryNoteId:
          type: string
          title: related_delivery_note_id
          description: Optional link
        status:
          title: status
          $ref: '#/components/schemas/financial.v1.InvoiceStatus'
        items:
          type: array
          items:
            $ref: '#/components/schemas/financial.v1.InvoiceLineItem'
          title: items
        subtotal:
          type:
            - integer
            - string
          title: subtotal
          format: int64
          description: Before tax
        taxAmount:
          type:
            - integer
            - string
          title: tax_amount
          format: int64
          description: VAT/sales tax
        totalAmount:
          type:
            - integer
            - string
          title: total_amount
          format: int64
          description: Final amount due
        currency:
          type: string
          title: currency
        issueDate:
          title: issue_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        dueDate:
          title: due_date
          description: Payment deadline
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        createdByUserId:
          type: string
          title: created_by_user_id
        createdAt:
          title: created_at
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        paymentIds:
          type: array
          items:
            type: string
          title: payment_ids
        notes:
          type: string
          title: notes
        paymentTerms:
          type: string
          title: payment_terms
          description: '"Net 30", "Cash on delivery", etc.'
      title: Invoice
      required:
        - documentId
      additionalProperties: false
      description: |-
        *
         Invoice (Facture)
         The official accounting document for a sale or purchase.
         Created AFTER goods are delivered (usually).

         Fix: InvoiceLineItem now includes optional batch_id for traceability.

         For SALES: You issue to customer
         For PURCHASES: You receive from supplier

         Example SALES invoice:
           invoice_id: "INV-2025-001"
           invoice_type: INVOICE_TYPE_SALES
           issuer_id: "CMP-001" (your company)
           recipient_id: "CMP-003" (customer)
           related_sales_order_id: "SO-2025-001"
           related_delivery_note_id: "DN-2025-001"
           items: [10x PRD-001 @ 450000]
           subtotal: 4500000
           tax_amount: 900000 (20% VAT)
           total_amount: 5400000
           status: INVOICE_STATUS_UNPAID

         INVENTORY IMPACT: None (already moved by DeliveryNote)
    financial.v1.InvoiceStatus:
      type: string
      title: InvoiceStatus
      enum:
        - INVOICE_STATUS_UNSPECIFIED
        - INVOICE_STATUS_DRAFT
        - INVOICE_STATUS_ISSUED
        - INVOICE_STATUS_UNPAID
        - INVOICE_STATUS_PARTIALLY_PAID
        - INVOICE_STATUS_PAID
        - INVOICE_STATUS_OVERDUE
        - INVOICE_STATUS_CANCELLED
        - INVOICE_STATUS_CREDITED
    financial.v1.InvoiceType:
      type: string
      title: InvoiceType
      enum:
        - INVOICE_TYPE_UNSPECIFIED
        - INVOICE_TYPE_SALES
        - INVOICE_TYPE_PURCHASE
    identity.v1.LoginRequest:
      type: object
      properties:
        password:
          type: string
          title: password
          description: The password of the user.
        email:
          type: string
          title: email
          format: email
          description: |-
            The email of the user.
             Note: required when phone_number and username are not set.
          nullable: true
        phoneNumber:
          type: string
          title: phone_number
          pattern: ^[0-9\+\-\(\)\s]+$
          description: |-
            The phone number of the user.
             Note: required when email and username are not set.
          nullable: true
        userName:
          type: string
          title: user_name
          pattern: ^@[a-zA-Z0-9_]+$
          description: |-
            The username of the user.
             Note: required when email and phone_number are not set.
          nullable: true
      title: LoginRequest
      additionalProperties: false
    identity.v1.LoginResponse:
      type: object
      properties:
        token:
          type: string
          title: token
          description: The token to use to authenticate the user in subsequent requests.
        refreshToken:
          type: string
          title: refresh_token
          description: The refresh token to use to refresh the token.
      title: LoginResponse
      additionalProperties: false
    identity.v1.RegisterRequest:
      type: object
      properties:
        userName:
          type: string
          title: user_name
          description: The unique identifier of the user.
        email:
          type: string
          title: email
          format: email
          description: The email address of the user.
        password:
          type: string
          title: password
          maxLength: 72
          minLength: 5
          description: The password of the user.
      title: RegisterRequest
      required:
        - password
      additionalProperties: false
      description: |-
        Register a new user with the minimum required information.
         The user will have to set a password later.
         For Business user registration, the business id is required.
    identity.v1.RegisterResponse:
      type: object
      properties:
        token:
          type: string
          title: token
          description: The token to use to authenticate the user in subsequent requests.
        refreshToken:
          type: string
          title: refresh_token
          description: The refresh token to use to refresh the token.
      title: RegisterResponse
      additionalProperties: false
    identity.v1.RequestPasswordResetRequest:
      type: object
      properties:
        uRef:
          type: string
          title: u_ref
          description: |
            The unique identifier of the user.
             For example, the email address or userId, later it will include the user name as well.
            string.is_user_ref // user_ref must be a valid email address or user id or @username
      title: RequestPasswordResetRequest
      additionalProperties: false
    identity.v1.RequestPasswordResetResponse:
      type: object
      properties:
        requestToken:
          type: string
          title: request_token
          description: The token to use to process the password reset request.
        verificationCode:
          type: string
          title: verification_code
          description: |-
            The verification code to use to process the password reset request.
             WARN: This field is only set if the user has not yet been verified.
          nullable: true
      title: RequestPasswordResetResponse
      additionalProperties: false
    identity.v1.ResetPasswordRequest:
      type: object
      properties:
        requestToken:
          type: string
          title: request_token
          description: The token to use to process the password reset request.
        password:
          type: string
          title: password
          description: The new password of the user.
        verificationCode:
          type: string
          title: verification_code
          description: The verification code sent to the user's email or phone number.
      title: ResetPasswordRequest
      additionalProperties: false
    identity.v1.ResetPasswordResponse:
      type: object
      properties:
        success:
          type: string
          title: success
          description: Whether the password was successfully reset.
      title: ResetPasswordResponse
      additionalProperties: false
    identity.v1.StoreInvoicePermission:
      type: object
      properties:
        readInvoice:
          type: boolean
          title: read_invoice
        createInvoice:
          type: boolean
          title: create_invoice
      title: StoreInvoicePermission
      additionalProperties: false
      description: / ----- INVOICE ----- ///
    identity.v1.StoreMemberPermission:
      type: object
      properties:
        readInformation:
          type: boolean
          title: read_information
        inviteMember:
          type: boolean
          title: invite_member
        updateMember:
          type: boolean
          title: update_member
        deleteMember:
          type: boolean
          title: delete_member
      title: StoreMemberPermission
      additionalProperties: false
      description: / ----- MEMBER ----- ///
    identity.v1.StoreOrderPermission:
      type: object
      properties:
        readOrder:
          type: boolean
          title: read_order
        createOrder:
          type: boolean
          title: create_order
      title: StoreOrderPermission
      additionalProperties: false
      description: / ----- ORDER ----- ///
    identity.v1.StorePermissions:
      type: object
      properties:
        product:
          title: product
          $ref: '#/components/schemas/identity.v1.StoreProductPermission'
        member:
          title: member
          $ref: '#/components/schemas/identity.v1.StoreMemberPermission'
        report:
          title: report
          $ref: '#/components/schemas/identity.v1.StoreReportPermission'
        order:
          title: order
          $ref: '#/components/schemas/identity.v1.StoreOrderPermission'
        invoice:
          title: invoice
          $ref: '#/components/schemas/identity.v1.StoreInvoicePermission'
        supplier:
          title: supplier
          $ref: '#/components/schemas/identity.v1.StoreSupplierPermission'
        transaction:
          title: transaction
          $ref: '#/components/schemas/identity.v1.StoreTransactionPermission'
      title: StorePermissions
      additionalProperties: false
      description: / ----- STORE PERMISSIONS (AGGREGATOR) ----- ///
    identity.v1.StoreProductPermission:
      type: object
      properties:
        readProductInInventory:
          type: boolean
          title: read_product_in_inventory
        createProductInInventory:
          type: boolean
          title: create_product_in_inventory
        updateProductInInventory:
          type: boolean
          title: update_product_in_inventory
        deleteProductInInventory:
          type: boolean
          title: delete_product_in_inventory
      title: StoreProductPermission
      additionalProperties: false
      description: / ----- PRODUCT ----- ///
    identity.v1.StoreReportPermission:
      type: object
      properties:
        readReport:
          type: boolean
          title: read_report
      title: StoreReportPermission
      additionalProperties: false
      description: / ----- REPORT ----- ///
    identity.v1.StoreSupplierPermission:
      type: object
      properties:
        readSupplier:
          type: boolean
          title: read_supplier
        createSupplier:
          type: boolean
          title: create_supplier
        updateSupplier:
          type: boolean
          title: update_supplier
        deleteSupplier:
          type: boolean
          title: delete_supplier
      title: StoreSupplierPermission
      additionalProperties: false
      description: / ----- SUPPLIER ----- ///
    identity.v1.StoreTransactionPermission:
      type: object
      properties:
        readTransaction:
          type: boolean
          title: read_transaction
        createTransaction:
          type: boolean
          title: create_transaction
        updateTransaction:
          type: boolean
          title: update_transaction
      title: StoreTransactionPermission
      additionalProperties: false
      description: / ----- TRANSACTION ----- ///
    identity.v1.ChangePasswordRequest:
      type: object
      properties:
        oldPassword:
          type: string
          title: old_password
          maxLength: 32
          minLength: 8
          description: |-
            The previous password of the user.
             TODO: Add more validation like capital letters, numbers, etc.
        newPassword:
          type: string
          title: new_password
          maxLength: 32
          minLength: 8
          description: |-
            The new password of the user.
             TODO: Add more validation like capital letters, numbers, etc.
      title: ChangePasswordRequest
      additionalProperties: false
    identity.v1.ChangePasswordResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the password was successfully changed.
      title: ChangePasswordResponse
      additionalProperties: false
    identity.v1.DeleteUserRequest:
      type: object
      properties:
        requestToken:
          type: string
          title: request_token
          description: The token to use to process the deletion of the user.
        verificationCode:
          type: string
          title: verification_code
          description: The verification code sent to the user's email or phone number.
      title: DeleteUserRequest
      additionalProperties: false
    identity.v1.DeleteUserResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the user was successfully deleted.
      title: DeleteUserResponse
      additionalProperties: false
    identity.v1.GetCurrentUserRequest:
      type: object
      title: GetCurrentUserRequest
      additionalProperties: false
      description: Empty message.
    identity.v1.GetCurrentUserResponse:
      type: object
      properties:
        me:
          title: me
          description: The user information for the currently authenticated user.
          $ref: '#/components/schemas/identity.v1.User'
      title: GetCurrentUserResponse
      additionalProperties: false
    identity.v1.GetMeRequest:
      type: object
      title: GetMeRequest
      additionalProperties: false
      description: Empty message.
    identity.v1.GetMeResponse:
      type: object
      properties:
        me:
          title: me
          description: The user information for the currently authenticated user.
          $ref: '#/components/schemas/identity.v1.User'
      title: GetMeResponse
      additionalProperties: false
    identity.v1.GetUserRequest:
      type: object
      properties:
        userId:
          type: string
          title: user_id
          minLength: 3
          description: The id of the user to retrieve.
      title: GetUserRequest
      required:
        - userId
      additionalProperties: false
    identity.v1.GetUserResponse:
      type: object
      properties:
        user:
          title: user
          description: The retrieved user data.
          $ref: '#/components/schemas/identity.v1.User'
      title: GetUserResponse
      additionalProperties: false
    identity.v1.RequestDeleteUserRequest:
      type: object
      properties:
        userId:
          type: string
          title: user_id
          minLength: 3
          description: The id of the user to delete.
        password:
          type: string
          title: password
          description: The password of the user to delete.
      title: RequestDeleteUserRequest
      required:
        - userId
      additionalProperties: false
    identity.v1.RequestDeleteUserResponse:
      type: object
      properties:
        requestToken:
          type: string
          title: request_token
          description: |-
            The token to use to process the deletion of the user
             after verification (email or phone number).
      title: RequestDeleteUserResponse
      additionalProperties: false
    identity.v1.StreamUserRequest:
      type: object
      properties:
        userId:
          type: string
          title: user_id
          minLength: 3
          description: The id of the user to retrieve.
      title: StreamUserRequest
      required:
        - userId
      additionalProperties: false
    identity.v1.StreamUserResponse:
      type: object
      properties:
        user:
          title: user
          description: The retrieved user data.
          $ref: '#/components/schemas/identity.v1.User'
      title: StreamUserResponse
      additionalProperties: false
    identity.v1.UpdateMeRequest:
      type: object
      properties:
        user:
          title: user
          description: |-
            The user information to update.
             Note:Only the fields that are set will be updated.
             WARNING:
              - The id field is required and cannot be changed.
              - The password field will be ignored. Use the ChangePassword RPC instead.
          $ref: '#/components/schemas/identity.v1.User'
      title: UpdateMeRequest
      additionalProperties: false
    identity.v1.UpdateMeResponse:
      type: object
      properties:
        user:
          title: user
          description: The updated user data.
          $ref: '#/components/schemas/identity.v1.User'
      title: UpdateMeResponse
      additionalProperties: false
    identity.v1.UpdateRequest:
      type: object
      properties:
        user:
          title: user
          description: |-
            The user information to update.
             Note:Only the fields that are set will be updated.
             WARNING:
              - The id field is required and cannot be changed.
              - The password field will be ignored. Use the ChangePassword RPC instead.
          $ref: '#/components/schemas/identity.v1.User'
      title: UpdateRequest
      additionalProperties: false
    identity.v1.UpdateResponse:
      type: object
      properties:
        user:
          title: user
          description: The updated user data.
          $ref: '#/components/schemas/identity.v1.User'
      title: UpdateResponse
      additionalProperties: false
    inventory.v1.Category:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          description: Unique identifier for the category
          nullable: true
        name:
          title: name
          description: Name of the category (e.g., "Electronics", "Smart TVs")
          $ref: '#/components/schemas/inventory.v1.Internationalized'
        parentCategoryId:
          type: string
          title: parent_category_id
          description: Reference to parent category (empty for root categories)
          nullable: true
        status:
          title: status
          description: The status of the category.
          $ref: '#/components/schemas/inventory.v1.CategoryStatus'
        type:
          title: type
          description: The status of the category.
          $ref: '#/components/schemas/inventory.v1.CategoryType'
        businessId:
          type: string
          title: business_id
          minLength: 6
          description: Business ID associated with the category
          nullable: true
        createdAt:
          title: created_at
          description: Timestamp when the category was created
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        updatedAt:
          title: updated_at
          description: Timestamp when the category was last updated
          nullable: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: Category
      required:
        - businessId
      additionalProperties: false
    inventory.v1.CategoryStatus:
      type: string
      title: CategoryStatus
      enum:
        - CATEGORY_STATUS_UNSPECIFIED
        - CATEGORY_STATUS_ACTIVE
        - CATEGORY_STATUS_INACTIVE
    inventory.v1.CategoryType:
      type: string
      title: CategoryType
      enum:
        - CATEGORY_TYPE_UNSPECIFIED
        - CATEGORY_TYPE_STORE
        - CATEGORY_TYPE_BUSINESS
        - CATEGORY_TYPE_PRODUCT
    inventory.v1.CreateCategoryRequest:
      type: object
      properties:
        category:
          title: category
          description: The category information to create.
          $ref: '#/components/schemas/inventory.v1.Category'
      title: CreateCategoryRequest
      additionalProperties: false
    inventory.v1.CreateCategoryResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the category was successfully created.
      title: CreateCategoryResponse
      additionalProperties: false
    inventory.v1.DeleteCategoryRequest:
      type: object
      properties:
        categoryId:
          type: string
          title: category_id
          minLength: 3
          description: The unique identifier of the category.
      title: DeleteCategoryRequest
      required:
        - categoryId
      additionalProperties: false
    inventory.v1.DeleteCategoryResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the category was successfully deleted.
      title: DeleteCategoryResponse
      additionalProperties: false
    inventory.v1.FindCategoriesRequest:
      type: object
      properties:
        businessId:
          type: string
          title: business_id
          minLength: 3
          description: Find the category by business_id
        refId:
          type: string
          title: ref_id
          description: Find the category by ref_id
          nullable: true
        name:
          type: string
          title: name
          description: Find the category by name
          nullable: true
        parentCategoryId:
          type: string
          title: parent_category_id
          description: Find the category by parent_category_id
          nullable: true
        status:
          title: status
          description: Find the category by status
          nullable: true
          $ref: '#/components/schemas/inventory.v1.CategoryStatus'
        type:
          title: type
          description: Find the category by type
          nullable: true
          $ref: '#/components/schemas/inventory.v1.CategoryType'
      title: FindCategoriesRequest
      required:
        - businessId
      additionalProperties: false
    inventory.v1.FindCategoriesResponse:
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/inventory.v1.Category'
          title: categories
      title: FindCategoriesResponse
      additionalProperties: false
    inventory.v1.GetCategoryRequest:
      type: object
      properties:
        categoryId:
          type: string
          title: category_id
          minLength: 3
          description: The unique identifier of the category.
      title: GetCategoryRequest
      required:
        - categoryId
      additionalProperties: false
    inventory.v1.GetCategoryResponse:
      type: object
      properties:
        category:
          title: category
          description: The retrieved category data.
          $ref: '#/components/schemas/inventory.v1.Category'
      title: GetCategoryResponse
      additionalProperties: false
    inventory.v1.UpdateCategoryRequest:
      type: object
      properties:
        categoryId:
          type: string
          title: category_id
          minLength: 3
          description: The category information to update.
        category:
          title: category
          description: The category information to update.
          $ref: '#/components/schemas/inventory.v1.Category'
      title: UpdateCategoryRequest
      required:
        - categoryId
      additionalProperties: false
    inventory.v1.UpdateCategoryResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the category was successfully updated.
      title: UpdateCategoryResponse
      additionalProperties: false
    inventory.v1.Batch:
      type: object
      properties:
        documentId:
          type: string
          title: document_id
          description: 'Unique batch/lot ID: "BATCH-2025-001"'
        productId:
          type: string
          title: product_id
          description: Which product this batch is for
        warehouseId:
          type: string
          title: warehouse_id
          description: Which warehouse stores this batch
        quantity:
          type: number
          title: quantity
          format: double
          description: Quantity in this specific batch
        expirationDate:
          title: expiration_date
          description: Expiration date for this batch
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        receivedAt:
          title: received_at
          description: When the batch was received
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        supplierBatchNumber:
          type: string
          title: supplier_batch_number
          description: Supplier's reference number
        status:
          title: status
          description: e.g., Active, Expired
          $ref: '#/components/schemas/inventory.v1.BatchStatus'
        notes:
          type: string
          title: notes
          description: Additional details
      title: Batch
      required:
        - documentId
      additionalProperties: false
      description: |-
        *
         Batch represents a lot of products with specific attributes like expiration.

         Fix: New message added for lot tracking. Each batch can have its own quantity, expiration date, and is linked to a product and warehouse.
         InventoryLevel now aggregates from batches, but batches provide detailed quantity per lot.

         Example:
           batch_id: "BATCH-2025-001"
           product_id: "PRD-001"
           warehouse_id: "WH-001"
           quantity: 50.0
           expiration_date: 2026-09-29T00:00:00Z
           received_at: 2025-09-29T10:30:00Z
    inventory.v1.BatchStatus:
      type: string
      title: BatchStatus
      enum:
        - BATCH_STATUS_UNSPECIFIED
        - BATCH_STATUS_ACTIVE
        - BATCH_STATUS_QUARANTINE
        - BATCH_STATUS_EXPIRED
        - BATCH_STATUS_CONSUMED
    inventory.v1.CheckProductAvailabilityRequest:
      type: object
      properties:
        productId:
          type: string
          title: product_id
        storeId:
          type: string
          title: store_id
        quantityNeeded:
          type: number
          title: quantity_needed
          format: double
      title: CheckProductAvailabilityRequest
      additionalProperties: false
    inventory.v1.CheckProductAvailabilityResponse:
      type: object
      properties:
        isAvailable:
          type: boolean
          title: is_available
        quantityAvailable:
          type: number
          title: quantity_available
          format: double
        quantityNeeded:
          type: number
          title: quantity_needed
          format: double
        shortage:
          type: number
          title: shortage
          format: double
          description: If not available
      title: CheckProductAvailabilityResponse
      additionalProperties: false
    inventory.v1.ExpirationType:
      type: string
      title: ExpirationType
      enum:
        - EXPIRATION_TYPE_UNSPECIFIED
        - EXPIRATION_TYPE_NONE
        - EXPIRATION_TYPE_PRODUCT_LEVEL
        - EXPIRATION_TYPE_LOT_LEVEL
    inventory.v1.GetInventoryTransactionHistoryRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          description: Optional
          nullable: true
        productId:
          type: string
          title: product_id
          description: Optional
          nullable: true
        transactionType:
          title: transaction_type
          description: Optional
          nullable: true
          $ref: '#/components/schemas/audits.v1.TransactionType'
        startDate:
          title: start_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        endDate:
          title: end_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        pageSize:
          type: integer
          title: page_size
          format: int32
        pageNumber:
          type: integer
          title: page_number
          format: int32
      title: GetInventoryTransactionHistoryRequest
      additionalProperties: false
    inventory.v1.GetInventoryTransactionHistoryResponse:
      type: object
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/audits.v1.InventoryTransaction'
          title: transactions
        totalCount:
          type: integer
          title: total_count
          format: int32
        totalQuantityIn:
          type: number
          title: total_quantity_in
          format: double
          description: Sum of positive changes
        totalQuantityOut:
          type: number
          title: total_quantity_out
          format: double
          description: Sum of negative changes
      title: GetInventoryTransactionHistoryResponse
      additionalProperties: false
    inventory.v1.GetLowStockItemsRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
        threshold:
          type: integer
          title: threshold
          format: int32
          description: Min stock level to flag as low
          nullable: true
        categoryId:
          type: string
          title: category_id
          nullable: true
        supplierId:
          type: string
          title: supplier_id
          nullable: true
      title: GetLowStockItemsRequest
      required:
        - storeId
      additionalProperties: false
    inventory.v1.GetLowStockItemsResponse:
      type: object
      properties:
        lowStockItems:
          type: array
          items:
            $ref: '#/components/schemas/inventory.v1.InventoryLevel'
          title: low_stock_items
        totalCount:
          type: integer
          title: total_count
          format: int32
      title: GetLowStockItemsResponse
      additionalProperties: false
    inventory.v1.GetProductInventoryLevelsRequest:
      type: object
      properties:
        productId:
          type: string
          title: product_id
      title: GetProductInventoryLevelsRequest
      additionalProperties: false
    inventory.v1.GetProductInventoryLevelsResponse:
      type: object
      properties:
        levels:
          type: array
          items:
            $ref: '#/components/schemas/inventory.v1.InventoryLevel'
          title: levels
        totalAvailable:
          type:
            - integer
            - string
          title: total_available
          format: int64
        totalReserved:
          type:
            - integer
            - string
          title: total_reserved
          format: int64
        totalInTransit:
          type:
            - integer
            - string
          title: total_in_transit
          format: int64
      title: GetProductInventoryLevelsResponse
      additionalProperties: false
    inventory.v1.GetProductTransactionHistoryRequest:
      type: object
      properties:
        productId:
          type: string
          title: product_id
        storeId:
          type: string
          title: store_id
          description: Optional filter
          nullable: true
        startDate:
          title: start_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        endDate:
          title: end_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        pageSize:
          type: integer
          title: page_size
          format: int32
        pageNumber:
          type: integer
          title: page_number
          format: int32
      title: GetProductTransactionHistoryRequest
      additionalProperties: false
    inventory.v1.GetProductTransactionHistoryResponse:
      type: object
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/audits.v1.InventoryTransaction'
          title: transactions
        totalCount:
          type: integer
          title: total_count
          format: int32
      title: GetProductTransactionHistoryResponse
      additionalProperties: false
    inventory.v1.GetResourceInventoryRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
        productId:
          type: string
          title: product_id
          description: 'Specific product, if omitted: full snapshot'
          nullable: true
        asOfDate:
          title: as_of_date
          description: Historical snapshot
          nullable: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        supplierId:
          type: string
          title: supplier_id
          nullable: true
      title: GetResourceInventoryRequest
      required:
        - storeId
      additionalProperties: false
    inventory.v1.GetResourceInventoryResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/inventory.v1.InventoryLevel'
          title: items
        totalQuantity:
          type: number
          title: total_quantity
          format: double
        snapshotDate:
          title: snapshot_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: GetResourceInventoryResponse
      additionalProperties: false
    inventory.v1.GlobalProduct:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          description: The unique identifier of the product.
          nullable: true
        name:
          title: name
          description: The name of the product.
          $ref: '#/components/schemas/inventory.v1.Internationalized'
        description:
          title: description
          description: The description of the product.
          nullable: true
          $ref: '#/components/schemas/inventory.v1.Internationalized'
        barCodeValue:
          type: string
          title: bar_code_value
          description: The bar code value of the product.
          nullable: true
        categories:
          type: array
          items:
            $ref: '#/components/schemas/inventory.v1.Category'
          title: categories
          description: The product categories of the product.
        imagesLinksIds:
          type: array
          items:
            type: string
          title: images_links_ids
          description: The list of image related to the product.
        status:
          title: status
          description: The status of the product.
          $ref: '#/components/schemas/inventory.v1.GlobalProductStatus'
      title: GlobalProduct
      additionalProperties: false
    inventory.v1.GlobalProductStatus:
      type: string
      title: GlobalProductStatus
      enum:
        - GLOBAL_PRODUCT_STATUS_UNSPECIFIED
        - GLOBAL_PRODUCT_STATUS_ACTIVE
        - GLOBAL_PRODUCT_STATUS_INACTIVE
    inventory.v1.InventoryLevel:
      type: object
      properties:
        storeProductId:
          type: string
          title: store_product_id
          description: The product id to get level.
        storeId:
          type: string
          title: store_id
          description: The warehouse id to get level.
        quantityAvailable:
          type: number
          title: quantity_available
          format: double
          description: Ready to sell/use (sum of batch quantities)
        quantityReserved:
          type: number
          title: quantity_reserved
          format: double
          description: Allocated to orders not yet fulfilled
        quantityInTransit:
          type: number
          title: quantity_in_transit
          format: double
          description: Being delivered here
        minThreshold:
          type: number
          title: min_threshold
          format: double
          description: Minimum stock threshold for this product in this warehouse
        lastUpdated:
          title: last_updated
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        lastUpdatedByUserId:
          type: string
          title: last_updated_by_user_id
          description: Who made last change
        batches:
          type: array
          items:
            $ref: '#/components/schemas/inventory.v1.Batch'
          title: batches
          description: Detailed batches/lots for this product in this store
      title: InventoryLevel
      additionalProperties: false
      description: |-
        *
         InventoryLevel tracks how much stock exists in each warehouse.
         This is the current state, updated by various documents.

         Fixes: Added repeated batches for lot-level details (quantity per lot, expiration).
         The quantity_available is now the sum of batch quantities (computed).
         Added min_threshold per warehouse for the product.

         Example:
           product_id: "PRD-001"
           store_id: "WH-001"
           quantity_available: 50
           quantity_reserved: 10 (in pending orders)
           quantity_in_transit: 20 (being delivered)
           min_threshold: 15.0
           last_updated: 2025-09-29T10:30:00Z
           batches: [Batch1 with qty 30 exp 2026-01-01, Batch2 with qty 20 exp 2026-06-01]
         Note we can only have one InventoryLevel per (product_id, supplier_id).
         Reason why we don't add it directly to Storeproduct is because the Storeproduct can be handler by multiple supplier.
         Example: On product Coffee can be provide by 2 different supplier.
    inventory.v1.InventoryLevelWithProduct:
      type: object
      properties:
        level:
          title: level
          $ref: '#/components/schemas/inventory.v1.InventoryLevel'
        product:
          title: product
          $ref: '#/components/schemas/inventory.v1.StoreProduct'
        globalProduct:
          title: globalProduct
          $ref: '#/components/schemas/inventory.v1.GlobalProduct'
        stockValue:
          type:
            - integer
            - string
          title: stock_value
          format: int64
          description: quantity * product.unit_price
        stockStatus:
          title: stockStatus
          $ref: '#/components/schemas/inventory.v1.StockStatus'
      title: InventoryLevelWithProduct
      additionalProperties: false
    inventory.v1.ProductStatus:
      type: string
      title: ProductStatus
      enum:
        - PRODUCT_STATUS_UNSPECIFIED
        - PRODUCT_STATUS_ACTIVE
        - PRODUCT_STATUS_INACTIVE
    inventory.v1.StockStatus:
      type: string
      title: StockStatus
      enum:
        - STOCK_STATUS_UNSPECIFIED
        - STOCK_STATUS_LOW
        - STOCK_STATUS_OK
        - STOCK_STATUS_OUT_OF_STOCK
    inventory.v1.StoreProduct:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          description: The unique identifier of the business product.
          nullable: true
        storeId:
          type: string
          title: store_id
          description: The unique identifier of the store.
        globalProductId:
          type: string
          title: global_product_id
          description: The unique identifier of the global product.
        salePrice:
          type: integer
          title: sale_price
          format: int32
          description: |-
            The sale price in XAF of the product.
             The currency is determined by the business.
          nullable: true
        imagesLinksIds:
          type: array
          items:
            type: string
          title: images_links_ids
          description: The media ids of the images of the product.
        supplierId:
          type: string
          title: supplier_id
          description: The supplier.
          nullable: true
        status:
          title: status
          description: The status of the product.
          $ref: '#/components/schemas/inventory.v1.ProductStatus'
        sku:
          type: string
          title: sku
          description: The stock keeping unit.
          nullable: true
        expirationType:
          title: expiration_type
          description: The type of expiration of the product.
          $ref: '#/components/schemas/inventory.v1.ExpirationType'
        createdAt:
          title: created_at
          description: The creation date of the product.
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        updatedAt:
          title: updated_at
          description: The last update date of the product.
          nullable: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        stockQuantity:
          type: integer
          title: stock_quantity
          format: int32
          description: The current stock quantity of the product.
          nullable: true
        minStockThreshold:
          type: integer
          title: min_stock_threshold
          format: int32
          description: The minimum stock threshold of the product.
        expirationDate:
          title: expiration_date
          description: The expiration date of the product.
          nullable: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        costPrice:
          type: integer
          title: cost_price
          format: int32
          description: Current purchase/cost price.
          nullable: true
      title: StoreProduct
      additionalProperties: false
    inventory.v1.AddStoreProductRequest:
      type: object
      properties:
        globalProduct:
          title: global_product
          description: |-
            The product to add.
             If the product does not exist, it will be created.
          $ref: '#/components/schemas/inventory.v1.GlobalProduct'
        storeProduct:
          title: store_product
          description: The store product to add.
          $ref: '#/components/schemas/inventory.v1.StoreProduct'
      title: AddStoreProductRequest
      additionalProperties: false
    inventory.v1.AddStoreProductResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the product was successfully added.
      title: AddStoreProductResponse
      additionalProperties: false
    inventory.v1.CreateGlobalProductRequest:
      type: object
      properties:
        globalProduct:
          title: global_product
          description: The global product to add.
          $ref: '#/components/schemas/inventory.v1.GlobalProduct'
      title: CreateGlobalProductRequest
      additionalProperties: false
    inventory.v1.CreateGlobalProductResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the global product was successfully added.
      title: CreateGlobalProductResponse
      additionalProperties: false
    inventory.v1.DeleteGlobalProductRequest:
      type: object
      properties:
        globalProductId:
          type: string
          title: global_product_id
          description: The unique identifier of the global product.
      title: DeleteGlobalProductRequest
      additionalProperties: false
    inventory.v1.DeleteGlobalProductResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the global product was successfully deleted.
      title: DeleteGlobalProductResponse
      additionalProperties: false
    inventory.v1.DeleteStoreProductRequest:
      type: object
      properties:
        storeProductId:
          type: string
          title: store_product_id
          minLength: 3
          description: The unique identifier of the store product.
      title: DeleteStoreProductRequest
      required:
        - storeProductId
      additionalProperties: false
    inventory.v1.DeleteStoreProductResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the store product was successfully deleted.
      title: DeleteStoreProductResponse
      additionalProperties: false
    inventory.v1.FindGlobalProductsRequest:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          description: The reference id to the global product identifier.
          nullable: true
        categories:
          type: array
          items:
            $ref: '#/components/schemas/inventory.v1.Category'
          title: categories
          description: The query to search for products by category.
        name:
          type: string
          title: name
          description: Query the product name.
          nullable: true
        barCodeValue:
          type: string
          title: bar_code_value
          description: Identify the products by bar code.
          nullable: true
        status:
          title: status
          description: Identify the products by store.
          nullable: true
          $ref: '#/components/schemas/inventory.v1.GlobalProductStatus'
      title: FindGlobalProductsRequest
      additionalProperties: false
    inventory.v1.FindGlobalProductsResponse:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/inventory.v1.GlobalProduct'
          title: products
          description: |-
            The unique identifiers of the products.
             WARN: all returned products will only have their id and name.
      title: FindGlobalProductsResponse
      additionalProperties: false
    inventory.v1.FindProductCategoryRequest:
      type: object
      properties:
        query:
          type: string
          title: query
          description: The query to search for product categories.
      title: FindProductCategoryRequest
      additionalProperties: false
    inventory.v1.FindProductCategoryResponse:
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/inventory.v1.Category'
          title: categories
          description: |-
            The unique identifiers of the product categories.
             WARN: all returned product categories will only have their id and name.
      title: FindProductCategoryResponse
      additionalProperties: false
    inventory.v1.FindStoreProductsRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          description: The query to search for store products.
        refId:
          type: string
          title: ref_id
          description: The unique identifier of the product.
          nullable: true
        globalProductId:
          type: string
          title: global_product_id
          description: The unique identifier of the global product.
          nullable: true
        expirationDate:
          title: expiration_date
          description: Identify the products that are expired.
          nullable: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        supplierId:
          type: string
          title: supplier_id
          description: Identify the products by supplier.
          nullable: true
      title: FindStoreProductsRequest
      additionalProperties: false
    inventory.v1.FindStoreProductsResponse:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/inventory.v1.StoreProduct'
          title: products
          description: |-
            The unique identifiers of the products.
             WARN: all returned products will only have their id and name.
      title: FindStoreProductsResponse
      additionalProperties: false
    inventory.v1.GetStoreProductRequest:
      type: object
      properties:
        storeProductId:
          type: string
          title: store_product_id
          minLength: 3
          description: The unique identifier of the store product.
      title: GetStoreProductRequest
      required:
        - storeProductId
      additionalProperties: false
    inventory.v1.GetStoreProductResponse:
      type: object
      properties:
        storeProduct:
          title: store_product
          description: The retrieved store product data.
          $ref: '#/components/schemas/inventory.v1.StoreProduct'
      title: GetStoreProductResponse
      additionalProperties: false
    inventory.v1.StreamGlobalProductsRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          description: The unique identifier of the store.
      title: StreamGlobalProductsRequest
      additionalProperties: false
    inventory.v1.StreamGlobalProductsResponse:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/inventory.v1.GlobalProduct'
          title: products
          description: The global products for the specified store.
      title: StreamGlobalProductsResponse
      additionalProperties: false
    inventory.v1.StreamStoreProductsRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          minLength: 3
          description: The unique identifier of the store.
        supplierId:
          type: string
          title: supplier_id
          description: Optional filter by supplier ID.
          nullable: true
        globalProductId:
          type: string
          title: global_product_id
          description: Optional filter by global product ID.
          nullable: true
      title: StreamStoreProductsRequest
      required:
        - storeId
      additionalProperties: false
    inventory.v1.StreamStoreProductsResponse:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/inventory.v1.StoreProduct'
          title: products
          description: The store products for the specified store.
      title: StreamStoreProductsResponse
      additionalProperties: false
    inventory.v1.UpdateGlobalProductRequest:
      type: object
      properties:
        globalProductId:
          type: string
          title: global_product_id
          description: The unique identifier of the global product.
        globalProduct:
          title: global_product
          description: The global product to update.
          $ref: '#/components/schemas/inventory.v1.GlobalProduct'
      title: UpdateGlobalProductRequest
      additionalProperties: false
    inventory.v1.UpdateGlobalProductResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the global product was successfully updated.
      title: UpdateGlobalProductResponse
      additionalProperties: false
    inventory.v1.UpdateStoreProductRequest:
      type: object
      properties:
        storeProduct:
          title: store_product
          description: |-
            The store product information to update.
             Note:Only the fields that are set will be updated.
             Some fields cannot be updated like the product id, store id, and all
             product fields.
          $ref: '#/components/schemas/inventory.v1.StoreProduct'
        globalProduct:
          title: global_product
          description: |-
            The global product information to update.
             Note:Only the fields that are set will be updated if there is no
             ref_id set for the global product or will be created in other case.
          nullable: true
          $ref: '#/components/schemas/inventory.v1.GlobalProduct'
        imagesRawImages:
          type: array
          items:
            type: string
            format: byte
          title: images_raw_images
          description: The media ids of the images of the product.
      title: UpdateStoreProductRequest
      additionalProperties: false
    inventory.v1.UpdateStoreProductResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the store product was successfully updated.
      title: UpdateStoreProductResponse
      additionalProperties: false
    inventory.v1.CreateStockInboundRequest:
      type: object
      properties:
        stockInbound:
          title: stock_inbound
          description: The stock inbound to create.
          $ref: '#/components/schemas/inventory.v1.StockInbound'
      title: CreateStockInboundRequest
      additionalProperties: false
    inventory.v1.CreateStockInboundResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the stock inbound was successfully created.
      title: CreateStockInboundResponse
      additionalProperties: false
    inventory.v1.FindStockInboundRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
      title: FindStockInboundRequest
      additionalProperties: false
    inventory.v1.FindStockInboundResponse:
      type: object
      properties:
        stockInbounds:
          type: array
          items:
            $ref: '#/components/schemas/inventory.v1.StockInbound'
          title: stock_inbounds
      title: FindStockInboundResponse
      additionalProperties: false
    inventory.v1.InboundType:
      type: string
      title: InboundType
      enum:
        - INBOUND_TYPE_UNSPECIFIED
        - INBOUND_TYPE_STOCK_IN
        - INBOUND_TYPE_CUSTOMER_RETURN
        - INBOUND_TYPE_ADJUSTMENT
    inventory.v1.StockInbound:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
        globalProductId:
          type: string
          title: global_product_id
          description: The unique identifier of the global product.
        inboundType:
          title: inbound_type
          description: Type of inbound stock
          $ref: '#/components/schemas/inventory.v1.InboundType'
        quantity:
          type: integer
          title: quantity
          format: int32
          description: Quantity added to inventory
        quantityBefore:
          type: integer
          title: quantity_before
          format: int32
          description: Stock quantity before this transaction
        quantityAfter:
          type: integer
          title: quantity_after
          format: int32
          description: Stock quantity after this transaction
        unitCost:
          type: integer
          title: unit_cost
          format: int32
          description: Purchase/cost price per unit
        supplierId:
          type: string
          title: supplier_id
          description: Supplier ID (for stock in transactions)
          nullable: true
        referenceNumber:
          type: string
          title: reference_number
          description: Reference number (PO number, invoice number, etc.)
          nullable: true
        batchNumber:
          type: string
          title: batch_number
          description: Batch/lot number (for traceability if needed)
          nullable: true
        reason:
          type: string
          title: reason
          description: Reason for the transaction (especially for adjustments)
          nullable: true
        batchExpiryDate:
          title: batch_expiry_date
          description: Expiration date for this batch (if applicable)
          nullable: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        createdAt:
          title: created_at
          description: When this supply was received/processed
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        performedBy:
          type: string
          title: performed_by
          description: User who performed the transaction
        storeId:
          type: string
          title: store_id
          description: The store id
      title: StockInbound
      additionalProperties: false
      description: Tracks all stock additions to inventory
    inventory.v1.UpdateStockInboundRequest:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
        quantity:
          type: integer
          title: quantity
          format: int32
          description: |-
            The quantity to update.
             Note the quantity  can be negative for adjustments.
          nullable: true
        reason:
          type: string
          title: reason
          nullable: true
        performedBy:
          type: string
          title: performed_by
          nullable: true
      title: UpdateStockInboundRequest
      additionalProperties: false
      description: Limit the update to only (reason, quantity for return or adjustment, performed_by)
    inventory.v1.UpdateStockInboundResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
      title: UpdateStockInboundResponse
      additionalProperties: false
    inventory.v1.ListStoreProductsRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
        searchQuery:
          type: string
          title: search_query
          description: Name/SKU search
          nullable: true
        categoryIds:
          type: array
          items:
            type: string
          title: category_ids
        status:
          title: status
          nullable: true
          $ref: '#/components/schemas/inventory.v1.ProductStatus'
        pageSize:
          type: integer
          title: page_size
          format: int32
        pageToken:
          type: string
          title: page_token
          description: For pagination
      title: ListStoreProductsRequest
      required:
        - storeId
      additionalProperties: false
    inventory.v1.ListStoreProductsResponse:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/inventory.v1.StoreProduct'
          title: products
        totalCount:
          type: integer
          title: total_count
          format: int32
        nextPageToken:
          type: string
          title: next_page_token
      title: ListStoreProductsResponse
      additionalProperties: false
    link.v1.GetResourceLinksRequest:
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
          title: ids
          description: A list of unique identifiers of the resource link to retrieve.
      title: GetResourceLinksRequest
      additionalProperties: false
    link.v1.GetResourceLinksResponse:
      type: object
      properties:
        link:
          type: object
          title: link
          additionalProperties:
            title: value
            $ref: '#/components/schemas/link.v1.ResourceLink'
          description: The retrieved resource link data list.
      title: GetResourceLinksResponse
      additionalProperties: false
    link.v1.GetResourceLinksResponse.LinkEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          title: value
          $ref: '#/components/schemas/link.v1.ResourceLink'
      title: LinkEntry
      additionalProperties: false
    logistic.v1.DeliveryLineItem:
      type: object
      properties:
        productId:
          type: string
          title: product_id
        quantity:
          type: number
          title: quantity
          format: double
        serialNumbers:
          type: string
          title: serial_numbers
          description: For tracked items
        batchId:
          type: string
          title: batch_id
          description: Specific batch/lot being delivered
      title: DeliveryLineItem
      additionalProperties: false
      description: |-
        *
         DeliveryLineItem for tracking shipped quantities.

         Fix: Added batch_id to specify which lot is being shipped (FIFO/LIFO/expiration-based picking).
    logistic.v1.DeliveryNote:
      type: object
      properties:
        documentId:
          type: string
          title: document_id
          description: '"DN-2025-001"'
        relatedSalesOrderId:
          type: string
          title: related_sales_order_id
          description: Optional link to order
        fromWarehouseId:
          type: string
          title: from_warehouse_id
          description: Where goods leave
        toCompanyId:
          type: string
          title: to_company_id
          description: Customer receiving
        toAddress:
          type: string
          title: to_address
          description: Delivery address
        status:
          title: status
          $ref: '#/components/schemas/logistic.v1.DeliveryNoteStatus'
        items:
          type: array
          items:
            $ref: '#/components/schemas/logistic.v1.DeliveryLineItem'
          title: items
        carrier:
          type: string
          title: carrier
          description: '"DHL", "Local Delivery", etc.'
        trackingNumber:
          type: string
          title: tracking_number
        createdByUserId:
          type: string
          title: created_by_user_id
        createdAt:
          title: created_at
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        shippedAt:
          title: shipped_at
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        deliveredAt:
          title: delivered_at
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        notes:
          type: string
          title: notes
      title: DeliveryNote
      required:
        - documentId
      additionalProperties: false
      description: |-
        *
         DeliveryNote (Bon de Livraison)
         Accompanies goods when they are physically shipped.
         THIS IS WHAT REDUCES INVENTORY at the source.

         Fix: DeliveryLineItem now includes batch_id for lot tracking.

         Flow: Pick items → Create DeliveryNote → Ship → Customer receives

         Example:
           dn_id: "DN-2025-001"
           related_sales_order_id: "SO-2025-001"
           from_warehouse_id: "WH-001"
           to_company_id: "CMP-003" (customer)
           items: [10x PRD-001]
           status: DN_STATUS_IN_TRANSIT

         INVENTORY IMPACT: -10 PRD-001 from WH-001
    logistic.v1.DeliveryNoteStatus:
      type: string
      title: DeliveryNoteStatus
      enum:
        - DN_STATUS_UNSPECIFIED
        - DN_STATUS_PREPARED
        - DN_STATUS_IN_TRANSIT
        - DN_STATUS_DELIVERED
        - DN_STATUS_RETURNED
    logistic.v1.ReceivingLineItem:
      type: object
      properties:
        productId:
          type: string
          title: product_id
        quantityExpected:
          type: number
          title: quantity_expected
          format: double
          description: From PO
        quantityReceived:
          type: number
          title: quantity_received
          format: double
          description: Actually got
        quantityRejected:
          type: number
          title: quantity_rejected
          format: double
          description: Damaged/wrong items
        rejectionReason:
          type: string
          title: rejection_reason
        batchId:
          type: string
          title: batch_id
          description: Generated batch ID for received items
        expirationDate:
          title: expiration_date
          description: Provided by supplier or calculated
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: ReceivingLineItem
      additionalProperties: false
      description: |-
        *
         ReceivingLineItem shows what was actually received vs expected.

         Fix: Added batch_id and expiration_date for creating new batches on reception.

         Example:
           product_id: "PRD-001"
           quantity_expected: 50
           quantity_received: 48
           quantity_rejected: 2 (damaged)
           rejection_reason: "Damaged packaging"
           batch_id: "BATCH-2025-001" (generated)
           expiration_date: 2026-09-29T00:00:00Z
    logistic.v1.ReceivingNote:
      type: object
      properties:
        documentId:
          type: string
          title: document_id
          description: '"RN-2025-001"'
        relatedPurchaseOrderId:
          type: string
          title: related_purchase_order_id
          description: Which PO this fulfills
        supplierId:
          type: string
          title: supplier_id
          description: Who sent the goods
        warehouseId:
          type: string
          title: warehouse_id
          description: Where goods are stored
        status:
          title: status
          $ref: '#/components/schemas/logistic.v1.ReceivingNoteStatus'
        items:
          type: array
          items:
            $ref: '#/components/schemas/logistic.v1.ReceivingLineItem'
          title: items
        receivedByUserId:
          type: string
          title: received_by_user_id
          description: Who accepted delivery
        receivedAt:
          title: received_at
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        notes:
          type: string
          title: notes
          description: Condition notes, damages, etc.
      title: ReceivingNote
      required:
        - documentId
      additionalProperties: false
      description: |-
        *
         ReceivingNote (Bon de Réception)
         Created when YOU receive goods from a supplier.
         THIS IS WHAT INCREASES YOUR INVENTORY.

         Fix: ReceivingLineItem now includes batch_id (system-generated or from supplier).
         When creating, new Batches are added to InventoryLevel.

         Flow: Goods arrive → Inspect → Create ReceivingNote → Update inventory

         Example:
           rn_id: "RN-2025-001"
           related_purchase_order_id: "PO-2025-001"
           supplier_id: "CMP-002"
           warehouse_id: "WH-001"
           items: [48x PRD-001] (expected 50, but 2 damaged)
           status: RN_STATUS_COMPLETED

         INVENTORY IMPACT: +48 PRD-001 in WH-001
    logistic.v1.ReceivingNoteStatus:
      type: string
      title: ReceivingNoteStatus
      enum:
        - RN_STATUS_UNSPECIFIED
        - RN_STATUS_PENDING
        - RN_STATUS_INSPECTING
        - RN_STATUS_COMPLETED
        - RN_STATUS_REJECTED
    logistic.v1.CreateCreditNoteFromReturnRequest:
      type: object
      properties:
        returnId:
          type: string
          title: return_id
        relatedInvoiceId:
          type: string
          title: related_invoice_id
        issuedByUserId:
          type: string
          title: issued_by_user_id
      title: CreateCreditNoteFromReturnRequest
      additionalProperties: false
    logistic.v1.CreateCreditNoteFromReturnResponse:
      type: object
      properties:
        cnId:
          type: string
          title: cn_id
        creditNote:
          title: credit_note
          $ref: '#/components/schemas/financial.v1.CreditNote'
        message:
          type: string
          title: message
      title: CreateCreditNoteFromReturnResponse
      additionalProperties: false
    logistic.v1.CreateCustomerReturnRequest:
      type: object
      properties:
        fromCompanyId:
          type: string
          title: from_company_id
          description: Customer
        toWarehouseId:
          type: string
          title: to_warehouse_id
          description: Your warehouse
        relatedDeliveryNoteId:
          type: string
          title: related_delivery_note_id
        relatedInvoiceId:
          type: string
          title: related_invoice_id
        items:
          type: array
          items:
            $ref: '#/components/schemas/logistic.v1.ReturnLineItem'
          title: items
        reason:
          type: string
          title: reason
        receivedByUserId:
          type: string
          title: received_by_user_id
      title: CreateCustomerReturnRequest
      additionalProperties: false
    logistic.v1.CreateCustomerReturnResponse:
      type: object
      properties:
        returnId:
          type: string
          title: return_id
        returnNote:
          title: return_note
          $ref: '#/components/schemas/logistic.v1.ReturnNote'
        inventoryTransactionIds:
          type: array
          items:
            type: string
          title: inventory_transaction_ids
        requiresCreditNote:
          type: boolean
          title: requires_credit_note
        message:
          type: string
          title: message
      title: CreateCustomerReturnResponse
      additionalProperties: false
    logistic.v1.CreateDebitNoteFromReturnRequest:
      type: object
      properties:
        returnId:
          type: string
          title: return_id
        relatedInvoiceId:
          type: string
          title: related_invoice_id
        issuedByUserId:
          type: string
          title: issued_by_user_id
      title: CreateDebitNoteFromReturnRequest
      additionalProperties: false
    logistic.v1.CreateDebitNoteFromReturnResponse:
      type: object
      properties:
        dnId:
          type: string
          title: dn_id
        debitNote:
          title: debit_note
          $ref: '#/components/schemas/financial.v1.DebitNote'
        message:
          type: string
          title: message
      title: CreateDebitNoteFromReturnResponse
      additionalProperties: false
    logistic.v1.GetReturnRequest:
      type: object
      properties:
        returnId:
          type: string
          title: return_id
      title: GetReturnRequest
      additionalProperties: false
    logistic.v1.GetReturnResponse:
      type: object
      properties:
        returnNote:
          title: return_note
          $ref: '#/components/schemas/logistic.v1.ReturnNote'
        creditNote:
          title: credit_note
          description: If issued
          $ref: '#/components/schemas/financial.v1.CreditNote'
        debitNote:
          title: debit_note
          description: If issued
          $ref: '#/components/schemas/financial.v1.DebitNote'
        refundPayment:
          title: refund_payment
          description: If refund given
          $ref: '#/components/schemas/payments.v1.Payment'
      title: GetReturnResponse
      additionalProperties: false
    logistic.v1.ListReturnsRequest:
      type: object
      properties:
        returnType:
          title: return_type
          description: Customer or supplier
          $ref: '#/components/schemas/logistic.v1.ReturnType'
        status:
          title: status
          $ref: '#/components/schemas/logistic.v1.ReturnNoteStatus'
        startDate:
          title: start_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        endDate:
          title: end_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        pageSize:
          type: integer
          title: page_size
          format: int32
        pageNumber:
          type: integer
          title: page_number
          format: int32
      title: ListReturnsRequest
      additionalProperties: false
    logistic.v1.ListReturnsResponse:
      type: object
      properties:
        returns:
          type: array
          items:
            $ref: '#/components/schemas/logistic.v1.ReturnNote'
          title: returns
        totalCount:
          type: integer
          title: total_count
          format: int32
        totalValue:
          type:
            - integer
            - string
          title: total_value
          format: int64
      title: ListReturnsResponse
      additionalProperties: false
    logistic.v1.ProcessReturnRequestRequest:
      type: object
      properties:
        returnId:
          type: string
          title: return_id
        newStatus:
          title: new_status
          description: APPROVED or REJECTED
          $ref: '#/components/schemas/logistic.v1.ReturnNoteStatus'
        processedByUserId:
          type: string
          title: processed_by_user_id
        notes:
          type: string
          title: notes
      title: ProcessReturnRequestRequest
      additionalProperties: false
    logistic.v1.ProcessReturnRequestResponse:
      type: object
      properties:
        returnNote:
          title: return_note
          $ref: '#/components/schemas/logistic.v1.ReturnNote'
        message:
          type: string
          title: message
      title: ProcessReturnRequestResponse
      additionalProperties: false
    logistic.v1.ReturnCondition:
      type: string
      title: ReturnCondition
      enum:
        - RETURN_CONDITION_UNSPECIFIED
        - RETURN_CONDITION_NEW
        - RETURN_CONDITION_USED_GOOD
        - RETURN_CONDITION_DAMAGED
        - RETURN_CONDITION_DEFECTIVE
    logistic.v1.ReturnLineItem:
      type: object
      properties:
        productId:
          type: string
          title: product_id
        quantity:
          type: number
          title: quantity
          format: double
        condition:
          title: condition
          $ref: '#/components/schemas/logistic.v1.ReturnCondition'
        conditionNotes:
          type: string
          title: condition_notes
          description: Detailed state description
        batchId:
          type: string
          title: batch_id
          description: Specific batch/lot returned
      title: ReturnLineItem
      additionalProperties: false
      description: |-
        *
         ReturnLineItem shows what's being returned and its condition.

         Fix: Added batch_id to identify the specific lot being returned.
    logistic.v1.ReturnNote:
      type: object
      properties:
        documentId:
          type: string
          title: document_id
          description: '"RET-2025-001"'
        returnType:
          title: return_type
          $ref: '#/components/schemas/logistic.v1.ReturnType'
        fromId:
          type: string
          title: from_id
          description: Who's returning
        toId:
          type: string
          title: to_id
          description: Where it goes
        relatedDeliveryNoteId:
          type: string
          title: related_delivery_note_id
          description: Original delivery
        relatedInvoiceId:
          type: string
          title: related_invoice_id
          description: Original invoice
        status:
          title: status
          $ref: '#/components/schemas/logistic.v1.ReturnNoteStatus'
        items:
          type: array
          items:
            $ref: '#/components/schemas/logistic.v1.ReturnLineItem'
          title: items
        reason:
          type: string
          title: reason
          description: Why returned
        receivedAt:
          title: received_at
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        receivedByUserId:
          type: string
          title: received_by_user_id
        notes:
          type: string
          title: notes
      title: ReturnNote
      required:
        - documentId
      additionalProperties: false
      description: |-
        *
         ReturnNote (Bon de Retour)
         Logistics document for goods coming BACK.
         Can be customer returning to you OR you returning to supplier.

         Fix: ReturnLineItem now includes batch_id for returning specific lots.

         Example - Customer returns:
           return_id: "RET-2025-001"
           return_type: RETURN_TYPE_CUSTOMER_TO_SELLER
           from_id: "CMP-003" (customer)
           to_id: "WH-001" (your warehouse)
           related_delivery_note_id: "DN-2025-001"
           items: [2x PRD-001]
           reason: "Defective"

         INVENTORY IMPACT: +2 PRD-001 in WH-001
    logistic.v1.ReturnNoteStatus:
      type: string
      title: ReturnNoteStatus
      enum:
        - RETURN_STATUS_UNSPECIFIED
        - RETURN_STATUS_PENDING
        - RETURN_STATUS_APPROVED
        - RETURN_STATUS_IN_TRANSIT
        - RETURN_STATUS_RECEIVED
        - RETURN_STATUS_REJECTED
    logistic.v1.ReturnType:
      type: string
      title: ReturnType
      enum:
        - RETURN_TYPE_UNSPECIFIED
        - RETURN_TYPE_CUSTOMER_TO_SELLER
        - RETURN_TYPE_SELLER_TO_SUPPLIER
    payments.v1.Payment:
      type: object
      properties:
        documentId:
          type: string
          title: document_id
          description: '"PAY-2025-001"'
        payerId:
          type: string
          title: payer_id
          description: Who pays
        payeeId:
          type: string
          title: payee_id
          description: Who receives
        amount:
          type:
            - integer
            - string
          title: amount
          format: int64
          description: Amount in smallest currency unit
        currency:
          type: string
          title: currency
        paymentMethod:
          title: payment_method
          $ref: '#/components/schemas/payments.v1.PaymentMethod'
        status:
          title: status
          $ref: '#/components/schemas/payments.v1.PaymentStatus'
        relatedInvoiceId:
          type: string
          title: related_invoice_id
          description: Which invoice this pays
        paymentDate:
          title: payment_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        referenceNumber:
          type: string
          title: reference_number
          description: Bank reference, check number, etc.
        createdByUserId:
          type: string
          title: created_by_user_id
        notes:
          type: string
          title: notes
      title: Payment
      required:
        - documentId
      additionalProperties: false
      description: |-
        *
         Payment represents money transfer between parties.
         Links to invoices to track what's been paid.

         Example:
           payment_id: "PAY-2025-001"
           payer_id: "CMP-003" (customer)
           payee_id: "CMP-001" (your company)
           amount: 5400000
           payment_method: PAYMENT_METHOD_BANK_TRANSFER
           related_invoice_id: "INV-2025-001"
           status: PAYMENT_STATUS_COMPLETED
    payments.v1.PaymentMethod:
      type: string
      title: PaymentMethod
      enum:
        - PAYMENT_METHOD_UNSPECIFIED
        - PAYMENT_METHOD_CASH
        - PAYMENT_METHOD_CHECK
        - PAYMENT_METHOD_BANK_TRANSFER
        - PAYMENT_METHOD_CREDIT_CARD
        - PAYMENT_METHOD_MOBILE_MONEY
        - PAYMENT_METHOD_STORE_CREDIT
    payments.v1.PaymentStatus:
      type: string
      title: PaymentStatus
      enum:
        - PAYMENT_STATUS_UNSPECIFIED
        - PAYMENT_STATUS_PENDING
        - PAYMENT_STATUS_COMPLETED
        - PAYMENT_STATUS_FAILED
        - PAYMENT_STATUS_REFUNDED
    order.v1.CreateInvoiceRequest:
      type: object
      properties:
        invoice:
          title: invoice
          description: The invoice to create.
          $ref: '#/components/schemas/order.v1.Invoice'
      title: CreateInvoiceRequest
      additionalProperties: false
    order.v1.CreateInvoiceResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: The invoice of the order.
        error:
          type: string
          title: error
          description: The error message.
      title: CreateInvoiceResponse
      additionalProperties: false
    order.v1.FindInvoiceRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          description: The invoice to get.
      title: FindInvoiceRequest
      additionalProperties: false
    order.v1.FindInvoiceResponse:
      type: object
      properties:
        invoices:
          type: array
          items:
            $ref: '#/components/schemas/order.v1.Invoice'
          title: invoices
          description: The invoice of the order.
      title: FindInvoiceResponse
      additionalProperties: false
    order.v1.Invoice:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          format: uuid
          description: The unique identifier of the invoice.
        orderId:
          type: string
          title: order_id
          description: The unique identifier of the order.
          nullable: true
        status:
          title: status
          description: The status of the invoice.
          $ref: '#/components/schemas/order.v1.InvoiceStatus'
        orderItems:
          type: array
          items:
            $ref: '#/components/schemas/order.v1.OrderItem'
          title: order_items
          description: The list of items in the invoice.
        payments:
          type: array
          items:
            $ref: '#/components/schemas/order.v1.Payment'
          title: payments
          description: |-
            The payment methods used to pay the invoice.
             Some time, user can use multiple payment methods to pay the invoice.
        totalDiscount:
          type: number
          title: total_discount
          format: double
          description: Total discounts applied (e.g., promotions)
        totalVat:
          type: number
          title: total_vat
          format: double
          description: |-
            Total tax/VAT amount
             Example: 300.0 (e.g., 5% VAT on 6000 XAF subtotal, assuming no discount: 6000 * 0.05 = 300 XAF)
        subtotal:
          type: number
          title: subtotal
          format: double
          description: |-
            Amount hors taxe: pre-tax, pre-discount total from order_items
             Example: 6000.0 (e.g., from the 3 items at 2000 XAF each: 3 * 2000 = 6000 XAF)
        total:
          type: number
          title: total
          format: double
          description: |-
            Amount with tax: subtotal - total_discount + total_vat
             Example: 5801.0 (e.g., subtotal 6000 - discount 500 + VAT 300= 5801 XAF)
        customerTenderedAmount:
          type: number
          title: customer_tendered_amount
          format: double
          description: |-
            Amount given by client (e.g., cash tendered).
             Example: 10000.0 (e.g., customer hands over 10000 XAF cash for a 6000 XAF total)
        changeGiven:
          type: number
          title: change_given
          format: double
          description: |-
            Amount refunded to client (e.g., change or overpayment refund) Set to 0 for pending cases.
             Example: 4000.0 (e.g., immediate cash refund for overpayment: 10000 tendered - 6000 grand_total = 4000 XAF given back)
        balanceDue:
          type: number
          title: balance_due
          format: double
          description: |-
            Unpaid balance: grand_total - paid_amount (covers remaining_to_pay)
             Example: -4000.0 (e.g., after paying 10000 XAF on a 6000 XAF total: 6000 - 10000 = -4000 XAF, meaning 4000 XAF owed to customer)
        voucherId:
          type: string
          title: voucher_id
          format: uuid
          description: The voucher used to pay the invoice.
          nullable: true
        createdAt:
          title: created_at
          description: The date and time the invoice was created.
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        deliveryDate:
          title: delivery_date
          description: The delivery date of the invoice.
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        storeId:
          type: string
          title: store_id
          description: The store id
      title: Invoice
      required:
        - refId
      additionalProperties: false
      description: |-
        The invoice of an order.
         The invoice is a PDF file that can be downloaded by the customer.
         It contains the order details, the customer details, the payment details.
    order.v1.InvoiceStatus:
      type: string
      title: InvoiceStatus
      enum:
        - INVOICE_STATUS_UNSPECIFIED
        - INVOICE_STATUS_PAID
        - INVOICE_STATUS_PENDING_REFUND
        - INVOICE_STATUS_REFUNDED
    order.v1.OrderItem:
      type: object
      properties:
        storeProductId:
          type: string
          title: store_product_id
          description: The unique identifier of the store product.
        quantity:
          type: integer
          title: quantity
          format: int32
          description: The quantity of the product.
        unitPrice:
          type: integer
          title: unit_price
          format: int32
          description: |-
            The unit price in XAF of the product.
             WARN: This value is stored because the unit price can change over time.
        itemName:
          type: string
          title: item_name
          description: The name of the product.
      title: OrderItem
      additionalProperties: false
    order.v1.Payment:
      type: object
      properties:
        amount:
          type: number
          title: amount
          format: double
        method:
          title: method
          $ref: '#/components/schemas/order.v1.PaymentMethod'
        referenceId:
          type: string
          title: reference_id
          description: |-
            The reference id of the payment.
             For voucher, it is the voucher id.
          nullable: true
        timestamp:
          title: timestamp
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: Payment
      additionalProperties: false
    order.v1.PaymentMethod:
      type: string
      title: PaymentMethod
      enum:
        - PAYMENT_METHOD_UNSPECIFIED
        - PAYMENT_METHOD_CASH
        - PAYMENT_METHOD_CARD
        - PAYMENT_METHOD_ORANGE_MONEY
        - PAYMENT_METHOD_MTN_MONEY
        - PAYMENT_METHOD_VOUCHER
        - PAYMENT_METHOD_MOBILE
    order.v1.UpdateInvoiceRequest:
      type: object
      properties:
        invoice:
          title: invoice
          description: The invoice to update.
          $ref: '#/components/schemas/order.v1.Invoice'
      title: UpdateInvoiceRequest
      additionalProperties: false
    order.v1.UpdateInvoiceResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the invoice was successfully updated.
      title: UpdateInvoiceResponse
      additionalProperties: false
    order.v1.CreateOrderRequest:
      type: object
      properties:
        order:
          title: order
          description: The order to create.
          $ref: '#/components/schemas/order.v1.Order'
      title: CreateOrderRequest
      additionalProperties: false
    order.v1.CreateOrderResponse:
      type: object
      properties:
        orderId:
          type: string
          title: order_id
          minLength: 3
          description: The unique identifier of the created order.
      title: CreateOrderResponse
      required:
        - orderId
      additionalProperties: false
    order.v1.DeleteOrderRequest:
      type: object
      properties:
        orderId:
          type: string
          title: order_id
          minLength: 3
          description: The unique identifier of the order to delete.
      title: DeleteOrderRequest
      required:
        - orderId
      additionalProperties: false
    order.v1.DeleteOrderResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the order was successfully deleted.
      title: DeleteOrderResponse
      additionalProperties: false
    order.v1.FindOrdersRequest:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          description: The unique identifier of the order to retrieve.
          nullable: true
        fromId:
          type: string
          title: from_id
          description: The id of the client or the supplier if available.
          nullable: true
        isClientOrder:
          type: string
          title: is_client_order
          description: Whether the order is from the client or the supplier.
          nullable: true
        status:
          type: array
          items:
            $ref: '#/components/schemas/order.v1.OrderStatus'
          title: status
          description: The status of the order.
        storeId:
          type: string
          title: store_id
          description: The unique identifier of the store associated with the order.
          nullable: true
      title: FindOrdersRequest
      additionalProperties: false
    order.v1.FindOrdersResponse:
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/order.v1.Order'
          title: orders
          description: The unique identifiers of the orders.
      title: FindOrdersResponse
      additionalProperties: false
    order.v1.GetOrderRequest:
      type: object
      properties:
        orderId:
          type: string
          title: order_id
          minLength: 3
          description: The unique identifier of the order to retrieve.
      title: GetOrderRequest
      required:
        - orderId
      additionalProperties: false
    order.v1.GetOrderResponse:
      type: object
      properties:
        order:
          title: order
          description: The retrieved order data.
          $ref: '#/components/schemas/order.v1.Order'
        createdAt:
          title: created_at
          description: The date and time the order was created.
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        updatedAt:
          title: updated_at
          description: The date and time the order was last updated.
          nullable: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: GetOrderResponse
      additionalProperties: false
    order.v1.Order:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          description: The unique identifier of the order.
          nullable: true
        orderItems:
          type: array
          items:
            $ref: '#/components/schemas/order.v1.OrderItem'
          title: order_items
          description: The list of items in the order.
        orderPrices:
          title: order_prices
          description: The total price of the order in XAF.
          $ref: '#/components/schemas/order.v1.OrderPrices'
        status:
          title: status
          description: The status of the order.
          $ref: '#/components/schemas/order.v1.OrderStatus'
        statusHistory:
          type: array
          items:
            $ref: '#/components/schemas/order.v1.StatusHistory'
          title: status_history
          description: The status history.
        createdAt:
          title: created_at
          description: The date and time the order was created.
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        updatedAt:
          title: updated_at
          description: The date and time the order was last updated.
          nullable: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        storeId:
          type: string
          title: store_id
          format: uuid
          description: The unique identifier of the store associated with the order.
        initiatedBy:
          type: string
          title: initiated_by
          minLength: 3
          description: The unique identifier of the user who initiated the order.
        cancellationReason:
          type: string
          title: cancellation_reason
          description: The reason for the cancellation of the order.
          nullable: true
      title: Order
      required:
        - storeId
        - initiatedBy
      additionalProperties: false
    order.v1.OrderPrices:
      type: object
      properties:
        subtotal:
          type: integer
          title: subtotal
          format: int32
        discounts:
          type: integer
          title: discounts
          format: int32
        totalVatAmount:
          type: integer
          title: total_vat_amount
          format: int32
        grandTotal:
          type: integer
          title: grand_total
          format: int32
      title: OrderPrices
      additionalProperties: false
    order.v1.OrderStatus:
      type: string
      title: OrderStatus
      enum:
        - ORDER_STATUS_UNSPECIFIED
        - ORDER_STATUS_PENDING
        - ORDER_STATUS_PROCESSING
        - ORDER_STATUS_COMPLETED
        - ORDER_STATUS_CANCELLED
    order.v1.SaleOrder:
      type: object
      properties:
        commitmentDate:
          title: commitment_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        clientId:
          type: string
          title: client_id
          format: uuid
          nullable: true
      title: SaleOrder
      additionalProperties: false
    order.v1.StatusHistory:
      type: object
      properties:
        status:
          title: status
          $ref: '#/components/schemas/order.v1.OrderStatus'
        updatedBy:
          type: string
          title: updated_by
        updatedAt:
          title: updated_at
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: StatusHistory
      additionalProperties: false
    order.v1.OrderLineItem:
      type: object
      properties:
        productId:
          type: string
          title: product_id
          description: Which product
        quantity:
          type: number
          title: quantity
          format: double
          description: How many units
        productName:
          title: product_name
          description: Product name
          $ref: '#/components/schemas/inventory.v1.Internationalized'
        unitPrice:
          type:
            - integer
            - string
          title: unit_price
          format: int64
          description: Price per unit (in smallest currency)
        total:
          type:
            - integer
            - string
          title: total
          format: int64
          description: quantity * unit_price
        notes:
          type: string
          title: notes
          description: Special notes for this line
        batchId:
          type: string
          title: batch_id
          description: 'Optional: Specific batch/lot requested'
      title: OrderLineItem
      additionalProperties: false
      description: |-
        *
         OrderLineItem represents a single product line in an order or quotation.
         Used in PurchaseOrder, SalesOrder, Quotation, etc.

         Fix: Added optional batch_id for specifying lots in orders (e.g., for perishable goods).

         Example:
           product_id: "PRD-001"
           quantity: 10
           product_name: "Product Name"
           unit_price: 450000
           total: 4500000
           batch_id: "BATCH-2025-001" (optional)
    order.v1.CancelPurchaseOrderRequest:
      type: object
      properties:
        poId:
          type: string
          title: po_id
        reason:
          type: string
          title: reason
        cancelledByUserId:
          type: string
          title: cancelled_by_user_id
      title: CancelPurchaseOrderRequest
      additionalProperties: false
    order.v1.CancelPurchaseOrderResponse:
      type: object
      properties:
        purchaseOrder:
          title: purchase_order
          $ref: '#/components/schemas/order.v1.PurchaseOrder'
        message:
          type: string
          title: message
      title: CancelPurchaseOrderResponse
      additionalProperties: false
    order.v1.CreatePurchaseOrderRequest:
      type: object
      properties:
        supplierId:
          type: string
          title: supplier_id
        buyerId:
          type: string
          title: buyer_id
          description: Your company
        destinationId:
          type: string
          title: destination_id
        items:
          type: array
          items:
            $ref: '#/components/schemas/order.v1.OrderLineItem'
          title: items
        expectedDeliveryDate:
          title: expected_delivery_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        createdByUserId:
          type: string
          title: created_by_user_id
        notes:
          type: string
          title: notes
      title: CreatePurchaseOrderRequest
      additionalProperties: false
    order.v1.CreatePurchaseOrderResponse:
      type: object
      properties:
        poId:
          type: string
          title: po_id
        purchaseOrder:
          title: purchase_order
          $ref: '#/components/schemas/order.v1.PurchaseOrder'
        message:
          type: string
          title: message
      title: CreatePurchaseOrderResponse
      additionalProperties: false
    order.v1.CreateReceivingNoteRequest:
      type: object
      properties:
        purchaseOrderId:
          type: string
          title: purchase_order_id
        supplierId:
          type: string
          title: supplier_id
        storeId:
          type: string
          title: store_id
        items:
          type: array
          items:
            $ref: '#/components/schemas/logistic.v1.ReceivingLineItem'
          title: items
          description: What actually arrived
        receivedByUserId:
          type: string
          title: received_by_user_id
        notes:
          type: string
          title: notes
          description: Condition notes
      title: CreateReceivingNoteRequest
      additionalProperties: false
    order.v1.CreateReceivingNoteResponse:
      type: object
      properties:
        rnId:
          type: string
          title: rn_id
        receivingNote:
          title: receiving_note
          $ref: '#/components/schemas/logistic.v1.ReceivingNote'
        inventoryTransactionIds:
          type: array
          items:
            type: string
          title: inventory_transaction_ids
        hasDiscrepancies:
          type: boolean
          title: has_discrepancies
          description: If received != expected
        discrepancyProductIds:
          type: array
          items:
            type: string
          title: discrepancy_product_ids
        message:
          type: string
          title: message
      title: CreateReceivingNoteResponse
      additionalProperties: false
    order.v1.GetPurchaseOrderRequest:
      type: object
      properties:
        poId:
          type: string
          title: po_id
      title: GetPurchaseOrderRequest
      additionalProperties: false
    order.v1.GetPurchaseOrderResponse:
      type: object
      properties:
        purchaseOrder:
          title: purchase_order
          $ref: '#/components/schemas/order.v1.PurchaseOrder'
        receivingNotes:
          type: array
          items:
            $ref: '#/components/schemas/logistic.v1.ReceivingNote'
          title: receiving_notes
        invoices:
          type: array
          items:
            $ref: '#/components/schemas/financial.v1.Invoice'
          title: invoices
          description: Supplier invoices
        payments:
          type: array
          items:
            $ref: '#/components/schemas/payments.v1.Payment'
          title: payments
      title: GetPurchaseOrderResponse
      additionalProperties: false
    order.v1.GetSuggestedPurchaseOrdersRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          description: Optional - all stores if not specified
      title: GetSuggestedPurchaseOrdersRequest
      additionalProperties: false
    order.v1.GetSuggestedPurchaseOrdersResponse:
      type: object
      properties:
        suggestions:
          type: array
          items:
            $ref: '#/components/schemas/order.v1.SuggestedPurchase'
          title: suggestions
        totalItems:
          type: integer
          title: total_items
          format: int32
      title: GetSuggestedPurchaseOrdersResponse
      additionalProperties: false
    order.v1.ListPurchaseOrdersRequest:
      type: object
      properties:
        supplierId:
          type: string
          title: supplier_id
          description: Filter by supplier
        status:
          title: status
          $ref: '#/components/schemas/order.v1.PurchaseOrderStatus'
        startDate:
          title: start_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        endDate:
          title: end_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        pageSize:
          type: integer
          title: page_size
          format: int32
        pageNumber:
          type: integer
          title: page_number
          format: int32
      title: ListPurchaseOrdersRequest
      additionalProperties: false
    order.v1.ListPurchaseOrdersResponse:
      type: object
      properties:
        purchaseOrders:
          type: array
          items:
            $ref: '#/components/schemas/order.v1.PurchaseOrder'
          title: purchase_orders
        totalCount:
          type: integer
          title: total_count
          format: int32
        totalValue:
          type:
            - integer
            - string
          title: total_value
          format: int64
      title: ListPurchaseOrdersResponse
      additionalProperties: false
    order.v1.PurchaseOrder:
      type: object
      properties:
        documentId:
          type: string
          title: document_id
          description: '"PO-2025-001"'
        supplierId:
          type: string
          title: supplier_id
          description: Company selling to you
        buyerIdId:
          type: string
          title: buyer_id_id
          description: The store company
        status:
          title: status
          $ref: '#/components/schemas/order.v1.PurchaseOrderStatus'
        items:
          type: array
          items:
            $ref: '#/components/schemas/order.v1.OrderLineItem'
          title: items
        totalAmount:
          type:
            - integer
            - string
          title: total_amount
          format: int64
          description: Total cost in smallest currency unit
        currency:
          type: string
          title: currency
          nullable: true
        createdByUserId:
          type: string
          title: created_by_user_id
        createdAt:
          title: created_at
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        expectedDeliveryDate:
          title: expected_delivery_date
          nullable: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        notes:
          type: string
          title: notes
          description: Special instructions.
          nullable: true
      title: PurchaseOrder
      required:
        - documentId
      additionalProperties: false
      description: |-
        *
         PurchaseOrder (Bon de Commande to supplier)
         Created when you want to buy products from a supplier.
         Does NOT change inventory yet - just an intention.

         Flow: Create PO → Send to supplier → Wait for delivery

         Example:
           po_id: "PO-2025-001"
           supplier_id: "CMP-002" (supplier company)
           buyer_id: "CMP-001" (your company)
           status: PO_STATUS_PENDING
           items: [50x PRD-001 @ 400000 each]
           total_amount: 20000000 (centimes)
    order.v1.PurchaseOrderStatus:
      type: string
      title: PurchaseOrderStatus
      enum:
        - PO_STATUS_UNSPECIFIED
        - PO_STATUS_DRAFT
        - PO_STATUS_PENDING
        - PO_STATUS_PARTIALLY_RECEIVED
        - PO_STATUS_RECEIVED
        - PO_STATUS_CANCELLED
    order.v1.SuggestedPurchase:
      type: object
      properties:
        product:
          title: product
          $ref: '#/components/schemas/inventory.v1.StoreProduct'
        preferredSupplierId:
          type: string
          title: preferred_supplier_id
        currentStock:
          type:
            - integer
            - string
          title: current_stock
          format: int64
        reorderLevel:
          type:
            - integer
            - string
          title: reorder_level
          format: int64
        suggestedQuantity:
          type:
            - integer
            - string
          title: suggested_quantity
          format: int64
        estimatedCost:
          type:
            - integer
            - string
          title: estimated_cost
          format: int64
      title: SuggestedPurchase
      additionalProperties: false
    order.v1.UpdatePurchaseOrderStatusRequest:
      type: object
      properties:
        poId:
          type: string
          title: po_id
        newStatus:
          title: new_status
          $ref: '#/components/schemas/order.v1.PurchaseOrderStatus'
        updatedByUserId:
          type: string
          title: updated_by_user_id
        notes:
          type: string
          title: notes
      title: UpdatePurchaseOrderStatusRequest
      additionalProperties: false
    order.v1.UpdatePurchaseOrderStatusResponse:
      type: object
      properties:
        purchaseOrder:
          title: purchase_order
          $ref: '#/components/schemas/order.v1.PurchaseOrder'
        message:
          type: string
          title: message
      title: UpdatePurchaseOrderStatusResponse
      additionalProperties: false
    order.v1.GenerateBillingRequest:
      type: object
      properties:
        orderId:
          type: string
          title: order_id
          description: The unique identifier of the order.
      title: GenerateBillingRequest
      additionalProperties: false
    order.v1.GenerateBillingResponse:
      type: object
      properties:
        orderReceipt:
          title: order_receipt
          description: The receipt of the order.
          $ref: '#/components/schemas/order.v1.OrderReceipt'
      title: GenerateBillingResponse
      additionalProperties: false
    order.v1.OrderReceipt:
      type: object
      properties:
        orderId:
          type: string
          title: order_id
          description: / ...order details...
        orderStatus:
          type: string
          title: order_status
        orderTotalPrice:
          type: string
          title: order_total_price
        orderCreatedAt:
          type: string
          title: order_created_at
        orderUpdatedAt:
          type: string
          title: order_updated_at
        orderResourceName:
          type: string
          title: order_resource_name
        orderResourceAddress:
          type: string
          title: order_resource_address
        orderResourcePhoneNumber:
          type: string
          title: order_resource_phone_number
        orderResourceEmail:
          type: string
          title: order_resource_email
        orderResourceLogoMediaId:
          type: string
          title: order_resource_logo_media_id
        orderItems:
          type: array
          items:
            $ref: '#/components/schemas/order.v1.OrderReceiptItem'
          title: order_items
      title: OrderReceipt
      additionalProperties: false
      description: |-
        The receipt of an order.
         The receipt is a PDF file that can be downloaded by the customer.
         It contains the order details, the customer details, the payment details.
    order.v1.OrderReceiptItem:
      type: object
      properties:
        productId:
          type: string
          title: product_id
        productName:
          type: string
          title: product_name
        productPrice:
          type: string
          title: product_price
        quantity:
          type: integer
          title: quantity
          format: int32
        receiptItemTotalPrice:
          type: integer
          title: receipt_item_total_price
          format: int32
      title: OrderReceiptItem
      additionalProperties: false
    order.v1.CancelSalesOrderRequest:
      type: object
      properties:
        documentId:
          type: string
          title: document_id
        reason:
          type: string
          title: reason
        cancelledByUserId:
          type: string
          title: cancelled_by_user_id
      title: CancelSalesOrderRequest
      additionalProperties: false
    order.v1.CancelSalesOrderResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
        message:
          type: string
          title: message
      title: CancelSalesOrderResponse
      additionalProperties: false
    order.v1.CreateDeliveryNoteRequest:
      type: object
      properties:
        salesOrderId:
          type: string
          title: sales_order_id
        carrier:
          type: string
          title: carrier
          description: Shipping company
        trackingNumber:
          type: string
          title: tracking_number
        createdByUserId:
          type: string
          title: created_by_user_id
        items:
          type: array
          items:
            $ref: '#/components/schemas/logistic.v1.DeliveryLineItem'
          title: items
          description: Can be partial delivery
        notes:
          type: string
          title: notes
      title: CreateDeliveryNoteRequest
      additionalProperties: false
    order.v1.CreateDeliveryNoteResponse:
      type: object
      properties:
        documentId:
          type: string
          title: document_id
        deliveryNote:
          title: delivery_note
          $ref: '#/components/schemas/logistic.v1.DeliveryNote'
        inventoryTransactionIds:
          type: array
          items:
            type: string
          title: inventory_transaction_ids
        message:
          type: string
          title: message
      title: CreateDeliveryNoteResponse
      additionalProperties: false
    order.v1.CreateInvoiceFromSalesOrderRequest:
      type: object
      properties:
        salesOrderId:
          type: string
          title: sales_order_id
        deliveryNoteId:
          type: string
          title: delivery_note_id
          description: Optional - link to delivery
        dueDate:
          title: due_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        paymentTerms:
          type: string
          title: payment_terms
          description: '"Net 30", "COD", etc.'
        createdByUserId:
          type: string
          title: created_by_user_id
      title: CreateInvoiceFromSalesOrderRequest
      additionalProperties: false
    order.v1.CreateInvoiceFromSalesOrderResponse:
      type: object
      properties:
        documentId:
          type: string
          title: document_id
          description: The invoice id
        invoice:
          title: invoice
          $ref: '#/components/schemas/financial.v1.Invoice'
        message:
          type: string
          title: message
      title: CreateInvoiceFromSalesOrderResponse
      additionalProperties: false
    order.v1.CreateSalesOrderRequest:
      type: object
      properties:
        customerId:
          type: string
          title: customer_id
        sellerId:
          type: string
          title: seller_id
          description: Your company
        sourceWarehouseId:
          type: string
          title: source_warehouse_id
        items:
          type: array
          items:
            $ref: '#/components/schemas/order.v1.OrderLineItem'
          title: items
        deliveryDate:
          title: delivery_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        createdByUserId:
          type: string
          title: created_by_user_id
        notes:
          type: string
          title: notes
      title: CreateSalesOrderRequest
      additionalProperties: false
    order.v1.CreateSalesOrderResponse:
      type: object
      properties:
        soId:
          type: string
          title: so_id
        salesOrder:
          title: sales_order
          $ref: '#/components/schemas/order.v1.SalesOrder'
        allItemsAvailable:
          type: boolean
          title: all_items_available
        unavailableProductIds:
          type: array
          items:
            type: string
          title: unavailable_product_ids
        message:
          type: string
          title: message
      title: CreateSalesOrderResponse
      additionalProperties: false
    order.v1.GetSalesOrderRequest:
      type: object
      properties:
        soId:
          type: string
          title: so_id
      title: GetSalesOrderRequest
      additionalProperties: false
    order.v1.GetSalesOrderResponse:
      type: object
      properties:
        salesOrder:
          title: sales_order
          $ref: '#/components/schemas/order.v1.SalesOrder'
        deliveryNotes:
          type: array
          items:
            $ref: '#/components/schemas/logistic.v1.DeliveryNote'
          title: delivery_notes
          description: Associated deliveries
        invoices:
          type: array
          items:
            $ref: '#/components/schemas/financial.v1.Invoice'
          title: invoices
          description: Associated invoices
        payments:
          type: array
          items:
            $ref: '#/components/schemas/payments.v1.Payment'
          title: payments
          description: Associated payments
      title: GetSalesOrderResponse
      additionalProperties: false
    order.v1.ListSalesOrdersRequest:
      type: object
      properties:
        customerId:
          type: string
          title: customer_id
          description: Filter by customer
        status:
          title: status
          description: Filter by status
          $ref: '#/components/schemas/order.v1.SalesOrderStatus'
        startDate:
          title: start_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        endDate:
          title: end_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        pageSize:
          type: integer
          title: page_size
          format: int32
        pageNumber:
          type: integer
          title: page_number
          format: int32
      title: ListSalesOrdersRequest
      additionalProperties: false
    order.v1.ListSalesOrdersResponse:
      type: object
      properties:
        salesOrders:
          type: array
          items:
            $ref: '#/components/schemas/order.v1.SalesOrder'
          title: sales_orders
        totalCount:
          type: integer
          title: total_count
          format: int32
        totalValue:
          type:
            - integer
            - string
          title: total_value
          format: int64
          description: Sum of all orders
      title: ListSalesOrdersResponse
      additionalProperties: false
    order.v1.SalesOrder:
      type: object
      properties:
        documentId:
          type: string
          title: document_id
          description: '"SO-2025-001"'
        customerId:
          type: string
          title: customer_id
          description: Company buying from you
        sellerId:
          type: string
          title: seller_id
          description: Your company
        sourceWarehouseId:
          type: string
          title: source_warehouse_id
          description: Where to pick items
        status:
          title: status
          $ref: '#/components/schemas/order.v1.SalesOrderStatus'
        items:
          type: array
          items:
            $ref: '#/components/schemas/order.v1.OrderLineItem'
          title: items
        orderPrices:
          title: order_prices
          $ref: '#/components/schemas/order.v1.OrderPrices'
        currency:
          type: string
          title: currency
          nullable: true
        createdByUserId:
          type: string
          title: created_by_user_id
        createdAt:
          title: created_at
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        deliveryDate:
          title: delivery_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        notes:
          type: string
          title: notes
          nullable: true
      title: SalesOrder
      required:
        - documentId
      additionalProperties: false
      description: |-
        *
         SalesOrder (Bon de Commande from customer)
         Created when a customer wants to buy from you.
         Does NOT change inventory yet - just reserves it.

         Flow: Receive customer order → Prepare items → Ship

         Example:
           so_id: "SO-2025-001"
           customer_id: "CMP-003"
           seller_id: "CMP-001" (your company)
           status: SO_STATUS_CONFIRMED
           items: [10x PRD-001 @ 450000 each]
    order.v1.SalesOrderStatus:
      type: string
      title: SalesOrderStatus
      enum:
        - SO_STATUS_UNSPECIFIED
        - SO_STATUS_DRAFT
        - SO_STATUS_CONFIRMED
        - SO_STATUS_PROCESSING
        - SO_STATUS_SHIPPED
        - SO_STATUS_DELIVERED
        - SO_STATUS_CANCELLED
    order.v1.UpdateSalesOrderStatusRequest:
      type: object
      properties:
        soId:
          type: string
          title: so_id
        newStatus:
          title: new_status
          $ref: '#/components/schemas/order.v1.SalesOrderStatus'
        updatedByUserId:
          type: string
          title: updated_by_user_id
        notes:
          type: string
          title: notes
      title: UpdateSalesOrderStatusRequest
      additionalProperties: false
    order.v1.UpdateSalesOrderStatusResponse:
      type: object
      properties:
        salesOrder:
          title: sales_order
          $ref: '#/components/schemas/order.v1.SalesOrder'
        message:
          type: string
          title: message
      title: UpdateSalesOrderStatusResponse
      additionalProperties: false
    order.v1.CreateVoucherRequest:
      type: object
      properties:
        voucher:
          title: voucher
          $ref: '#/components/schemas/order.v1.Voucher'
      title: CreateVoucherRequest
      additionalProperties: false
    order.v1.CreateVoucherResponse:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
      title: CreateVoucherResponse
      additionalProperties: false
    order.v1.FindVouchersRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          description: The store id.
      title: FindVouchersRequest
      additionalProperties: false
    order.v1.FindVouchersResponse:
      type: object
      properties:
        vouchers:
          type: array
          items:
            $ref: '#/components/schemas/order.v1.Voucher'
          title: vouchers
      title: FindVouchersResponse
      additionalProperties: false
    order.v1.GetVoucherRequest:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
      title: GetVoucherRequest
      additionalProperties: false
    order.v1.GetVoucherResponse:
      type: object
      properties:
        voucher:
          title: voucher
          $ref: '#/components/schemas/order.v1.Voucher'
      title: GetVoucherResponse
      additionalProperties: false
    order.v1.RedeemVoucherRequest:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
      title: RedeemVoucherRequest
      additionalProperties: false
    order.v1.RedeemVoucherResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
        error:
          type: string
          title: error
          nullable: true
      title: RedeemVoucherResponse
      additionalProperties: false
    order.v1.Voucher:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          format: uuid
        orderId:
          type: string
          title: order_id
          format: uuid
        invoiceId:
          type: string
          title: invoice_id
          format: uuid
        storeId:
          type: string
          title: store_id
          format: uuid
        amount:
          type: number
          title: amount
          format: double
        createdAt:
          title: created_at
          description: When the voucher was created.
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        expiryDate:
          title: expiry_date
          description: When the voucher expires.
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        status:
          title: status
          $ref: '#/components/schemas/order.v1.VoucherStatus'
        redeemedByReferenceId:
          type: string
          title: redeemed_by_reference_id
          description: |-
            Who redeemed the voucher.
             The voucher can be redeemed by another invoice.
          nullable: true
        redeemedAt:
          title: redeemed_at
          nullable: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        additionalInfo:
          type: string
          title: additional_info
          description: The additional information about the voucher.
          nullable: true
      title: Voucher
      required:
        - refId
        - orderId
        - invoiceId
        - storeId
      additionalProperties: false
    order.v1.VoucherStatus:
      type: string
      title: VoucherStatus
      enum:
        - VOUCHER_STATUS_UNSPECIFIED
        - VOUCHER_STATUS_ISSUED
        - VOUCHER_STATUS_REDEEMED
        - VOUCHER_STATUS_EXPIRED
    payments.v1.CashReceipt:
      type: object
      properties:
        documentId:
          type: string
          title: document_id
          description: '"CASH-2025-001"'
        cashierUserId:
          type: string
          title: cashier_user_id
          description: Who processed sale
        customerId:
          type: string
          title: customer_id
          description: Can be null for anonymous
        storeId:
          type: string
          title: store_id
          description: Which location/store
        items:
          type: array
          items:
            $ref: '#/components/schemas/financial.v1.InvoiceLineItem'
          title: items
        subtotal:
          type:
            - integer
            - string
          title: subtotal
          format: int64
        taxAmount:
          type:
            - integer
            - string
          title: tax_amount
          format: int64
        totalAmount:
          type:
            - integer
            - string
          title: total_amount
          format: int64
        amountPaid:
          type:
            - integer
            - string
          title: amount_paid
          format: int64
          description: What customer gave
        changeGiven:
          type:
            - integer
            - string
          title: change_given
          format: int64
          description: amount_paid - total_amount
        currency:
          type: string
          title: currency
        paymentIds:
          type: array
          items:
            type: string
          title: payment_ids
        transactionTime:
          title: transaction_time
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        notes:
          type: string
          title: notes
      title: CashReceipt
      required:
        - documentId
      additionalProperties: false
      description: |-
        *
         CashReceipt (Bon de Caisse)
         Issued at point of sale for immediate payment.
         Combines invoice + payment proof in one document.
         Common in retail where customer pays immediately.

         Fix: Items include batch_id for lot-specific sales (e.g., FIFO for perishables).

         Example - Retail store sale:
           receipt_id: "CASH-2025-001"
           cashier_user_id: "USR-005"
           customer_id: "CMP-003" (can be null for walk-in)
           store_id: "WH-002" (retail store)
           items: [1x PRD-001 @ 450000]
           subtotal: 450000
           tax: 90000
           total: 540000
           amount_paid: 540000
           payment_method: PAYMENT_METHOD_CASH

         INVENTORY IMPACT: -1 PRD-001 from WH-002
         ACCOUNTING IMPACT: Immediate revenue + payment
    payments.v1.CancelVoucherRequest:
      type: object
      properties:
        voucherId:
          type: string
          title: voucher_id
        reason:
          type: string
          title: reason
        cancelledByUserId:
          type: string
          title: cancelled_by_user_id
      title: CancelVoucherRequest
      additionalProperties: false
    payments.v1.CancelVoucherResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
        message:
          type: string
          title: message
      title: CancelVoucherResponse
      additionalProperties: false
    payments.v1.CreateGiftVoucherRequest:
      type: object
      properties:
        initialValue:
          type:
            - integer
            - string
          title: initial_value
          format: int64
        currency:
          type: string
          title: currency
        issuedToCustomerId:
          type: string
          title: issued_to_customer_id
          description: Optional
        issuedByUserId:
          type: string
          title: issued_by_user_id
        validUntil:
          title: valid_until
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        relatedInvoiceId:
          type: string
          title: related_invoice_id
          description: If issued from change shortage
        notes:
          type: string
          title: notes
      title: CreateGiftVoucherRequest
      additionalProperties: false
    payments.v1.CreateGiftVoucherResponse:
      type: object
      properties:
        voucherId:
          type: string
          title: voucher_id
        voucher:
          title: voucher
          $ref: '#/components/schemas/payments.v1.GiftVoucher'
        voucherCode:
          type: string
          title: voucher_code
          description: Print this - barcode compatible
        message:
          type: string
          title: message
      title: CreateGiftVoucherResponse
      additionalProperties: false
    payments.v1.GetVoucherHistoryRequest:
      type: object
      properties:
        voucherId:
          type: string
          title: voucher_id
      title: GetVoucherHistoryRequest
      additionalProperties: false
    payments.v1.GetVoucherHistoryResponse:
      type: object
      properties:
        voucher:
          title: voucher
          $ref: '#/components/schemas/payments.v1.GiftVoucher'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/payments.v1.VoucherTransaction'
          title: transactions
        totalUsed:
          type:
            - integer
            - string
          title: total_used
          format: int64
        usageCount:
          type: integer
          title: usage_count
          format: int32
      title: GetVoucherHistoryResponse
      additionalProperties: false
    payments.v1.GetVoucherRequest:
      type: object
      oneOf:
        - properties:
            voucherCode:
              type: string
              title: voucher_code
          title: voucher_code
          required:
            - voucherCode
        - properties:
            voucherId:
              type: string
              title: voucher_id
          title: voucher_id
          required:
            - voucherId
      title: GetVoucherRequest
      additionalProperties: false
    payments.v1.GetVoucherResponse:
      type: object
      properties:
        voucher:
          title: voucher
          $ref: '#/components/schemas/payments.v1.GiftVoucher'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/payments.v1.VoucherTransaction'
          title: transactions
          description: Usage history
      title: GetVoucherResponse
      additionalProperties: false
    payments.v1.GiftVoucher:
      type: object
      properties:
        documentId:
          type: string
          title: document_id
          description: '"GV-2025-001"'
        voucherCode:
          type: string
          title: voucher_code
          description: '"GIFT-XMAS-12345" - what customer uses'
        initialValue:
          type:
            - integer
            - string
          title: initial_value
          format: int64
          description: Original amount
        remainingValue:
          type:
            - integer
            - string
          title: remaining_value
          format: int64
          description: What's left
        currency:
          type: string
          title: currency
        issuedToCustomerId:
          type: string
          title: issued_to_customer_id
          description: Optional - can be transferred
        issuedByUserId:
          type: string
          title: issued_by_user_id
        status:
          title: status
          $ref: '#/components/schemas/payments.v1.VoucherStatus'
        issuedAt:
          title: issued_at
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        validUntil:
          title: valid_until
          description: Expiration
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        notes:
          type: string
          title: notes
      title: GiftVoucher
      required:
        - documentId
      additionalProperties: false
      description: |-
        *
         GiftVoucher (Bon Cadeau / Bon d'Achat)
         Prepaid credit that can be used for future purchases.
         Like a gift card or store credit.

         Example:
           voucher_id: "GV-2025-001"
           voucher_code: "GIFT-XMAS-12345"
           initial_value: 100000
           remaining_value: 100000
           issued_to_customer_id: "CMP-003"
           valid_until: 2026-12-31
           status: VOUCHER_STATUS_ACTIVE
    payments.v1.ListVouchersRequest:
      type: object
      properties:
        customerId:
          type: string
          title: customer_id
          description: Optional
        status:
          title: status
          description: Optional
          $ref: '#/components/schemas/payments.v1.VoucherStatus'
        expiringSoon:
          type: boolean
          title: expiring_soon
          description: Expiring within 30 days
        issuedAfter:
          title: issued_after
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        pageSize:
          type: integer
          title: page_size
          format: int32
        pageNumber:
          type: integer
          title: page_number
          format: int32
      title: ListVouchersRequest
      additionalProperties: false
    payments.v1.ListVouchersResponse:
      type: object
      properties:
        vouchers:
          type: array
          items:
            $ref: '#/components/schemas/payments.v1.GiftVoucher'
          title: vouchers
        totalCount:
          type: integer
          title: total_count
          format: int32
        totalValue:
          type:
            - integer
            - string
          title: total_value
          format: int64
          description: Sum of remaining values
      title: ListVouchersResponse
      additionalProperties: false
    payments.v1.UseVoucherRequest:
      type: object
      properties:
        voucherCode:
          type: string
          title: voucher_code
        amountToUse:
          type:
            - integer
            - string
          title: amount_to_use
          format: int64
        relatedReceiptId:
          type: string
          title: related_receipt_id
          description: Or related_invoice_id
        usedByUserId:
          type: string
          title: used_by_user_id
      title: UseVoucherRequest
      additionalProperties: false
    payments.v1.UseVoucherResponse:
      type: object
      properties:
        transactionId:
          type: string
          title: transaction_id
        transaction:
          title: transaction
          $ref: '#/components/schemas/payments.v1.VoucherTransaction'
        updatedVoucher:
          title: updated_voucher
          $ref: '#/components/schemas/payments.v1.GiftVoucher'
        remainingValue:
          type:
            - integer
            - string
          title: remaining_value
          format: int64
        fullyUsed:
          type: boolean
          title: fully_used
        message:
          type: string
          title: message
      title: UseVoucherResponse
      additionalProperties: false
    payments.v1.ValidateVoucherRequest:
      type: object
      properties:
        voucherCode:
          type: string
          title: voucher_code
      title: ValidateVoucherRequest
      additionalProperties: false
    payments.v1.ValidateVoucherResponse:
      type: object
      properties:
        isValid:
          type: boolean
          title: is_valid
        voucherId:
          type: string
          title: voucher_id
        remainingValue:
          type:
            - integer
            - string
          title: remaining_value
          format: int64
        validUntil:
          title: valid_until
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        status:
          title: status
          $ref: '#/components/schemas/payments.v1.VoucherStatus'
        message:
          type: string
          title: message
          description: Error message if invalid
      title: ValidateVoucherResponse
      additionalProperties: false
    payments.v1.VoucherStatus:
      type: string
      title: VoucherStatus
      enum:
        - VOUCHER_STATUS_UNSPECIFIED
        - VOUCHER_STATUS_ACTIVE
        - VOUCHER_STATUS_PARTIALLY_USED
        - VOUCHER_STATUS_FULLY_USED
        - VOUCHER_STATUS_EXPIRED
        - VOUCHER_STATUS_CANCELLED
    payments.v1.VoucherTransaction:
      type: object
      properties:
        documentId:
          type: string
          title: document_id
        voucherId:
          type: string
          title: voucher_id
          description: Which voucher used
        relatedInvoiceId:
          type: string
          title: related_invoice_id
          description: Which purchase
        relatedReceiptId:
          type: string
          title: related_receipt_id
          description: Or cash receipt
        amountUsed:
          type:
            - integer
            - string
          title: amount_used
          format: int64
        remainingAfter:
          type:
            - integer
            - string
          title: remaining_after
          format: int64
        usedAt:
          title: used_at
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        usedByUserId:
          type: string
          title: used_by_user_id
      title: VoucherTransaction
      required:
        - documentId
      additionalProperties: false
      description: |-
        *
         VoucherTransaction tracks each time a voucher is used.

         Example:
           transaction_id: "VT-001"
           voucher_id: "GV-2025-001"
           related_invoice_id: "INV-2025-005"
           amount_used: 50000
           remaining_after: 50000
    payments.v1.CreatePaymentRequest:
      type: object
      properties:
        payerId:
          type: string
          title: payer_id
          description: Company making payment
        payeeId:
          type: string
          title: payee_id
          description: Company receiving payment
        amount:
          type:
            - integer
            - string
          title: amount
          format: int64
        currency:
          type: string
          title: currency
        paymentMethod:
          title: payment_method
          $ref: '#/components/schemas/payments.v1.PaymentMethod'
        referenceNumber:
          type: string
          title: reference_number
          description: Bank ref, check number, etc.
          nullable: true
        notes:
          type: string
          title: notes
          nullable: true
      title: CreatePaymentRequest
      additionalProperties: false
    payments.v1.CreatePaymentResponse:
      type: object
      properties:
        paymentId:
          type: string
          title: payment_id
        payment:
          title: payment
          $ref: '#/components/schemas/payments.v1.Payment'
        updatedInvoice:
          title: updated_invoice
          description: Updated status
          $ref: '#/components/schemas/financial.v1.Invoice'
        message:
          type: string
          title: message
      title: CreatePaymentResponse
      additionalProperties: false
    payments.v1.CreateRefundRequest:
      type: object
      properties:
        originalPaymentId:
          type: string
          title: original_payment_id
        creditNoteId:
          type: string
          title: credit_note_id
          description: Reason for refund
        refundAmount:
          type:
            - integer
            - string
          title: refund_amount
          format: int64
        refundedByUserId:
          type: string
          title: refunded_by_user_id
        notes:
          type: string
          title: notes
      title: CreateRefundRequest
      additionalProperties: false
    payments.v1.CreateRefundResponse:
      type: object
      properties:
        refundPaymentId:
          type: string
          title: refund_payment_id
        refundPayment:
          title: refund_payment
          $ref: '#/components/schemas/payments.v1.Payment'
        message:
          type: string
          title: message
      title: CreateRefundResponse
      additionalProperties: false
    payments.v1.GetPaymentRequest:
      type: object
      properties:
        paymentId:
          type: string
          title: payment_id
      title: GetPaymentRequest
      additionalProperties: false
    payments.v1.GetPaymentResponse:
      type: object
      properties:
        payment:
          title: payment
          $ref: '#/components/schemas/payments.v1.Payment'
        relatedInvoice:
          title: related_invoice
          $ref: '#/components/schemas/financial.v1.Invoice'
      title: GetPaymentResponse
      additionalProperties: false
    payments.v1.ListPaymentsRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          description: Payments involving this company
        method:
          title: method
          description: Filter by method
          $ref: '#/components/schemas/payments.v1.PaymentMethod'
        status:
          title: status
          description: Filter by status
          $ref: '#/components/schemas/payments.v1.PaymentStatus'
        startDate:
          title: start_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        endDate:
          title: end_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        pageSize:
          type: integer
          title: page_size
          format: int32
        pageNumber:
          type: integer
          title: page_number
          format: int32
      title: ListPaymentsRequest
      additionalProperties: false
    payments.v1.ListPaymentsResponse:
      type: object
      properties:
        payments:
          type: array
          items:
            $ref: '#/components/schemas/payments.v1.Payment'
          title: payments
        totalCount:
          type: integer
          title: total_count
          format: int32
        totalAmount:
          type:
            - integer
            - string
          title: total_amount
          format: int64
      title: ListPaymentsResponse
      additionalProperties: false
    payments.v1.CreateCashReceiptRequest:
      type: object
      properties:
        cashierUserId:
          type: string
          title: cashier_user_id
        storeId:
          type: string
          title: store_id
          description: Which store/location
        customerId:
          type: string
          title: customer_id
          description: Optional - null for anonymous
        items:
          type: array
          items:
            $ref: '#/components/schemas/payments.v1.SaleLineItem'
          title: items
        amountPaid:
          type:
            - integer
            - string
          title: amount_paid
          format: int64
        paymentMethod:
          title: payment_method
          $ref: '#/components/schemas/payments.v1.PaymentMethod'
        notes:
          type: string
          title: notes
      title: CreateCashReceiptRequest
      additionalProperties: false
    payments.v1.CreateCashReceiptResponse:
      type: object
      properties:
        receiptId:
          type: string
          title: receipt_id
        receipt:
          title: receipt
          $ref: '#/components/schemas/payments.v1.CashReceipt'
        changeGiven:
          type:
            - integer
            - string
          title: change_given
          format: int64
        inventoryTransactionIds:
          type: array
          items:
            type: string
          title: inventory_transaction_ids
          description: Created transactions
        message:
          type: string
          title: message
      title: CreateCashReceiptResponse
      additionalProperties: false
    payments.v1.GetCashierDailySummaryRequest:
      type: object
      properties:
        cashierUserId:
          type: string
          title: cashier_user_id
        date:
          title: date
          description: Defaults to today
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: GetCashierDailySummaryRequest
      additionalProperties: false
    payments.v1.GetCashierDailySummaryResponse:
      type: object
      properties:
        cashierUserId:
          type: string
          title: cashier_user_id
        date:
          title: date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        totalTransactions:
          type: integer
          title: total_transactions
          format: int32
        totalSalesAmount:
          type:
            - integer
            - string
          title: total_sales_amount
          format: int64
        totalCashCollected:
          type:
            - integer
            - string
          title: total_cash_collected
          format: int64
        totalCardPayments:
          type:
            - integer
            - string
          title: total_card_payments
          format: int64
        totalMobileMoney:
          type:
            - integer
            - string
          title: total_mobile_money
          format: int64
        totalVouchersIssued:
          type:
            - integer
            - string
          title: total_vouchers_issued
          format: int64
        totalVouchersRedeemed:
          type:
            - integer
            - string
          title: total_vouchers_redeemed
          format: int64
        receipts:
          type: array
          items:
            $ref: '#/components/schemas/payments.v1.CashReceipt'
          title: receipts
      title: GetCashierDailySummaryResponse
      additionalProperties: false
    payments.v1.PayWithVoucherRequest:
      type: object
      properties:
        cashierUserId:
          type: string
          title: cashier_user_id
        storeId:
          type: string
          title: store_id
        voucherCode:
          type: string
          title: voucher_code
          description: Scanned from barcode
        items:
          type: array
          items:
            $ref: '#/components/schemas/payments.v1.SaleLineItem'
          title: items
        additionalCashPayment:
          type:
            - integer
            - string
          title: additional_cash_payment
          format: int64
          description: If voucher not enough
        additionalPaymentMethod:
          title: additional_payment_method
          $ref: '#/components/schemas/payments.v1.PaymentMethod'
      title: PayWithVoucherRequest
      additionalProperties: false
    payments.v1.PayWithVoucherResponse:
      type: object
      properties:
        receiptId:
          type: string
          title: receipt_id
        receipt:
          title: receipt
          $ref: '#/components/schemas/payments.v1.CashReceipt'
        voucherTransactionId:
          type: string
          title: voucher_transaction_id
        voucherTransaction:
          title: voucher_transaction
          $ref: '#/components/schemas/payments.v1.VoucherTransaction'
        voucherAmountUsed:
          type:
            - integer
            - string
          title: voucher_amount_used
          format: int64
        voucherRemaining:
          type:
            - integer
            - string
          title: voucher_remaining
          format: int64
        voucherFullyUsed:
          type: boolean
          title: voucher_fully_used
        message:
          type: string
          title: message
      title: PayWithVoucherResponse
      additionalProperties: false
    payments.v1.ProcessSaleWithVoucherRequest:
      type: object
      properties:
        cashierUserId:
          type: string
          title: cashier_user_id
        storeId:
          type: string
          title: store_id
        customerId:
          type: string
          title: customer_id
          description: Optional
        items:
          type: array
          items:
            $ref: '#/components/schemas/payments.v1.SaleLineItem'
          title: items
        amountPaid:
          type:
            - integer
            - string
          title: amount_paid
          format: int64
          description: Amount customer gave (more than total)
        paymentMethod:
          title: payment_method
          $ref: '#/components/schemas/payments.v1.PaymentMethod'
        changeShortage:
          type:
            - integer
            - string
          title: change_shortage
          format: int64
          description: How much change we can't give
        notes:
          type: string
          title: notes
      title: ProcessSaleWithVoucherRequest
      additionalProperties: false
    payments.v1.ProcessSaleWithVoucherResponse:
      type: object
      properties:
        invoiceId:
          type: string
          title: invoice_id
        invoice:
          title: invoice
          $ref: '#/components/schemas/financial.v1.Invoice'
        paymentId:
          type: string
          title: payment_id
        payment:
          title: payment
          $ref: '#/components/schemas/payments.v1.Payment'
        voucherId:
          type: string
          title: voucher_id
        voucher:
          title: voucher
          $ref: '#/components/schemas/payments.v1.GiftVoucher'
        voucherCode:
          type: string
          title: voucher_code
          description: Print this on receipt
        inventoryTransactionIds:
          type: array
          items:
            type: string
          title: inventory_transaction_ids
        message:
          type: string
          title: message
      title: ProcessSaleWithVoucherResponse
      additionalProperties: false
    payments.v1.SaleLineItem:
      type: object
      properties:
        productId:
          type: string
          title: product_id
        quantity:
          type: number
          title: quantity
          format: double
        unitPrice:
          type:
            - integer
            - string
          title: unit_price
          format: int64
          description: Can override product price for discounts
      title: SaleLineItem
      additionalProperties: false
    reports.v1.BestSellingProduct:
      type: object
      properties:
        product:
          title: product
          $ref: '#/components/schemas/inventory.v1.StoreProduct'
        unitsSold:
          type: integer
          title: units_sold
          format: int32
        totalRevenue:
          type:
            - integer
            - string
          title: total_revenue
          format: int64
        transactionCount:
          type: integer
          title: transaction_count
          format: int32
        productName:
          type: string
          title: productName
        rank:
          type: integer
          title: rank
          format: int32
      title: BestSellingProduct
      additionalProperties: false
    reports.v1.CategorySalesData:
      type: object
      properties:
        categoryName:
          type: string
          title: category_name
        totalSalesAmount:
          type: number
          title: total_sales_amount
          format: double
        totalUnitsSold:
          type: integer
          title: total_units_sold
          format: int32
        transactionCount:
          type: integer
          title: transaction_count
          format: int32
        percentageOfTotal:
          type: number
          title: percentage_of_total
          format: double
      title: CategorySalesData
      additionalProperties: false
    reports.v1.FinancialComparisonData:
      type: object
      properties:
        previousYearTotalRevenue:
          type:
            - integer
            - string
          title: previous_year_total_revenue
          format: int64
        previousYearNetProfit:
          type:
            - integer
            - string
          title: previous_year_net_profit
          format: int64
        previousYearGrossProfitMargin:
          type: number
          title: previous_year_gross_profit_margin
          format: double
        previousYearTotalPurchases:
          type:
            - integer
            - string
          title: previous_year_total_purchases
          format: int64
      title: FinancialComparisonData
      additionalProperties: false
    reports.v1.GetBestSellingProductsRequest:
      type: object
      properties:
        startDate:
          title: start_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        endDate:
          title: end_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        storeId:
          type: string
          title: store_id
          description: Optional
          nullable: true
        category:
          type: string
          title: category
          description: Optional
          nullable: true
        topN:
          type: integer
          title: top_n
          format: int32
          description: Top 10, 20, etc. Default 20
      title: GetBestSellingProductsRequest
      additionalProperties: false
    reports.v1.GetBestSellingProductsResponse:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/reports.v1.BestSellingProduct'
          title: products
      title: GetBestSellingProductsResponse
      additionalProperties: false
    reports.v1.GetDashboardReportRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          nullable: true
        startDate:
          title: start_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        endDate:
          title: end_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: GetDashboardReportRequest
      additionalProperties: false
    reports.v1.GetDashboardReportResponse:
      type: object
      properties:
        totalSalesAmount:
          type:
            - integer
            - string
          title: total_sales_amount
          format: int64
          description: Sales metrics
        totalTransactions:
          type: integer
          title: total_transactions
          format: int32
        averageTransactionValue:
          type: number
          title: average_transaction_value
          format: double
        totalUnitsSold:
          type: integer
          title: total_units_sold
          format: int32
        totalRevenue:
          type:
            - integer
            - string
          title: total_revenue
          format: int64
          description: Financial metrics
        netProfit:
          type:
            - integer
            - string
          title: net_profit
          format: int64
        grossProfitMargin:
          type: number
          title: gross_profit_margin
          format: double
        totalPurchases:
          type:
            - integer
            - string
          title: total_purchases
          format: int64
        totalProducts:
          type: integer
          title: total_products
          format: int32
          description: Inventory metrics
        totalInventoryValue:
          type:
            - integer
            - string
          title: total_inventory_value
          format: int64
        lowStockCount:
          type: integer
          title: low_stock_count
          format: int32
        salesAndProfitTrend:
          type: array
          items:
            $ref: '#/components/schemas/reports.v1.TrendDataPoint'
          title: sales_and_profit_trend
          description: Trend and comparison data
        categorySalesBreakdown:
          type: array
          items:
            $ref: '#/components/schemas/reports.v1.CategorySalesData'
          title: category_sales_breakdown
        revenueVsExpenses:
          type: array
          items:
            $ref: '#/components/schemas/reports.v1.RevenueExpenseDataPoint'
          title: revenue_vs_expenses
        inventoryMovement:
          type: array
          items:
            $ref: '#/components/schemas/reports.v1.StockMovementDataPoint'
          title: inventory_movement
        salesComparison:
          title: sales_comparison
          description: Previous year comparisons
          $ref: '#/components/schemas/reports.v1.SalesComparisonData'
        financialComparison:
          title: financial_comparison
          $ref: '#/components/schemas/reports.v1.FinancialComparisonData'
        inventoryComparison:
          title: inventory_comparison
          $ref: '#/components/schemas/reports.v1.InventoryComparisonData'
        topPerformingProducts:
          type: array
          items:
            $ref: '#/components/schemas/reports.v1.BestSellingProduct'
          title: top_performing_products
          description: Top performers
        supplierPerformances:
          type: array
          items:
            $ref: '#/components/schemas/reports.v1.SupplierPerformanceSummary'
          title: supplier_performances
        stockAgingItems:
          type: array
          items:
            $ref: '#/components/schemas/reports.v1.StockAgingItem'
          title: stock_aging_items
          description: Stock aging
      title: GetDashboardReportResponse
      additionalProperties: false
    reports.v1.GetFinancialReportRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          nullable: true
        startDate:
          title: start_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        endDate:
          title: end_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: GetFinancialReportRequest
      additionalProperties: false
    reports.v1.GetFinancialReportResponse:
      type: object
      properties:
        totalRevenue:
          type:
            - integer
            - string
          title: total_revenue
          format: int64
          description: Sales
        costOfGoodsSold:
          type:
            - integer
            - string
          title: cost_of_goods_sold
          format: int64
          description: Purchases
        grossProfit:
          type:
            - integer
            - string
          title: gross_profit
          format: int64
        grossProfitMargin:
          type: number
          title: gross_profit_margin
          format: double
        returnsValue:
          type:
            - integer
            - string
          title: returns_value
          format: int64
        adjustmentsValue:
          type:
            - integer
            - string
          title: adjustments_value
          format: int64
        netProfit:
          type:
            - integer
            - string
          title: net_profit
          format: int64
        totalPurchases:
          type:
            - integer
            - string
          title: total_purchases
          format: int64
        outstandingBalance:
          type:
            - integer
            - string
          title: outstanding_balance
          format: int64
        supplierPerformances:
          type: array
          items:
            $ref: '#/components/schemas/reports.v1.SupplierPerformanceSummary'
          title: supplier_performances
        revenueVsExpensesData:
          type: array
          items:
            $ref: '#/components/schemas/reports.v1.RevenueExpenseDataPoint'
          title: revenue_vs_expenses_data
        previousYearComparison:
          title: previous_year_comparison
          $ref: '#/components/schemas/reports.v1.FinancialComparisonData'
      title: GetFinancialReportResponse
      additionalProperties: false
    reports.v1.GetInventoryMovementReportRequest:
      type: object
      properties:
        productId:
          type: string
          title: product_id
          description: Required
        startDate:
          title: start_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        endDate:
          title: end_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        storeId:
          type: string
          title: store_id
          description: Optional
      title: GetInventoryMovementReportRequest
      additionalProperties: false
    reports.v1.GetInventoryMovementReportResponse:
      type: object
      properties:
        product:
          title: product
          $ref: '#/components/schemas/inventory.v1.StoreProduct'
        openingBalance:
          type: number
          title: opening_balance
          format: double
        totalIn:
          type: number
          title: total_in
          format: double
        totalOut:
          type: number
          title: total_out
          format: double
        closingBalance:
          type: number
          title: closing_balance
          format: double
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/audits.v1.InventoryTransaction'
          title: transactions
      title: GetInventoryMovementReportResponse
      additionalProperties: false
    reports.v1.GetInventoryReportRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          nullable: true
        startDate:
          title: start_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        endDate:
          title: end_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        category:
          type: string
          title: category
          nullable: true
      title: GetInventoryReportRequest
      additionalProperties: false
    reports.v1.GetInventoryReportResponse:
      type: object
      properties:
        totalProducts:
          type: integer
          title: total_products
          format: int32
        totalValue:
          type:
            - integer
            - string
          title: total_value
          format: int64
          description: Sum of (quantity * cost_price)
        lowStockCount:
          type: integer
          title: low_stock_count
          format: int32
        agingItems:
          type: array
          items:
            $ref: '#/components/schemas/reports.v1.StockAgingItem'
          title: aging_items
        movementSummary:
          title: movement_summary
          $ref: '#/components/schemas/reports.v1.InventoryMovementSummary'
        bestSellers:
          type: array
          items:
            $ref: '#/components/schemas/reports.v1.BestSellingProduct'
          title: best_sellers
        stockMovementData:
          type: array
          items:
            $ref: '#/components/schemas/reports.v1.StockMovementDataPoint'
          title: stock_movement_data
        previousYearComparison:
          title: previous_year_comparison
          $ref: '#/components/schemas/reports.v1.InventoryComparisonData'
      title: GetInventoryReportResponse
      additionalProperties: false
    reports.v1.GetProfitLossReportRequest:
      type: object
      properties:
        startDate:
          title: start_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        endDate:
          title: end_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        storeId:
          type: string
          title: store_id
          description: Optional
          nullable: true
      title: GetProfitLossReportRequest
      additionalProperties: false
    reports.v1.GetProfitLossReportResponse:
      type: object
      properties:
        totalRevenue:
          type:
            - integer
            - string
          title: total_revenue
          format: int64
          description: Sales
        costOfGoodsSold:
          type:
            - integer
            - string
          title: cost_of_goods_sold
          format: int64
          description: Purchases
        grossProfit:
          type:
            - integer
            - string
          title: gross_profit
          format: int64
          description: Revenue - COGS
        grossProfitMargin:
          type: number
          title: gross_profit_margin
          format: double
          description: Percentage
        returnsValue:
          type:
            - integer
            - string
          title: returns_value
          format: int64
          description: Store returns
        adjustmentsValue:
          type:
            - integer
            - string
          title: adjustments_value
          format: int64
          description: Stock adjustments (damage, theft)
        netProfit:
          type:
            - integer
            - string
          title: net_profit
          format: int64
          description: After returns and adjustments
      title: GetProfitLossReportResponse
      additionalProperties: false
    reports.v1.GetPurchaseReportRequest:
      type: object
      properties:
        startDate:
          title: start_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        endDate:
          title: end_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        storeId:
          type: string
          title: store_id
        supplierId:
          type: string
          title: supplier_id
        category:
          type: string
          title: category
        groupBy:
          title: group_by
          $ref: '#/components/schemas/reports.v1.ReportGroupBy'
      title: GetPurchaseReportRequest
      additionalProperties: false
    reports.v1.GetPurchaseReportResponse:
      type: object
      properties:
        summaries:
          type: array
          items:
            $ref: '#/components/schemas/reports.v1.PurchaseSummary'
          title: summaries
        totalPurchaseAmount:
          type:
            - integer
            - string
          title: total_purchase_amount
          format: int64
        totalPurchaseOrders:
          type: integer
          title: total_purchase_orders
          format: int32
        totalUnitsPurchased:
          type: integer
          title: total_units_purchased
          format: int32
      title: GetPurchaseReportResponse
      additionalProperties: false
    reports.v1.GetSalesReportFullResponse:
      type: object
      properties:
        summaries:
          type: array
          items:
            $ref: '#/components/schemas/reports.v1.SalesSummary'
          title: summaries
        totalSalesAmount:
          type:
            - integer
            - string
          title: total_sales_amount
          format: int64
        totalTransactions:
          type: integer
          title: total_transactions
          format: int32
        totalUnitsSold:
          type: integer
          title: total_units_sold
          format: int32
        averageTransactionValue:
          type:
            - integer
            - string
          title: average_transaction_value
          format: int64
        bestProducts:
          type: array
          items:
            $ref: '#/components/schemas/reports.v1.BestSellingProduct'
          title: best_products
        categorySalesData:
          type: array
          items:
            $ref: '#/components/schemas/reports.v1.CategorySalesData'
          title: category_sales_data
        previousYearComparison:
          title: previous_year_comparison
          $ref: '#/components/schemas/reports.v1.SalesComparisonData'
      title: GetSalesReportFullResponse
      additionalProperties: false
    reports.v1.GetSalesReportRequest:
      type: object
      properties:
        startDate:
          title: start_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        endDate:
          title: end_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        supplierId:
          type: string
          title: supplier_id
          description: Optional
          nullable: true
        storeId:
          type: string
          title: store_id
          description: Optional
          nullable: true
        category:
          type: string
          title: category
          description: Product category filter
        groupBy:
          title: group_by
          description: Daily, weekly, monthly
          $ref: '#/components/schemas/reports.v1.ReportGroupBy'
      title: GetSalesReportRequest
      additionalProperties: false
    reports.v1.GetSalesReportResponse:
      type: object
      properties:
        summaries:
          type: array
          items:
            $ref: '#/components/schemas/reports.v1.SalesSummary'
          title: summaries
        totalSalesAmount:
          type:
            - integer
            - string
          title: total_sales_amount
          format: int64
        totalTransactions:
          type: integer
          title: total_transactions
          format: int32
        totalUnitsSold:
          type: integer
          title: total_units_sold
          format: int32
        averageTransactionValue:
          type:
            - integer
            - string
          title: average_transaction_value
          format: int64
      title: GetSalesReportResponse
      additionalProperties: false
    reports.v1.GetStockAgingReportRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          description: Optional
          nullable: true
        category:
          type: string
          title: category
          description: Optional
          nullable: true
      title: GetStockAgingReportRequest
      additionalProperties: false
    reports.v1.GetStockAgingReportResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/reports.v1.StockAgingItem'
          title: items
        totalStockValue:
          type:
            - integer
            - string
          title: total_stock_value
          format: int64
        slowMovingStockValue:
          type:
            - integer
            - string
          title: slow_moving_stock_value
          format: int64
          description: '> 90 days'
      title: GetStockAgingReportResponse
      additionalProperties: false
    reports.v1.GetStorePurchaseHistoryRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
        startDate:
          title: start_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        endDate:
          title: end_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: GetStorePurchaseHistoryRequest
      additionalProperties: false
    reports.v1.GetStorePurchaseHistoryResponse:
      type: object
      properties:
        store:
          title: store
          $ref: '#/components/schemas/store.v1.Store'
        invoices:
          type: array
          items:
            $ref: '#/components/schemas/financial.v1.Invoice'
          title: invoices
        totalPurchases:
          type:
            - integer
            - string
          title: total_purchases
          format: int64
        totalPaid:
          type:
            - integer
            - string
          title: total_paid
          format: int64
        outstandingBalance:
          type:
            - integer
            - string
          title: outstanding_balance
          format: int64
        transactionCount:
          type: integer
          title: transaction_count
          format: int32
        lastPurchaseDate:
          title: last_purchase_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: GetStorePurchaseHistoryResponse
      additionalProperties: false
    reports.v1.GetSupplierPerformanceReportRequest:
      type: object
      properties:
        supplierId:
          type: string
          title: supplier_id
        startDate:
          title: start_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        endDate:
          title: end_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: GetSupplierPerformanceReportRequest
      additionalProperties: false
    reports.v1.GetSupplierPerformanceReportResponse:
      type: object
      properties:
        supplier:
          title: supplier
          $ref: '#/components/schemas/store.v1.Supplier'
        totalPurchaseOrders:
          type: integer
          title: total_purchase_orders
          format: int32
        totalPurchaseValue:
          type:
            - integer
            - string
          title: total_purchase_value
          format: int64
        onTimeDeliveries:
          type: integer
          title: on_time_deliveries
          format: int32
        lateDeliveries:
          type: integer
          title: late_deliveries
          format: int32
        onTimePercentage:
          type: number
          title: on_time_percentage
          format: double
        qualityIssues:
          type: integer
          title: quality_issues
          format: int32
          description: Count of returns/rejections
        averageDeliveryTimeDays:
          type: number
          title: average_delivery_time_days
          format: double
      title: GetSupplierPerformanceReportResponse
      additionalProperties: false
    reports.v1.InventoryComparisonData:
      type: object
      properties:
        previousYearTotalProducts:
          type: integer
          title: previous_year_total_products
          format: int32
        previousYearTotalValue:
          type:
            - integer
            - string
          title: previous_year_total_value
          format: int64
        previousYearLowStockCount:
          type: integer
          title: previous_year_low_stock_count
          format: int32
        previousYearMovementTotalIn:
          type: number
          title: previous_year_movement_total_in
          format: double
        previousYearMovementTotalOut:
          type: number
          title: previous_year_movement_total_out
          format: double
      title: InventoryComparisonData
      additionalProperties: false
    reports.v1.InventoryMovementSummary:
      type: object
      properties:
        totalIn:
          type: number
          title: total_in
          format: double
        totalOut:
          type: number
          title: total_out
          format: double
        netChange:
          type: number
          title: net_change
          format: double
      title: InventoryMovementSummary
      additionalProperties: false
    reports.v1.PurchaseSummary:
      type: object
      properties:
        periodStart:
          title: period_start
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        periodEnd:
          title: period_end
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        purchaseAmount:
          type:
            - integer
            - string
          title: purchase_amount
          format: int64
        purchaseOrderCount:
          type: integer
          title: purchase_order_count
          format: int32
        unitsPurchased:
          type: integer
          title: units_purchased
          format: int32
      title: PurchaseSummary
      additionalProperties: false
    reports.v1.ReportGroupBy:
      type: string
      title: ReportGroupBy
      enum:
        - REPORT_GROUP_BY_UNSPECIFIED
        - REPORT_GROUP_BY_DAILY
        - REPORT_GROUP_BY_WEEKLY
        - REPORT_GROUP_BY_MONTHLY
        - REPORT_GROUP_BY_QUARTERLY
        - REPORT_GROUP_BY_YEARLY
    reports.v1.RevenueExpenseDataPoint:
      type: object
      properties:
        periodStart:
          title: period_start
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        periodEnd:
          title: period_end
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        revenue:
          type: number
          title: revenue
          format: double
        expenses:
          type: number
          title: expenses
          format: double
        netAmount:
          type: number
          title: net_amount
          format: double
      title: RevenueExpenseDataPoint
      additionalProperties: false
    reports.v1.SalesComparisonData:
      type: object
      properties:
        previousYearTotalSales:
          type:
            - integer
            - string
          title: previous_year_total_sales
          format: int64
        previousYearTotalTransactions:
          type: integer
          title: previous_year_total_transactions
          format: int32
        previousYearAverageTransactionValue:
          type: number
          title: previous_year_average_transaction_value
          format: double
      title: SalesComparisonData
      additionalProperties: false
    reports.v1.SalesSummary:
      type: object
      properties:
        periodStart:
          title: period_start
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        periodEnd:
          title: period_end
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        salesAmount:
          type:
            - integer
            - string
          title: sales_amount
          format: int64
        transactionCount:
          type: integer
          title: transaction_count
          format: int32
        unitsSold:
          type: integer
          title: units_sold
          format: int32
      title: SalesSummary
      additionalProperties: false
    reports.v1.StockAgingItem:
      type: object
      properties:
        product:
          title: product
          $ref: '#/components/schemas/inventory.v1.StoreProduct'
        quantity:
          type: number
          title: quantity
          format: double
        stockValue:
          type:
            - integer
            - string
          title: stock_value
          format: int64
        lastMovementDate:
          title: last_movement_date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        daysSinceLastMovement:
          type: integer
          title: days_since_last_movement
          format: int32
        movementCategory:
          title: movement_category
          $ref: '#/components/schemas/reports.v1.StockMovementCategory'
      title: StockAgingItem
      additionalProperties: false
    reports.v1.StockMovementCategory:
      type: string
      title: StockMovementCategory
      enum:
        - STOCK_MOVEMENT_CATEGORY_UNSPECIFIED
        - STOCK_MOVEMENT_CATEGORY_FAST
        - STOCK_MOVEMENT_CATEGORY_MEDIUM
        - STOCK_MOVEMENT_CATEGORY_SLOW
        - STOCK_MOVEMENT_CATEGORY_VERY_SLOW
    reports.v1.StockMovementDataPoint:
      type: object
      properties:
        date:
          title: date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        stockLevel:
          type: number
          title: stock_level
          format: double
        movementQuantity:
          type: number
          title: movement_quantity
          format: double
        movementType:
          type: string
          title: movement_type
          description: '"IN", "OUT", "ADJUSTMENT"'
      title: StockMovementDataPoint
      additionalProperties: false
    reports.v1.SupplierPerformanceSummary:
      type: object
      properties:
        supplierId:
          type: string
          title: supplier_id
        supplierName:
          type: string
          title: supplier_name
        totalPurchaseValue:
          type:
            - integer
            - string
          title: total_purchase_value
          format: int64
        onTimePercentage:
          type: number
          title: on_time_percentage
          format: double
        totalOrders:
          type: integer
          title: total_orders
          format: int32
      title: SupplierPerformanceSummary
      additionalProperties: false
    reports.v1.TrendDataPoint:
      type: object
      properties:
        date:
          title: date
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        salesValue:
          type: number
          title: sales_value
          format: double
        profitValue:
          type: number
          title: profit_value
          format: double
      title: TrendDataPoint
      additionalProperties: false
    store.v1.Address:
      type: object
      properties:
        street:
          type: string
          title: street
        city:
          type: string
          title: city
        region:
          type: string
          title: region
        postalCode:
          type: string
          title: postal_code
        country:
          type: string
          title: country
      title: Address
      additionalProperties: false
    store.v1.Store:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          description: The unique identifier of the store.
          nullable: true
        name:
          type: string
          title: name
          description: The name of the store.
        description:
          type: string
          title: description
          description: The description of the store.
          nullable: true
        logoLinkId:
          type: string
          title: logo_link_id
          description: The id of the media of the logo of the store.
          nullable: true
        externalLinksIds:
          type: string
          title: external_links_ids
          description: The list of external links of the store it can be an address link, a phone number, an email, a website etc.
          nullable: true
        businessId:
          type: string
          title: business_id
          description: The id of the business of the store.
        createdAt:
          title: created_at
          description: The date and time the store was created.
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        updatedAt:
          title: updated_at
          description: The date and time the store was last updated.
          nullable: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        phone:
          type: string
          title: phone
          description: The business contact information.
          nullable: true
        address:
          title: address
          description: The business address.
          nullable: true
          $ref: '#/components/schemas/store.v1.Address'
        email:
          type: string
          title: email
          description: The business email.
          nullable: true
        costingMethod:
          title: costing_method
          description: The costing method of the store.
          nullable: true
          $ref: '#/components/schemas/store.v1.StoreCostingMethod'
        tax:
          type: number
          title: tax
          format: double
          description: The tax of the store.
          nullable: true
        postalBox:
          type: string
          title: postal_box
          description: The postal box of the store.
          nullable: true
        nui:
          type: string
          title: nui
          description: The nui of the store.
          nullable: true
        taxPayerNumber:
          type: string
          title: tax_payer_number
          description: The tax payer number of the store.
          nullable: true
      title: Store
      additionalProperties: false
      description: |-
        Stores are used to store products.
         Note: A store is not always a shop.
    store.v1.StoreCostingMethod:
      type: string
      title: StoreCostingMethod
      enum:
        - STORE_COSTING_METHOD_UNSPECIFIED
        - STORE_COSTING_METHOD_FIFO
        - STORE_COSTING_METHOD_AVERAGE
    store.v1.Supplier:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          description: The reference id to the supplier identifier.
          nullable: true
        name:
          type: string
          title: name
          description: The name of the supplier.
        description:
          type: string
          title: description
          description: The description of the supplier.
          nullable: true
        logoLinkId:
          type: string
          title: logo_link_id
          description: The id of the media of the logo of the supplier.
          nullable: true
        externalLinksIds:
          type: array
          items:
            type: string
          title: external_links_ids
          description: The links of the supplier.
        contactPhone:
          type: string
          title: contact_phone
          description: The contact phone number.
          nullable: true
        contactEmail:
          type: string
          title: contact_email
          description: The contact email.
          nullable: true
        contactAddress:
          type: string
          title: contact_address
          description: The contact address.
          nullable: true
        status:
          title: status
          description: Whether the supplier is active.
          $ref: '#/components/schemas/store.v1.SupplierStatus'
        storeIds:
          type: array
          items:
            type: string
          title: store_ids
          description: The ids of the store of the supplier.
      title: Supplier
      additionalProperties: false
    store.v1.SupplierStatus:
      type: string
      title: SupplierStatus
      enum:
        - SUPPLIER_STATUS_UNSPECIFIED
        - SUPPLIER_STATUS_ACTIVE
        - SUPPLIER_STATUS_INACTIVE
    store.v1.AddUserToStoreRequest:
      type: object
      properties:
        email:
          type: string
          title: email
          description: The email of the user.
        permissions:
          title: permissions
          description: The permissions that the user has.
          $ref: '#/components/schemas/identity.v1.StorePermissions'
        storeId:
          type: string
          title: store_id
          description: The store id.
      title: AddUserToStoreRequest
      additionalProperties: false
    store.v1.AddUserToStoreResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the store was successfully deleted.
        storeMember:
          title: store_member
          description: The store member to return
          $ref: '#/components/schemas/store.v1.StoreMember'
      title: AddUserToStoreResponse
      additionalProperties: false
    store.v1.CreateStoreRequest:
      type: object
      properties:
        store:
          title: store
          description: The store information to create.
          $ref: '#/components/schemas/store.v1.Store'
        logoRawImage:
          type: string
          title: logo_raw_image
          format: byte
          description: The raw image of the logo of the store.
          nullable: true
      title: CreateStoreRequest
      additionalProperties: false
    store.v1.CreateStoreResponse:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          minLength: 3
          description: The unique identifier of the created store.
      title: CreateStoreResponse
      required:
        - storeId
      additionalProperties: false
    store.v1.DeleteStoreRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          minLength: 3
          description: The unique identifier of the store to delete.
      title: DeleteStoreRequest
      required:
        - storeId
      additionalProperties: false
    store.v1.DeleteStoreResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the store was successfully deleted.
      title: DeleteStoreResponse
      additionalProperties: false
    store.v1.GetBusinessStoresRequest:
      type: object
      properties:
        businessId:
          type: string
          title: business_id
          minLength: 3
          description: The reference id to the supplier identifier.
      title: GetBusinessStoresRequest
      required:
        - businessId
      additionalProperties: false
    store.v1.GetBusinessStoresResponse:
      type: object
      properties:
        stores:
          type: array
          items:
            $ref: '#/components/schemas/store.v1.Store'
          title: stores
          description: |-
            The list of stores of the business.
             Note: Only the ids and names of the stores are returned.
      title: GetBusinessStoresResponse
      additionalProperties: false
    store.v1.GetStoreMemberRequest:
      type: object
      properties:
        userId:
          type: string
          title: user_id
          minLength: 3
          description: The unique identifier of the user.
        storeId:
          type: string
          title: store_id
          minLength: 3
          description: The unique identifier of the store.
      title: GetStoreMemberRequest
      required:
        - userId
        - storeId
      additionalProperties: false
    store.v1.GetStoreMemberResponse:
      type: object
      properties:
        storeMember:
          title: store_member
          description: The store member.
          $ref: '#/components/schemas/store.v1.StoreMember'
      title: GetStoreMemberResponse
      additionalProperties: false
    store.v1.GetStoreMembersRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          minLength: 3
          description: The unique identifier of the store.
      title: GetStoreMembersRequest
      required:
        - storeId
      additionalProperties: false
    store.v1.GetStoreMembersResponse:
      type: object
      properties:
        storeMembers:
          type: array
          items:
            $ref: '#/components/schemas/store.v1.StoreMember'
          title: store_members
          description: The store members.
      title: GetStoreMembersResponse
      additionalProperties: false
    store.v1.GetStoreRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          minLength: 3
          description: The unique identifier of the store to retrieve.
      title: GetStoreRequest
      required:
        - storeId
      additionalProperties: false
    store.v1.GetStoreResponse:
      type: object
      properties:
        store:
          title: store
          description: The retrieved store data.
          $ref: '#/components/schemas/store.v1.Store'
      title: GetStoreResponse
      additionalProperties: false
    store.v1.RemoveUserFromStoreRequest:
      type: object
      properties:
        userId:
          type: string
          title: user_id
          minLength: 3
          description: The unique identifier of the user.
        storeId:
          type: string
          title: store_id
          minLength: 3
      title: RemoveUserFromStoreRequest
      required:
        - userId
        - storeId
      additionalProperties: false
    store.v1.RemoveUserFromStoreResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the user was successfully removed from the store.
      title: RemoveUserFromStoreResponse
      additionalProperties: false
    store.v1.SetStoreMemberStatusRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          minLength: 3
          description: The unique identifier of the store.
        userId:
          type: string
          title: user_id
          minLength: 3
          description: The unique identifier of the user.
        status:
          title: status
          description: The status of the user.
          $ref: '#/components/schemas/store.v1.StoreMemberStatus'
      title: SetStoreMemberStatusRequest
      required:
        - storeId
        - userId
      additionalProperties: false
    store.v1.SetStoreMemberStatusResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the member was successfully updated.
      title: SetStoreMemberStatusResponse
      additionalProperties: false
    store.v1.StoreMember:
      type: object
      properties:
        user:
          title: user
          description: The user.
          $ref: '#/components/schemas/identity.v1.User'
        storeId:
          type: string
          title: store_id
          description: The unique identifier of the store.
        permissions:
          title: permissions
          description: The permissions that the user has.
          $ref: '#/components/schemas/identity.v1.StorePermissions'
        memberSince:
          title: member_since
          description: The date since when the user became a member.
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        status:
          title: status
          description: The status of the user.
          $ref: '#/components/schemas/store.v1.StoreMemberStatus'
      title: StoreMember
      additionalProperties: false
    store.v1.StoreMemberStatus:
      type: string
      title: StoreMemberStatus
      enum:
        - STORE_MEMBER_STATUS_UNSPECIFIED
        - STORE_MEMBER_STATUS_ACTIVE
        - STORE_MEMBER_STATUS_PENDING
        - STORE_MEMBER_STATUS_INACTIVE
        - STORE_MEMBER_STATUS_BANNED
    store.v1.StreamStoreMembersRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          minLength: 3
          description: The unique identifier of the store.
      title: StreamStoreMembersRequest
      required:
        - storeId
      additionalProperties: false
    store.v1.StreamStoreMembersResponse:
      type: object
      properties:
        storeMembers:
          type: array
          items:
            $ref: '#/components/schemas/store.v1.StoreMember'
          title: store_members
          description: The store members.
      title: StreamStoreMembersResponse
      additionalProperties: false
    store.v1.UpdateStoreMemberRequest:
      type: object
      properties:
        userId:
          type: string
          title: user_id
          minLength: 3
          description: The unique identifier of the user.
        storeId:
          type: string
          title: store_id
          minLength: 3
          description: The unique identifier of the store.
        permissions:
          title: permissions
          description: The new permissions to add (optional).
          $ref: '#/components/schemas/identity.v1.StorePermissions'
      title: UpdateStoreMemberRequest
      required:
        - userId
        - storeId
      additionalProperties: false
    store.v1.UpdateStoreMemberResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the member was successfully updated.
        storeMember:
          title: store_member
          description: The updated store member.
          $ref: '#/components/schemas/store.v1.StoreMember'
      title: UpdateStoreMemberResponse
      additionalProperties: false
    store.v1.UpdateStoreRequest:
      type: object
      properties:
        store:
          title: store
          description: |-
            The store information to update.
             Note:Only the fields that are set will be updated.
          $ref: '#/components/schemas/store.v1.Store'
        logoRawImage:
          type: string
          title: logo_raw_image
          format: byte
          description: The raw image of the logo of the store.
          nullable: true
      title: UpdateStoreRequest
      additionalProperties: false
    store.v1.UpdateStoreResponse:
      type: object
      properties:
        store:
          title: store
          description: The updated store data.
          $ref: '#/components/schemas/store.v1.Store'
      title: UpdateStoreResponse
      additionalProperties: false
    store.v1.CreateSupplierRequest:
      type: object
      properties:
        supplier:
          title: supplier
          description: The supplier information to create.
          $ref: '#/components/schemas/store.v1.Supplier'
        logoRawImage:
          type: string
          title: logo_raw_image
          format: byte
          description: The raw image of the logo of the supplier.
          nullable: true
        externalLinks:
          type: array
          items:
            $ref: '#/components/schemas/link.v1.ResourceLink'
          title: external_links
          description: The links of the supplier.
      title: CreateSupplierRequest
      additionalProperties: false
    store.v1.CreateSupplierResponse:
      type: object
      properties:
        supplierId:
          type: string
          title: supplier_id
          minLength: 3
          description: The reference id to the supplier identifier.
      title: CreateSupplierResponse
      required:
        - supplierId
      additionalProperties: false
    store.v1.DeleteSupplierRequest:
      type: object
      properties:
        supplierId:
          type: string
          title: supplier_id
          minLength: 3
          description: The reference id to the supplier identifier.
      title: DeleteSupplierRequest
      required:
        - supplierId
      additionalProperties: false
    store.v1.DeleteSupplierResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the supplier was successfully deleted.
      title: DeleteSupplierResponse
      additionalProperties: false
    store.v1.GetStoreSuppliersRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          minLength: 3
          description: The reference id to the store identifier.
      title: GetStoreSuppliersRequest
      required:
        - storeId
      additionalProperties: false
    store.v1.GetStoreSuppliersResponse:
      type: object
      properties:
        suppliers:
          type: array
          items:
            $ref: '#/components/schemas/store.v1.Supplier'
          title: suppliers
          description: |-
            The list of suppliers of the store.
             Note: Only the ids and names of the suppliers are returned.
      title: GetStoreSuppliersResponse
      additionalProperties: false
    store.v1.GetSupplierRequest:
      type: object
      properties:
        supplierId:
          type: string
          title: supplier_id
          minLength: 3
          description: The reference id to the supplier identifier.
      title: GetSupplierRequest
      required:
        - supplierId
      additionalProperties: false
    store.v1.GetSupplierResponse:
      type: object
      properties:
        supplier:
          title: supplier
          description: The retrieved supplier data.
          $ref: '#/components/schemas/store.v1.Supplier'
      title: GetSupplierResponse
      additionalProperties: false
    store.v1.Link:
      type: object
      properties:
        label:
          type: string
          title: label
          description: The label of the link.
        url:
          type: string
          title: url
          description: |-
            The url of the link.
             Todo: We must automatically retrieve the icon of the link.
      title: Link
      additionalProperties: false
    store.v1.StreamStoreSuppliersRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          minLength: 3
          description: The reference id to the store identifier.
      title: StreamStoreSuppliersRequest
      required:
        - storeId
      additionalProperties: false
    store.v1.StreamStoreSuppliersResponse:
      type: object
      properties:
        suppliers:
          type: array
          items:
            $ref: '#/components/schemas/store.v1.Supplier'
          title: suppliers
          description: |-
            The list of suppliers of the store.
             Note: Only the ids and names of the suppliers are returned.
      title: StreamStoreSuppliersResponse
      additionalProperties: false
    store.v1.UpdateSupplierRequest:
      type: object
      properties:
        supplier:
          title: supplier
          description: |-
            The supplier information to update.
             Note:Only the fields that are set will be updated.
          $ref: '#/components/schemas/store.v1.Supplier'
        logoRawImage:
          type: string
          title: logo_raw_image
          format: byte
          description: The raw image of the logo of the supplier.
          nullable: true
        externalLinks:
          type: array
          items:
            $ref: '#/components/schemas/link.v1.ResourceLink'
          title: external_links
          description: The links of the supplier.
      title: UpdateSupplierRequest
      additionalProperties: false
    store.v1.UpdateSupplierResponse:
      type: object
      properties:
        supplier:
          title: supplier
          description: The updated supplier data.
          $ref: '#/components/schemas/store.v1.Supplier'
      title: UpdateSupplierResponse
      additionalProperties: false
    sync.v1.GetSyncOperationsStatusRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          description: Store ID
          nullable: true
        businessId:
          type: string
          title: business_id
          description: Business ID
          nullable: true
        userId:
          type: string
          title: user_id
          description: User ID
          nullable: true
        batchId:
          type: string
          title: batch_id
          description: Batch ID to check status for
          nullable: true
        operationIds:
          type: array
          items:
            type: string
          title: operation_ids
          description: List of operation IDs to check
        statusFilter:
          type: array
          items:
            $ref: '#/components/schemas/sync.v1.SyncOperationStatus'
          title: status_filter
          description: Filter by status
        entityTypeFilter:
          type: array
          items:
            $ref: '#/components/schemas/sync.v1.SyncEntityType'
          title: entity_type_filter
          description: Filter by entity type
        limit:
          type: integer
          title: limit
          format: int32
          description: Maximum number of results
          nullable: true
        offset:
          type: integer
          title: offset
          format: int32
          description: Offset for pagination
          nullable: true
      title: GetSyncOperationsStatusRequest
      additionalProperties: false
      description: Request to get sync operations status
    sync.v1.GetSyncOperationsStatusResponse:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/sync.v1.SyncOperation'
          title: operations
          description: List of operations with their current status
        totalCount:
          type: integer
          title: total_count
          format: int32
          description: Total number of operations matching the filter
        summary:
          title: summary
          description: Summary statistics
          $ref: '#/components/schemas/sync.v1.SyncOperationsSummary'
      title: GetSyncOperationsStatusResponse
      additionalProperties: false
      description: Response with sync operations status
    sync.v1.RetrySyncOperationsRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          description: Store ID
          nullable: true
        businessId:
          type: string
          title: business_id
          description: Business ID
          nullable: true
        userId:
          type: string
          title: user_id
          description: User ID
          nullable: true
        operationIds:
          type: array
          items:
            type: string
          title: operation_ids
          description: Specific operation IDs to retry
        batchId:
          type: string
          title: batch_id
          description: Batch ID to retry all operations in batch
          nullable: true
        retryAllFailed:
          type: boolean
          title: retry_all_failed
          description: Retry all failed operations (if no specific IDs provided)
          nullable: true
      title: RetrySyncOperationsRequest
      additionalProperties: false
      description: Request to retry failed sync operations
    sync.v1.RetrySyncOperationsResponse:
      type: object
      properties:
        operationsQueued:
          type: integer
          title: operations_queued
          format: int32
          description: Number of operations queued for retry
        queuedOperationIds:
          type: array
          items:
            type: string
          title: queued_operation_ids
          description: List of operation IDs that were queued for retry
        failedToQueueIds:
          type: array
          items:
            type: string
          title: failed_to_queue_ids
          description: List of operation IDs that could not be retried
      title: RetrySyncOperationsResponse
      additionalProperties: false
      description: Response to retry sync operations
    sync.v1.StreamSyncOperationsRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          description: Store ID
          nullable: true
        businessId:
          type: string
          title: business_id
          description: Business ID
          nullable: true
        userId:
          type: string
          title: user_id
          description: User ID
          nullable: true
        entityTypeFilter:
          type: array
          items:
            $ref: '#/components/schemas/sync.v1.SyncEntityType'
          title: entity_type_filter
          description: Filter by entity types
        operationTypeFilter:
          type: array
          items:
            $ref: '#/components/schemas/sync.v1.SyncOperationType'
          title: operation_type_filter
          description: Filter by operation types
      title: StreamSyncOperationsRequest
      additionalProperties: false
      description: Request to stream sync operations in real-time
    sync.v1.StreamSyncOperationsResponse:
      type: object
      properties:
        operation:
          title: operation
          description: The sync operation that was updated
          $ref: '#/components/schemas/sync.v1.SyncOperation'
        updateType:
          type: string
          title: update_type
          description: Type of update (created, updated, deleted)
        updateTimestamp:
          title: update_timestamp
          description: Timestamp of the update
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: StreamSyncOperationsResponse
      additionalProperties: false
      description: Response for streaming sync operations
    sync.v1.SubmitSyncOperationsRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          description: Store ID
          nullable: true
        businessId:
          type: string
          title: business_id
          description: Business ID
          nullable: true
        userId:
          type: string
          title: user_id
          description: User ID
          nullable: true
        operations:
          type: array
          items:
            $ref: '#/components/schemas/sync.v1.SyncOperation'
          title: operations
          minItems: 1
          description: List of operations to submit
        deviceId:
          type: string
          title: device_id
          description: Client device identifier
          nullable: true
        appVersion:
          type: string
          title: app_version
          description: Client application version
          nullable: true
      title: SubmitSyncOperationsRequest
      additionalProperties: false
      description: Request to submit sync operations
    sync.v1.SubmitSyncOperationsResponse:
      type: object
      properties:
        batchId:
          type: string
          title: batch_id
          description: Batch ID for submitted operations
        operationResults:
          type: array
          items:
            $ref: '#/components/schemas/sync.v1.SyncOperationResult'
          title: operation_results
          description: List of operation results
        batchStatus:
          title: batch_status
          description: Overall batch status
          $ref: '#/components/schemas/sync.v1.SyncOperationStatus'
        processedAt:
          title: processed_at
          description: Timestamp when batch was processed
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: SubmitSyncOperationsResponse
      additionalProperties: false
      description: Response to submit sync operations
    sync.v1.SyncEntityType:
      type: string
      title: SyncEntityType
      enum:
        - SYNC_ENTITY_TYPE_UNSPECIFIED
        - SYNC_ENTITY_TYPE_ORDER
      description: Enum for sync entity types
    sync.v1.SyncOperation:
      type: object
      allOf:
        - properties:
            refId:
              type: string
              title: ref_id
              minLength: 1
              description: Unique identifier for the operation
            operationType:
              title: operation_type
              description: Type of operation (create, update, delete)
              $ref: '#/components/schemas/sync.v1.SyncOperationType'
            entityType:
              title: entity_type
              description: Type of entity being synchronized
              $ref: '#/components/schemas/sync.v1.SyncEntityType'
            entityId:
              type: string
              title: entity_id
              minLength: 1
              description: Unique identifier of the entity
            storeId:
              type: string
              title: store_id
              description: Store ID (if applicable)
              nullable: true
            businessId:
              type: string
              title: business_id
              description: Business ID (if applicable)
              nullable: true
            userId:
              type: string
              title: user_id
              description: User ID who performed the operation
              nullable: true
            createdAt:
              title: created_at
              description: Timestamp when operation was created
              $ref: '#/components/schemas/google.protobuf.Timestamp'
            updatedAt:
              title: updated_at
              description: Timestamp when operation was last updated
              $ref: '#/components/schemas/google.protobuf.Timestamp'
            status:
              title: status
              description: Current status of the operation
              $ref: '#/components/schemas/sync.v1.SyncOperationStatus'
            retryCount:
              type: integer
              title: retry_count
              format: int32
              description: Number of retry attempts
            maxRetries:
              type: integer
              title: max_retries
              format: int32
              description: Maximum number of retries allowed
            nextRetryAt:
              title: next_retry_at
              description: Next retry timestamp (if applicable)
              nullable: true
              $ref: '#/components/schemas/google.protobuf.Timestamp'
            errorMessage:
              type: string
              title: error_message
              description: Error message (if operation failed)
              nullable: true
            metadata:
              type: object
              title: metadata
              additionalProperties:
                type: string
                title: value
              description: Additional metadata
        - oneOf:
            - properties:
                categoryData:
                  title: category_data
                  description: Product category data
                  $ref: '#/components/schemas/inventory.v1.Category'
              title: category_data
              required:
                - categoryData
            - properties:
                globalProductData:
                  title: global_product_data
                  description: Global product data
                  $ref: '#/components/schemas/inventory.v1.GlobalProduct'
              title: global_product_data
              required:
                - globalProductData
            - properties:
                jsonData:
                  type: string
                  title: json_data
                  description: Generic JSON data for other entities
              title: json_data
              required:
                - jsonData
            - properties:
                orderData:
                  title: order_data
                  description: Order data
                  $ref: '#/components/schemas/order.v1.SalesOrder'
              title: order_data
              required:
                - orderData
            - properties:
                storeProductData:
                  title: store_product_data
                  description: Store product data
                  $ref: '#/components/schemas/inventory.v1.StoreProduct'
              title: store_product_data
              required:
                - storeProductData
      title: SyncOperation
      additionalProperties: false
      description: A single sync operation
    sync.v1.SyncOperation.MetadataEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          type: string
          title: value
      title: MetadataEntry
      additionalProperties: false
    sync.v1.SyncOperationBatch:
      type: object
      properties:
        batchId:
          type: string
          title: batch_id
          minLength: 1
          description: Unique identifier for the batch
        operations:
          type: array
          items:
            $ref: '#/components/schemas/sync.v1.SyncOperation'
          title: operations
          description: List of operations in this batch
        storeId:
          type: string
          title: store_id
          description: Store ID for all operations in this batch
          nullable: true
        businessId:
          type: string
          title: business_id
          description: Business ID for all operations in this batch
          nullable: true
        userId:
          type: string
          title: user_id
          description: User ID who created this batch
          nullable: true
        createdAt:
          title: created_at
          description: Timestamp when batch was created
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        totalOperations:
          type: integer
          title: total_operations
          format: int32
          description: Total number of operations in batch
        successfulOperations:
          type: integer
          title: successful_operations
          format: int32
          description: Number of successful operations
        failedOperations:
          type: integer
          title: failed_operations
          format: int32
          description: Number of failed operations
        metadata:
          type: object
          title: metadata
          additionalProperties:
            type: string
            title: value
          description: Batch metadata
      title: SyncOperationBatch
      additionalProperties: false
      description: Batch of sync operations
    sync.v1.SyncOperationBatch.MetadataEntry:
      type: object
      properties:
        key:
          type: string
          title: key
        value:
          type: string
          title: value
      title: MetadataEntry
      additionalProperties: false
    sync.v1.SyncOperationResult:
      type: object
      properties:
        operationId:
          type: string
          title: operation_id
          description: Operation ID
        status:
          title: status
          description: Result status
          $ref: '#/components/schemas/sync.v1.SyncOperationStatus'
        errorMessage:
          type: string
          title: error_message
          description: Error message (if failed)
          nullable: true
        serverEntityId:
          type: string
          title: server_entity_id
          description: Server-side entity ID (if different from client)
          nullable: true
        processedAt:
          title: processed_at
          description: Timestamp when operation was processed
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: SyncOperationResult
      additionalProperties: false
      description: Result of a single sync operation
    sync.v1.SyncOperationStatus:
      type: string
      title: SyncOperationStatus
      enum:
        - SYNC_OPERATION_STATUS_UNSPECIFIED
        - SYNC_OPERATION_STATUS_PENDING
        - SYNC_OPERATION_STATUS_IN_PROGRESS
        - SYNC_OPERATION_STATUS_SUCCESS
        - SYNC_OPERATION_STATUS_FAILED
        - SYNC_OPERATION_STATUS_RETRYING
        - SYNC_OPERATION_STATUS_ABANDONED
      description: Enum for sync operation status
    sync.v1.SyncOperationType:
      type: string
      title: SyncOperationType
      enum:
        - SYNC_OPERATION_TYPE_UNSPECIFIED
        - SYNC_OPERATION_TYPE_CREATE
        - SYNC_OPERATION_TYPE_UPDATE
        - SYNC_OPERATION_TYPE_DELETE
      description: Enum for sync operation types
    sync.v1.SyncOperationsSummary:
      type: object
      properties:
        totalOperations:
          type: integer
          title: total_operations
          format: int32
          description: Total operations
        pendingOperations:
          type: integer
          title: pending_operations
          format: int32
          description: Pending operations
        inProgressOperations:
          type: integer
          title: in_progress_operations
          format: int32
          description: In progress operations
        successfulOperations:
          type: integer
          title: successful_operations
          format: int32
          description: Successful operations
        failedOperations:
          type: integer
          title: failed_operations
          format: int32
          description: Failed operations
        retryingOperations:
          type: integer
          title: retrying_operations
          format: int32
          description: Retrying operations
        abandonedOperations:
          type: integer
          title: abandoned_operations
          format: int32
          description: Abandoned operations
      title: SyncOperationsSummary
      additionalProperties: false
      description: Summary of sync operations
    transaction.v1.AddTransactionRequest:
      type: object
      properties:
        transaction:
          title: transaction
          description: The transaction to add.
          $ref: '#/components/schemas/transaction.v1.Transaction'
      title: AddTransactionRequest
      additionalProperties: false
    transaction.v1.AddTransactionResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the transaction was successfully added.
      title: AddTransactionResponse
      additionalProperties: false
    transaction.v1.DeleteTransactionRequest:
      type: object
      properties:
        transactionId:
          type: string
          title: transaction_id
          description: The unique identifier of the transaction.
      title: DeleteTransactionRequest
      additionalProperties: false
    transaction.v1.DeleteTransactionResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the transaction was successfully deleted.
      title: DeleteTransactionResponse
      additionalProperties: false
    transaction.v1.FindTransactionsRequest:
      type: object
      properties:
        storeId:
          type: string
          title: store_id
          minLength: 3
        orderId:
          type: string
          title: order_id
          nullable: true
        startDate:
          title: start_date
          nullable: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        endDate:
          title: end_date
          nullable: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        type:
          type: array
          items:
            $ref: '#/components/schemas/transaction.v1.TransactionType'
          title: type
        status:
          type: array
          items:
            $ref: '#/components/schemas/transaction.v1.TransactionStatus'
          title: status
      title: FindTransactionsRequest
      required:
        - storeId
      additionalProperties: false
    transaction.v1.FindTransactionsResponse:
      type: object
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/transaction.v1.Transaction'
          title: transactions
          description: The list of transactions found.
      title: FindTransactionsResponse
      additionalProperties: false
    transaction.v1.GetTransactionRequest:
      type: object
      properties:
        transactionId:
          type: string
          title: transaction_id
          description: The unique identifier of the transaction.
      title: GetTransactionRequest
      additionalProperties: false
    transaction.v1.GetTransactionResponse:
      type: object
      properties:
        transaction:
          title: transaction
          description: The retrieved transaction.
          $ref: '#/components/schemas/transaction.v1.Transaction'
      title: GetTransactionResponse
      additionalProperties: false
    transaction.v1.Transaction:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          description: The unique identifier of the transaction.
          nullable: true
        type:
          title: type
          description: The type of the transaction (sale, purchase, refund, etc.).
          $ref: '#/components/schemas/transaction.v1.TransactionType'
        status:
          title: status
          description: The status of the transaction (pending, completed, failed, cancelled).
          $ref: '#/components/schemas/transaction.v1.TransactionStatus'
        storeId:
          type: string
          title: store_id
          minLength: 3
          description: The unique identifier of the store associated with the transaction.
        orderId:
          type: string
          title: order_id
          description: The unique identifier of the order associated with the transaction.
          nullable: true
        fromId:
          type: string
          title: from_id
          description: The unique identifier of the client or supplier associated with the transaction.
          nullable: true
        amount:
          type: number
          title: amount
          format: double
          description: The amount of the transaction in XAF.
        currencyCode:
          type: string
          title: currency_code
          description: The currency code of the transaction (ISO 4217).
        createdAt:
          title: created_at
          description: The creation date of the transaction (ISO 8601).
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        updatedAt:
          title: updated_at
          description: The update date of the transaction (ISO 8601).
          nullable: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        description:
          type: string
          title: description
          description: 'The description or note of the transaction (ex. : "Refund for order cancellation").'
          nullable: true
        storeProductId:
          type: string
          title: store_product_id
          description: The unique identifier of the store product associated with the transaction.
          nullable: true
        quantity:
          type: integer
          title: quantity
          format: int32
          description: The quantity associated with the transaction (optional, for stock adjustments or stock transfers).
          nullable: true
        initiatedBy:
          type: string
          title: initiated_by
          description: The unique identifier of the user who initiated the transaction.
          nullable: true
        externalLinksIds:
          type: array
          items:
            type: string
          title: external_links_ids
          description: 'The external links of the transaction (ex. : payment receipt, invoice).'
      title: Transaction
      required:
        - storeId
        - currencyCode
      additionalProperties: false
      description: |-
        The Transaction represents an entry of actions impacting the stock or finances,
         such as sales, purchases, refunds, stock adjustments, or stock transfers.
         It ensures traceability of operations by capturing the user, date, product,
         associated order, amount or quantity, for audit and reports.
    transaction.v1.TransactionStatus:
      type: string
      title: TransactionStatus
      enum:
        - TRANSACTION_STATUS_UNSPECIFIED
        - TRANSACTION_STATUS_PENDING
        - TRANSACTION_STATUS_COMPLETED
        - TRANSACTION_STATUS_FAILED
        - TRANSACTION_STATUS_CANCELLED
    transaction.v1.TransactionType:
      type: string
      title: TransactionType
      enum:
        - TRANSACTION_TYPE_UNSPECIFIED
        - TRANSACTION_TYPE_SALE
        - TRANSACTION_TYPE_PURCHASE
        - TRANSACTION_TYPE_REFUND
        - TRANSACTION_TYPE_ADJUSTMENT
    transaction.v1.UpdateTransactionRequest:
      type: object
      properties:
        transaction:
          title: transaction
          description: The transaction to update.
          $ref: '#/components/schemas/transaction.v1.Transaction'
      title: UpdateTransactionRequest
      additionalProperties: false
    transaction.v1.UpdateTransactionResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the transaction was successfully updated.
      title: UpdateTransactionResponse
      additionalProperties: false
security: []
tags:
  - name: transaction.v1.TransactionService
