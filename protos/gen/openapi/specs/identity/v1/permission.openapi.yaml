openapi: 3.1.0
info:
  title: identity.v1
paths:
  /identity.v1.PermissionService/CheckStorePermission:
    post:
      tags:
        - identity.v1.PermissionService
      summary: Check if a user has a store permission
      description: Check if a user has a store permission
      operationId: identity.v1.PermissionService.CheckStorePermission
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identity.v1.CheckStorePermissionRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity.v1.CheckStorePermissionResponse'
  /identity.v1.PermissionService/CreateStorePermission:
    post:
      tags:
        - identity.v1.PermissionService
      summary: Create store permission
      description: Create store permission
      operationId: identity.v1.PermissionService.CreateStorePermission
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identity.v1.CreateStorePermissionRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity.v1.SuccessResponse'
  /identity.v1.PermissionService/DeleteStorePermission:
    post:
      tags:
        - identity.v1.PermissionService
      summary: Delete store permission
      description: Delete store permission
      operationId: identity.v1.PermissionService.DeleteStorePermission
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identity.v1.DeleteStorePermissionRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity.v1.SuccessResponse'
  /identity.v1.PermissionService/UpdateStorePermission:
    post:
      tags:
        - identity.v1.PermissionService
      summary: Update store permission
      description: Update store permission
      operationId: identity.v1.PermissionService.UpdateStorePermission
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identity.v1.UpdateStorePermissionRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identity.v1.SuccessResponse'
components:
  schemas:
    connect-protocol-version:
      type: number
      title: Connect-Protocol-Version
      enum:
        - 1
      description: Define the version of the Connect protocol
      const: 1
    connect-timeout-header:
      type: number
      title: Connect-Timeout-Ms
      description: Define the timeout, in ms
    connect.error:
      type: object
      properties:
        code:
          type: string
          examples:
            - not_found
          enum:
            - canceled
            - unknown
            - invalid_argument
            - deadline_exceeded
            - not_found
            - already_exists
            - permission_denied
            - resource_exhausted
            - failed_precondition
            - aborted
            - out_of_range
            - unimplemented
            - internal
            - unavailable
            - data_loss
            - unauthenticated
          description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
        details:
          type: array
          items:
            $ref: '#/components/schemas/connect.error_details.Any'
          description: A list of messages that carry the error details. There is no limit on the number of messages.
      title: Connect Error
      additionalProperties: true
      description: 'Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation'
    connect.error_details.Any:
      type: object
      properties:
        type:
          type: string
          description: 'A URL that acts as a globally unique identifier for the type of the serialized message. For example: `type.googleapis.com/google.rpc.ErrorInfo`. This is used to determine the schema of the data in the `value` field and is the discriminator for the `debug` field.'
        value:
          type: string
          format: binary
          description: The Protobuf message, serialized as bytes and base64-encoded. The specific message type is identified by the `type` field.
        debug:
          oneOf:
            - type: object
              title: Any
              additionalProperties: true
              description: Detailed error information.
          discriminator:
            propertyName: type
          title: Debug
          description: Deserialized error detail payload. The 'type' field indicates the schema. This field is for easier debugging and should not be relied upon for application logic.
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message, with an additional debug field for ConnectRPC error details.
    identity.v1.CheckStorePermissionRequest:
      type: object
      properties:
        userId:
          type: string
          title: user_id
          minLength: 3
        storeId:
          type: string
          title: store_id
          minLength: 3
        permissionField:
          type: string
          title: permission_field
          description: 'Example: "product.create_product_in_inventory"'
      title: CheckStorePermissionRequest
      required:
        - userId
        - storeId
      additionalProperties: false
    identity.v1.CheckStorePermissionResponse:
      type: object
      properties:
        hasPermission:
          type: boolean
          title: has_permission
      title: CheckStorePermissionResponse
      additionalProperties: false
    identity.v1.CreateStorePermissionRequest:
      type: object
      properties:
        permissions:
          title: permissions
          $ref: '#/components/schemas/identity.v1.StorePermissions'
        storeId:
          type: string
          title: store_id
          minLength: 3
      title: CreateStorePermissionRequest
      required:
        - storeId
      additionalProperties: false
    identity.v1.DeleteStorePermissionRequest:
      type: object
      properties:
        storePermissionId:
          type: string
          title: store_permission_id
          minLength: 3
      title: DeleteStorePermissionRequest
      required:
        - storePermissionId
      additionalProperties: false
    identity.v1.StoreInvoicePermission:
      type: object
      properties:
        readInvoice:
          type: boolean
          title: read_invoice
        createInvoice:
          type: boolean
          title: create_invoice
      title: StoreInvoicePermission
      additionalProperties: false
      description: / ----- INVOICE ----- ///
    identity.v1.StoreMemberPermission:
      type: object
      properties:
        readInformation:
          type: boolean
          title: read_information
        inviteMember:
          type: boolean
          title: invite_member
        updateMember:
          type: boolean
          title: update_member
        deleteMember:
          type: boolean
          title: delete_member
      title: StoreMemberPermission
      additionalProperties: false
      description: / ----- MEMBER ----- ///
    identity.v1.StoreOrderPermission:
      type: object
      properties:
        readOrder:
          type: boolean
          title: read_order
        createOrder:
          type: boolean
          title: create_order
      title: StoreOrderPermission
      additionalProperties: false
      description: / ----- ORDER ----- ///
    identity.v1.StorePermissions:
      type: object
      properties:
        product:
          title: product
          $ref: '#/components/schemas/identity.v1.StoreProductPermission'
        member:
          title: member
          $ref: '#/components/schemas/identity.v1.StoreMemberPermission'
        report:
          title: report
          $ref: '#/components/schemas/identity.v1.StoreReportPermission'
        order:
          title: order
          $ref: '#/components/schemas/identity.v1.StoreOrderPermission'
        invoice:
          title: invoice
          $ref: '#/components/schemas/identity.v1.StoreInvoicePermission'
        supplier:
          title: supplier
          $ref: '#/components/schemas/identity.v1.StoreSupplierPermission'
        transaction:
          title: transaction
          $ref: '#/components/schemas/identity.v1.StoreTransactionPermission'
      title: StorePermissions
      additionalProperties: false
      description: / ----- STORE PERMISSIONS (AGGREGATOR) ----- ///
    identity.v1.StoreProductPermission:
      type: object
      properties:
        readProductInInventory:
          type: boolean
          title: read_product_in_inventory
        createProductInInventory:
          type: boolean
          title: create_product_in_inventory
        updateProductInInventory:
          type: boolean
          title: update_product_in_inventory
        deleteProductInInventory:
          type: boolean
          title: delete_product_in_inventory
      title: StoreProductPermission
      additionalProperties: false
      description: / ----- PRODUCT ----- ///
    identity.v1.StoreReportPermission:
      type: object
      properties:
        readReport:
          type: boolean
          title: read_report
      title: StoreReportPermission
      additionalProperties: false
      description: / ----- REPORT ----- ///
    identity.v1.StoreSupplierPermission:
      type: object
      properties:
        readSupplier:
          type: boolean
          title: read_supplier
        createSupplier:
          type: boolean
          title: create_supplier
        updateSupplier:
          type: boolean
          title: update_supplier
        deleteSupplier:
          type: boolean
          title: delete_supplier
      title: StoreSupplierPermission
      additionalProperties: false
      description: / ----- SUPPLIER ----- ///
    identity.v1.StoreTransactionPermission:
      type: object
      properties:
        readTransaction:
          type: boolean
          title: read_transaction
        createTransaction:
          type: boolean
          title: create_transaction
        updateTransaction:
          type: boolean
          title: update_transaction
      title: StoreTransactionPermission
      additionalProperties: false
      description: / ----- TRANSACTION ----- ///
    identity.v1.SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
      title: SuccessResponse
      additionalProperties: false
    identity.v1.UpdateStorePermissionRequest:
      type: object
      properties:
        permissions:
          title: permissions
          $ref: '#/components/schemas/identity.v1.StorePermissions'
        storePermissionId:
          type: string
          title: store_permission_id
          minLength: 3
      title: UpdateStorePermissionRequest
      required:
        - storePermissionId
      additionalProperties: false
security: []
tags:
  - name: identity.v1.PermissionService
