openapi: 3.1.0
info:
  title: inventory.v1
paths:
  /inventory.v1.CategoryService/CreateCategory:
    post:
      tags:
        - inventory.v1.CategoryService
      summary: Creates a new category.
      description: Creates a new category.
      operationId: inventory.v1.CategoryService.CreateCategory
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventory.v1.CreateCategoryRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventory.v1.CreateCategoryResponse'
  /inventory.v1.CategoryService/DeleteCategory:
    post:
      tags:
        - inventory.v1.CategoryService
      summary: Deletes a category.
      description: Deletes a category.
      operationId: inventory.v1.CategoryService.DeleteCategory
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventory.v1.DeleteCategoryRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventory.v1.DeleteCategoryResponse'
  /inventory.v1.CategoryService/FindCategories:
    post:
      tags:
        - inventory.v1.CategoryService
      summary: Finds categories by name.
      description: Finds categories by name.
      operationId: inventory.v1.CategoryService.FindCategories
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventory.v1.FindCategoriesRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventory.v1.FindCategoriesResponse'
  /inventory.v1.CategoryService/GetCategory:
    post:
      tags:
        - inventory.v1.CategoryService
      summary: Gets a category by id.
      description: Gets a category by id.
      operationId: inventory.v1.CategoryService.GetCategory
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventory.v1.GetCategoryRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventory.v1.GetCategoryResponse'
  /inventory.v1.CategoryService/UpdateCategory:
    post:
      tags:
        - inventory.v1.CategoryService
      summary: Updates a category.
      description: Updates a category.
      operationId: inventory.v1.CategoryService.UpdateCategory
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventory.v1.UpdateCategoryRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventory.v1.UpdateCategoryResponse'
components:
  schemas:
    connect-protocol-version:
      type: number
      title: Connect-Protocol-Version
      enum:
        - 1
      description: Define the version of the Connect protocol
      const: 1
    connect-timeout-header:
      type: number
      title: Connect-Timeout-Ms
      description: Define the timeout, in ms
    connect.error:
      type: object
      properties:
        code:
          type: string
          examples:
            - not_found
          enum:
            - canceled
            - unknown
            - invalid_argument
            - deadline_exceeded
            - not_found
            - already_exists
            - permission_denied
            - resource_exhausted
            - failed_precondition
            - aborted
            - out_of_range
            - unimplemented
            - internal
            - unavailable
            - data_loss
            - unauthenticated
          description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
        details:
          type: array
          items:
            $ref: '#/components/schemas/connect.error_details.Any'
          description: A list of messages that carry the error details. There is no limit on the number of messages.
      title: Connect Error
      additionalProperties: true
      description: 'Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation'
    connect.error_details.Any:
      type: object
      properties:
        type:
          type: string
          description: 'A URL that acts as a globally unique identifier for the type of the serialized message. For example: `type.googleapis.com/google.rpc.ErrorInfo`. This is used to determine the schema of the data in the `value` field and is the discriminator for the `debug` field.'
        value:
          type: string
          format: binary
          description: The Protobuf message, serialized as bytes and base64-encoded. The specific message type is identified by the `type` field.
        debug:
          oneOf:
            - type: object
              title: Any
              additionalProperties: true
              description: Detailed error information.
          discriminator:
            propertyName: type
          title: Debug
          description: Deserialized error detail payload. The 'type' field indicates the schema. This field is for easier debugging and should not be relied upon for application logic.
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message, with an additional debug field for ConnectRPC error details.
    google.protobuf.Timestamp:
      type: string
      examples:
        - "2023-01-15T01:30:15.01Z"
        - "2024-12-25T12:00:00Z"
      format: date-time
      description: |-
        A Timestamp represents a point in time independent of any time zone or local
         calendar, encoded as a count of seconds and fractions of seconds at
         nanosecond resolution. The count is relative to an epoch at UTC midnight on
         January 1, 1970, in the proleptic Gregorian calendar which extends the
         Gregorian calendar backwards to year one.

         All minutes are 60 seconds long. Leap seconds are "smeared" so that no leap
         second table is needed for interpretation, using a [24-hour linear
         smear](https://developers.google.com/time/smear).

         The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By
         restricting to that range, we ensure that we can convert to and from [RFC
         3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.

         # Examples

         Example 1: Compute Timestamp from POSIX `time()`.

             Timestamp timestamp;
             timestamp.set_seconds(time(NULL));
             timestamp.set_nanos(0);

         Example 2: Compute Timestamp from POSIX `gettimeofday()`.

             struct timeval tv;
             gettimeofday(&tv, NULL);

             Timestamp timestamp;
             timestamp.set_seconds(tv.tv_sec);
             timestamp.set_nanos(tv.tv_usec * 1000);

         Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.

             FILETIME ft;
             GetSystemTimeAsFileTime(&ft);
             UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;

             // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z
             // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.
             Timestamp timestamp;
             timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));
             timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));

         Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.

             long millis = System.currentTimeMillis();

             Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)
                 .setNanos((int) ((millis % 1000) * 1000000)).build();

         Example 5: Compute Timestamp from Java `Instant.now()`.

             Instant now = Instant.now();

             Timestamp timestamp =
                 Timestamp.newBuilder().setSeconds(now.getEpochSecond())
                     .setNanos(now.getNano()).build();

         Example 6: Compute Timestamp from current time in Python.

             timestamp = Timestamp()
             timestamp.GetCurrentTime()

         # JSON Mapping

         In JSON format, the Timestamp type is encoded as a string in the
         [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the
         format is "{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z"
         where {year} is always expressed using four digits while {month}, {day},
         {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional
         seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),
         are optional. The "Z" suffix indicates the timezone ("UTC"); the timezone
         is required. A proto3 JSON serializer should always use UTC (as indicated by
         "Z") when printing the Timestamp type and a proto3 JSON parser should be
         able to accept both UTC and other timezones (as indicated by an offset).

         For example, "2017-01-15T01:30:15.01Z" encodes 15.01 seconds past
         01:30 UTC on January 15, 2017.

         In JavaScript, one can convert a Date object to this format using the
         standard
         [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)
         method. In Python, a standard `datetime.datetime` object can be converted
         to this format using
         [`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with
         the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use
         the Joda Time's [`ISODateTimeFormat.dateTime()`](
         http://joda-time.sourceforge.net/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime()
         ) to obtain a formatter capable of generating timestamps in this format.
    inventory.v1.Category:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          description: Unique identifier for the category
          nullable: true
        name:
          title: name
          description: Name of the category (e.g., "Electronics", "Smart TVs")
          $ref: '#/components/schemas/inventory.v1.Internationalized'
        parentCategoryId:
          type: string
          title: parent_category_id
          description: Reference to parent category (empty for root categories)
          nullable: true
        status:
          title: status
          description: The status of the category.
          $ref: '#/components/schemas/inventory.v1.CategoryStatus'
        type:
          title: type
          description: The status of the category.
          $ref: '#/components/schemas/inventory.v1.CategoryType'
        businessId:
          type: string
          title: business_id
          minLength: 6
          description: Business ID associated with the category
          nullable: true
        createdAt:
          title: created_at
          description: Timestamp when the category was created
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        updatedAt:
          title: updated_at
          description: Timestamp when the category was last updated
          nullable: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: Category
      required:
        - businessId
      additionalProperties: false
    inventory.v1.CategoryStatus:
      type: string
      title: CategoryStatus
      enum:
        - CATEGORY_STATUS_UNSPECIFIED
        - CATEGORY_STATUS_ACTIVE
        - CATEGORY_STATUS_INACTIVE
    inventory.v1.CategoryType:
      type: string
      title: CategoryType
      enum:
        - CATEGORY_TYPE_UNSPECIFIED
        - CATEGORY_TYPE_STORE
        - CATEGORY_TYPE_BUSINESS
        - CATEGORY_TYPE_PRODUCT
    inventory.v1.CreateCategoryRequest:
      type: object
      properties:
        category:
          title: category
          description: The category information to create.
          $ref: '#/components/schemas/inventory.v1.Category'
      title: CreateCategoryRequest
      additionalProperties: false
    inventory.v1.CreateCategoryResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the category was successfully created.
      title: CreateCategoryResponse
      additionalProperties: false
    inventory.v1.DeleteCategoryRequest:
      type: object
      properties:
        categoryId:
          type: string
          title: category_id
          minLength: 3
          description: The unique identifier of the category.
      title: DeleteCategoryRequest
      required:
        - categoryId
      additionalProperties: false
    inventory.v1.DeleteCategoryResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the category was successfully deleted.
      title: DeleteCategoryResponse
      additionalProperties: false
    inventory.v1.FindCategoriesRequest:
      type: object
      properties:
        businessId:
          type: string
          title: business_id
          minLength: 3
          description: Find the category by business_id
        refId:
          type: string
          title: ref_id
          description: Find the category by ref_id
          nullable: true
        name:
          type: string
          title: name
          description: Find the category by name
          nullable: true
        parentCategoryId:
          type: string
          title: parent_category_id
          description: Find the category by parent_category_id
          nullable: true
        status:
          title: status
          description: Find the category by status
          nullable: true
          $ref: '#/components/schemas/inventory.v1.CategoryStatus'
        type:
          title: type
          description: Find the category by type
          nullable: true
          $ref: '#/components/schemas/inventory.v1.CategoryType'
      title: FindCategoriesRequest
      required:
        - businessId
      additionalProperties: false
    inventory.v1.FindCategoriesResponse:
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/inventory.v1.Category'
          title: categories
      title: FindCategoriesResponse
      additionalProperties: false
    inventory.v1.GetCategoryRequest:
      type: object
      properties:
        categoryId:
          type: string
          title: category_id
          minLength: 3
          description: The unique identifier of the category.
      title: GetCategoryRequest
      required:
        - categoryId
      additionalProperties: false
    inventory.v1.GetCategoryResponse:
      type: object
      properties:
        category:
          title: category
          description: The retrieved category data.
          $ref: '#/components/schemas/inventory.v1.Category'
      title: GetCategoryResponse
      additionalProperties: false
    inventory.v1.Internationalized:
      type: object
      properties:
        en:
          type: string
          title: en
          description: The English name of the product category.
        fr:
          type: string
          title: fr
          description: The French name of the product category.
      title: Internationalized
      additionalProperties: false
    inventory.v1.UpdateCategoryRequest:
      type: object
      properties:
        categoryId:
          type: string
          title: category_id
          minLength: 3
          description: The category information to update.
        category:
          title: category
          description: The category information to update.
          $ref: '#/components/schemas/inventory.v1.Category'
      title: UpdateCategoryRequest
      required:
        - categoryId
      additionalProperties: false
    inventory.v1.UpdateCategoryResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the category was successfully updated.
      title: UpdateCategoryResponse
      additionalProperties: false
security: []
tags:
  - name: inventory.v1.CategoryService
