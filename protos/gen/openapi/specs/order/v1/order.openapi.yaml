openapi: 3.1.0
info:
  title: order.v1
paths:
  /order.v1.OrderService/CreateOrder:
    post:
      tags:
        - order.v1.OrderService
      summary: Creates a new order.
      description: Creates a new order.
      operationId: order.v1.OrderService.CreateOrder
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order.v1.CreateOrderRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order.v1.CreateOrderResponse'
  /order.v1.OrderService/GetOrder:
    post:
      tags:
        - order.v1.OrderService
      summary: Gets an order by id.
      description: Gets an order by id.
      operationId: order.v1.OrderService.GetOrder
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order.v1.GetOrderRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order.v1.GetOrderResponse'
  /order.v1.OrderService/DeleteOrder:
    post:
      tags:
        - order.v1.OrderService
      summary: Deletes an order.
      description: Deletes an order.
      operationId: order.v1.OrderService.DeleteOrder
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order.v1.DeleteOrderRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order.v1.DeleteOrderResponse'
  /order.v1.OrderService/FindOrders:
    post:
      tags:
        - order.v1.OrderService
      summary: Finds orders by query.
      description: Finds orders by query.
      operationId: order.v1.OrderService.FindOrders
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order.v1.FindOrdersRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order.v1.FindOrdersResponse'
components:
  schemas:
    order.v1.OrderStatus:
      type: string
      title: OrderStatus
      enum:
        - ORDER_STATUS_UNSPECIFIED
        - ORDER_STATUS_PENDING
        - ORDER_STATUS_PROCESSING
        - ORDER_STATUS_COMPLETED
        - ORDER_STATUS_CANCELLED
    google.protobuf.Timestamp:
      type: string
      examples:
        - "2023-01-15T01:30:15.01Z"
        - "2024-12-25T12:00:00Z"
      format: date-time
      description: |-
        A Timestamp represents a point in time independent of any time zone or local
         calendar, encoded as a count of seconds and fractions of seconds at
         nanosecond resolution. The count is relative to an epoch at UTC midnight on
         January 1, 1970, in the proleptic Gregorian calendar which extends the
         Gregorian calendar backwards to year one.

         All minutes are 60 seconds long. Leap seconds are "smeared" so that no leap
         second table is needed for interpretation, using a [24-hour linear
         smear](https://developers.google.com/time/smear).

         The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By
         restricting to that range, we ensure that we can convert to and from [RFC
         3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.

         # Examples

         Example 1: Compute Timestamp from POSIX `time()`.

             Timestamp timestamp;
             timestamp.set_seconds(time(NULL));
             timestamp.set_nanos(0);

         Example 2: Compute Timestamp from POSIX `gettimeofday()`.

             struct timeval tv;
             gettimeofday(&tv, NULL);

             Timestamp timestamp;
             timestamp.set_seconds(tv.tv_sec);
             timestamp.set_nanos(tv.tv_usec * 1000);

         Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.

             FILETIME ft;
             GetSystemTimeAsFileTime(&ft);
             UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;

             // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z
             // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.
             Timestamp timestamp;
             timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));
             timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));

         Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.

             long millis = System.currentTimeMillis();

             Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)
                 .setNanos((int) ((millis % 1000) * 1000000)).build();

         Example 5: Compute Timestamp from Java `Instant.now()`.

             Instant now = Instant.now();

             Timestamp timestamp =
                 Timestamp.newBuilder().setSeconds(now.getEpochSecond())
                     .setNanos(now.getNano()).build();

         Example 6: Compute Timestamp from current time in Python.

             timestamp = Timestamp()
             timestamp.GetCurrentTime()

         # JSON Mapping

         In JSON format, the Timestamp type is encoded as a string in the
         [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the
         format is "{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z"
         where {year} is always expressed using four digits while {month}, {day},
         {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional
         seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),
         are optional. The "Z" suffix indicates the timezone ("UTC"); the timezone
         is required. A proto3 JSON serializer should always use UTC (as indicated by
         "Z") when printing the Timestamp type and a proto3 JSON parser should be
         able to accept both UTC and other timezones (as indicated by an offset).

         For example, "2017-01-15T01:30:15.01Z" encodes 15.01 seconds past
         01:30 UTC on January 15, 2017.

         In JavaScript, one can convert a Date object to this format using the
         standard
         [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)
         method. In Python, a standard `datetime.datetime` object can be converted
         to this format using
         [`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with
         the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use
         the Joda Time's [`ISODateTimeFormat.dateTime()`](
         http://joda-time.sourceforge.net/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime()
         ) to obtain a formatter capable of generating timestamps in this format.
    order.v1.CreateOrderRequest:
      type: object
      properties:
        order:
          title: order
          description: The order to create.
          $ref: '#/components/schemas/order.v1.Order'
        supplierName:
          type: string
          title: supplier_name
          description: The name of the supplier.
          nullable: true
        businessId:
          type: string
          title: business_id
          description: The unique identifier of the business.
      title: CreateOrderRequest
      additionalProperties: false
    order.v1.CreateOrderResponse:
      type: object
      properties:
        orderId:
          type: string
          title: order_id
          minLength: 3
          description: |
            The unique identifier of the created order.
            string.min_len = 3
      title: CreateOrderResponse
      required:
        - orderId
      additionalProperties: false
    order.v1.DeleteOrderRequest:
      type: object
      properties:
        orderId:
          type: string
          title: order_id
          minLength: 3
          description: |
            The unique identifier of the order to delete.
            string.min_len = 3
      title: DeleteOrderRequest
      required:
        - orderId
      additionalProperties: false
    order.v1.DeleteOrderResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the order was successfully deleted.
      title: DeleteOrderResponse
      additionalProperties: false
    order.v1.FindOrdersRequest:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          description: The unique identifier of the order to retrieve.
          nullable: true
        fromId:
          type: string
          title: from_id
          description: The id of the client or the supplier if available.
          nullable: true
        isClientOrder:
          type: string
          title: is_client_order
          description: Whether the order is from the client or the supplier.
          nullable: true
        status:
          type: array
          items:
            $ref: '#/components/schemas/order.v1.OrderStatus'
          title: status
          description: The status of the order.
      title: FindOrdersRequest
      additionalProperties: false
    order.v1.FindOrdersResponse:
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/order.v1.Order'
          title: orders
          description: The unique identifiers of the orders.
      title: FindOrdersResponse
      additionalProperties: false
    order.v1.GetOrderRequest:
      type: object
      properties:
        orderId:
          type: string
          title: order_id
          minLength: 3
          description: |
            The unique identifier of the order to retrieve.
            string.min_len = 3
      title: GetOrderRequest
      required:
        - orderId
      additionalProperties: false
    order.v1.GetOrderResponse:
      type: object
      properties:
        order:
          title: order
          description: The retrieved order data.
          $ref: '#/components/schemas/order.v1.Order'
        createdAt:
          title: created_at
          description: The date and time the order was created.
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        updatedAt:
          title: updated_at
          description: The date and time the order was last updated.
          nullable: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: GetOrderResponse
      additionalProperties: false
    order.v1.Order:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          description: The unique identifier of the order.
          nullable: true
        fromId:
          type: string
          title: from_id
          description: The id of the client or the supplier if available.
          nullable: true
        isClientOrder:
          type: string
          title: is_client_order
          description: Whether the order is from the client or the supplier.
        orderItems:
          type: array
          items:
            $ref: '#/components/schemas/order.v1.OrderItem'
          title: order_items
          description: The list of items in the order.
        totalPriceInCents:
          type: integer
          title: total_price_in_cents
          format: int32
          description: The total price of the order in cents.
        status:
          title: status
          description: The status of the order.
          $ref: '#/components/schemas/order.v1.OrderStatus'
        createdAt:
          title: created_at
          description: The date and time the order was created.
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        updatedAt:
          title: updated_at
          description: The date and time the order was last updated.
          nullable: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: Order
      additionalProperties: false
    order.v1.OrderItem:
      type: object
      properties:
        businessProductId:
          type: string
          title: business_product_id
          description: The unique identifier of the business product.
        quantity:
          type: integer
          title: quantity
          format: int32
          description: The quantity of the product.
        unitPriceInCents:
          type: integer
          title: unit_price_in_cents
          format: int32
          description: |-
            The unit price in cents of the product.
             WARN: This value is stored because the unit price can change over time.
      title: OrderItem
      additionalProperties: false
    connect-protocol-version:
      type: number
      title: Connect-Protocol-Version
      enum:
        - 1
      description: Define the version of the Connect protocol
      const: 1
    connect-timeout-header:
      type: number
      title: Connect-Timeout-Ms
      description: Define the timeout, in ms
    connect.error:
      type: object
      properties:
        code:
          type: string
          examples:
            - not_found
          enum:
            - canceled
            - unknown
            - invalid_argument
            - deadline_exceeded
            - not_found
            - already_exists
            - permission_denied
            - resource_exhausted
            - failed_precondition
            - aborted
            - out_of_range
            - unimplemented
            - internal
            - unavailable
            - data_loss
            - unauthenticated
          description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
        details:
          type: array
          items:
            $ref: '#/components/schemas/connect.error_details.Any'
          description: A list of messages that carry the error details. There is no limit on the number of messages.
      title: Connect Error
      additionalProperties: true
      description: 'Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation'
    connect.error_details.Any:
      type: object
      properties:
        type:
          type: string
          description: 'A URL that acts as a globally unique identifier for the type of the serialized message. For example: `type.googleapis.com/google.rpc.ErrorInfo`. This is used to determine the schema of the data in the `value` field and is the discriminator for the `debug` field.'
        value:
          type: string
          format: binary
          description: The Protobuf message, serialized as bytes and base64-encoded. The specific message type is identified by the `type` field.
        debug:
          oneOf:
            - type: object
              title: Any
              additionalProperties: true
              description: Detailed error information.
          discriminator:
            propertyName: type
          title: Debug
          description: Deserialized error detail payload. The 'type' field indicates the schema. This field is for easier debugging and should not be relied upon for application logic.
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message, with an additional debug field for ConnectRPC error details.
security: []
tags:
  - name: order.v1.OrderService
