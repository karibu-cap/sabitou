openapi: 3.1.0
info:
  title: business.v1
paths:
  /business.v1.BusinessClientService/CreateBusinessClient:
    post:
      tags:
        - business.v1.BusinessClientService
      summary: Creates a new client.
      description: Creates a new client.
      operationId: business.v1.BusinessClientService.CreateBusinessClient
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.CreateBusinessClientRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.CreateBusinessClientResponse'
  /business.v1.BusinessClientService/GetBusinessClient:
    post:
      tags:
        - business.v1.BusinessClientService
      summary: Gets a client by id.
      description: Gets a client by id.
      operationId: business.v1.BusinessClientService.GetBusinessClient
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.GetBusinessClientRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.GetBusinessClientResponse'
  /business.v1.BusinessClientService/UpdateBusinessClient:
    post:
      tags:
        - business.v1.BusinessClientService
      summary: Updates a client.  Note:Only the fields that are set will be updated.
      description: |-
        Updates a client.
         Note:Only the fields that are set will be updated.
      operationId: business.v1.BusinessClientService.UpdateBusinessClient
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.UpdateBusinessClientRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.UpdateBusinessClientResponse'
  /business.v1.BusinessClientService/DeleteBusinessClient:
    post:
      tags:
        - business.v1.BusinessClientService
      summary: Deletes a client.
      description: Deletes a client.
      operationId: business.v1.BusinessClientService.DeleteBusinessClient
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.DeleteBusinessClientRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.DeleteBusinessClientResponse'
components:
  schemas:
    business.v1.BusinessClient:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          description: The reference id to the client identifier.
          nullable: true
        fullName:
          type: string
          title: full_name
          description: The name of the client.
        externalLinksIds:
          type: array
          items:
            type: string
          title: external_links_ids
          description: The links of the client it can contain client mail, phone number, website etc.
        logoLinkId:
          type: string
          title: logo_link_id
          description: The id of the media of the logo of the client.
          nullable: true
        businessId:
          type: string
          title: business_id
          minLength: 3
          description: |
            The id of the business of the client.
            string.min_len = 3
      title: BusinessClient
      required:
        - businessId
      additionalProperties: false
    business.v1.CreateBusinessClientRequest:
      type: object
      properties:
        client:
          title: client
          description: The client information to create.
          $ref: '#/components/schemas/business.v1.BusinessClient'
        logoRawImage:
          type: string
          title: logo_raw_image
          format: byte
          description: The raw image of the logo of the client.
          nullable: true
      title: CreateBusinessClientRequest
      additionalProperties: false
    business.v1.CreateBusinessClientResponse:
      type: object
      properties:
        clientId:
          type: string
          title: client_id
          minLength: 3
          description: |
            The reference id to the client identifier.
            string.min_len = 3
      title: CreateBusinessClientResponse
      required:
        - clientId
      additionalProperties: false
    business.v1.DeleteBusinessClientRequest:
      type: object
      properties:
        clientId:
          type: string
          title: client_id
          minLength: 3
          description: |
            The reference id to the client identifier.
            string.min_len = 3
      title: DeleteBusinessClientRequest
      required:
        - clientId
      additionalProperties: false
    business.v1.DeleteBusinessClientResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the client was successfully deleted.
      title: DeleteBusinessClientResponse
      additionalProperties: false
    business.v1.GetBusinessClientRequest:
      type: object
      properties:
        clientId:
          type: string
          title: client_id
          minLength: 3
          description: |
            The reference id to the client identifier.
            string.min_len = 3
      title: GetBusinessClientRequest
      required:
        - clientId
      additionalProperties: false
    business.v1.GetBusinessClientResponse:
      type: object
      properties:
        client:
          title: client
          description: The retrieved client data.
          $ref: '#/components/schemas/business.v1.BusinessClient'
      title: GetBusinessClientResponse
      additionalProperties: false
    business.v1.UpdateBusinessClientRequest:
      type: object
      properties:
        client:
          title: client
          description: |-
            The client information to update.
             Note:Only the fields that are set will be updated.
          $ref: '#/components/schemas/business.v1.BusinessClient'
        logoRawImage:
          type: string
          title: logo_raw_image
          format: byte
          description: The raw image of the logo of the client.
          nullable: true
      title: UpdateBusinessClientRequest
      additionalProperties: false
    business.v1.UpdateBusinessClientResponse:
      type: object
      properties:
        client:
          title: client
          description: The updated client data.
          $ref: '#/components/schemas/business.v1.BusinessClient'
      title: UpdateBusinessClientResponse
      additionalProperties: false
    connect-protocol-version:
      type: number
      title: Connect-Protocol-Version
      enum:
        - 1
      description: Define the version of the Connect protocol
      const: 1
    connect-timeout-header:
      type: number
      title: Connect-Timeout-Ms
      description: Define the timeout, in ms
    connect.error:
      type: object
      properties:
        code:
          type: string
          examples:
            - not_found
          enum:
            - canceled
            - unknown
            - invalid_argument
            - deadline_exceeded
            - not_found
            - already_exists
            - permission_denied
            - resource_exhausted
            - failed_precondition
            - aborted
            - out_of_range
            - unimplemented
            - internal
            - unavailable
            - data_loss
            - unauthenticated
          description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
        details:
          type: array
          items:
            $ref: '#/components/schemas/connect.error_details.Any'
          description: A list of messages that carry the error details. There is no limit on the number of messages.
      title: Connect Error
      additionalProperties: true
      description: 'Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation'
    connect.error_details.Any:
      type: object
      properties:
        type:
          type: string
          description: 'A URL that acts as a globally unique identifier for the type of the serialized message. For example: `type.googleapis.com/google.rpc.ErrorInfo`. This is used to determine the schema of the data in the `value` field and is the discriminator for the `debug` field.'
        value:
          type: string
          format: binary
          description: The Protobuf message, serialized as bytes and base64-encoded. The specific message type is identified by the `type` field.
        debug:
          oneOf:
            - type: object
              title: Any
              additionalProperties: true
              description: Detailed error information.
          discriminator:
            propertyName: type
          title: Debug
          description: Deserialized error detail payload. The 'type' field indicates the schema. This field is for easier debugging and should not be relied upon for application logic.
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message, with an additional debug field for ConnectRPC error details.
security: []
tags:
  - name: business.v1.BusinessClientService
