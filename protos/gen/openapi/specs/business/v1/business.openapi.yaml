openapi: 3.1.0
info:
  title: business.v1
paths:
  /business.v1.BusinessService/AssociateUserToBusiness:
    post:
      tags:
        - business.v1.BusinessService
      summary: Associate user to business.
      description: Associate user to business.
      operationId: business.v1.BusinessService.AssociateUserToBusiness
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.AssociateUserToBusinessRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.AssociateUserToBusinessResponse'
  /business.v1.BusinessService/ChangeBusinessCurrency:
    post:
      tags:
        - business.v1.BusinessService
      summary: Changes the business currency
      description: Changes the business currency
      operationId: business.v1.BusinessService.ChangeBusinessCurrency
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.ChangeBusinessCurrencyRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.ChangeBusinessCurrencyResponse'
  /business.v1.BusinessService/CreateBusiness:
    post:
      tags:
        - business.v1.BusinessService
      summary: Create a new business.
      description: Create a new business.
      operationId: business.v1.BusinessService.CreateBusiness
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.CreateBusinessRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.CreateBusinessResponse'
  /business.v1.BusinessService/CreateUserToBusiness:
    post:
      tags:
        - business.v1.BusinessService
      summary: Add user to business or invite user to business.
      description: Add user to business or invite user to business.
      operationId: business.v1.BusinessService.CreateUserToBusiness
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.CreateUserToBusinessRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.CreateUserToBusinessResponse'
  /business.v1.BusinessService/GetBusinessDetails:
    post:
      tags:
        - business.v1.BusinessService
      summary: Get a business by id.
      description: Get a business by id.
      operationId: business.v1.BusinessService.GetBusinessDetails
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.GetBusinessDetailsRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.GetBusinessDetailsResponse'
  /business.v1.BusinessService/GetBusinessMember:
    post:
      tags:
        - business.v1.BusinessService
      summary: Get a specific business member.
      description: Get a specific business member.
      operationId: business.v1.BusinessService.GetBusinessMember
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.GetBusinessMemberRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.GetBusinessMemberResponse'
  /business.v1.BusinessService/GetBusinessMembers:
    post:
      tags:
        - business.v1.BusinessService
      summary: Get the users of the business.
      description: Get the users of the business.
      operationId: business.v1.BusinessService.GetBusinessMembers
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.GetBusinessMembersRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.GetBusinessMembersResponse'
  /business.v1.BusinessService/GetMyBusinesses:
    post:
      tags:
        - business.v1.BusinessService
      summary: Get all businesses of the current user.
      description: Get all businesses of the current user.
      operationId: business.v1.BusinessService.GetMyBusinesses
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.GetMyBusinessesRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.GetMyBusinessesResponse'
  /business.v1.BusinessService/RemoveUserFromBusiness:
    post:
      tags:
        - business.v1.BusinessService
      summary: 'Remove user from business.  If the user has been created by the business, the user will be deleted.  NOTE: The authenticated user need to have the permission to remove the  user.'
      description: |-
        Remove user from business.
         If the user has been created by the business, the user will be deleted.
         NOTE: The authenticated user need to have the permission to remove the
         user.
      operationId: business.v1.BusinessService.RemoveUserFromBusiness
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.RemoveUserFromBusinessRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.RemoveUserFromBusinessResponse'
  /business.v1.BusinessService/RequestDeleteBusiness:
    post:
      tags:
        - business.v1.BusinessService
      summary: Request the deletion of the business. This request doesn't delete the business directly instead it put the business in inactive state and remove all business members.
      description: Request the deletion of the business. This request doesn't delete the business directly instead it put the business in inactive state and remove all business members.
      operationId: business.v1.BusinessService.RequestDeleteBusiness
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.RequestDeleteBusinessRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.RequestDeleteBusinessResponse'
  /business.v1.BusinessService/StreamBusinessMembers: {}
  /business.v1.BusinessService/UpdateBusiness:
    post:
      tags:
        - business.v1.BusinessService
      summary: Update a business.
      description: Update a business.
      operationId: business.v1.BusinessService.UpdateBusiness
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.UpdateBusinessRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.UpdateBusinessResponse'
  /business.v1.BusinessService/UpdateBusinessMember:
    post:
      tags:
        - business.v1.BusinessService
      summary: Update a business member (role, status, permissions).
      description: Update a business member (role, status, permissions).
      operationId: business.v1.BusinessService.UpdateBusinessMember
      parameters:
        - name: Connect-Protocol-Version
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/connect-protocol-version'
        - name: Connect-Timeout-Ms
          in: header
          schema:
            $ref: '#/components/schemas/connect-timeout-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business.v1.UpdateBusinessMemberRequest'
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business.v1.UpdateBusinessMemberResponse'
components:
  schemas:
    business.v1.AssociateUserToBusinessRequest:
      type: object
      properties:
        userId:
          type: string
          title: user_id
          description: The unique identifier of the user.
        businessId:
          type: string
          title: business_id
          description: The unique identifier of the business.
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/identity.v1.BusinessPermission'
          title: permissions
          description: The permissions that the user has.
      title: AssociateUserToBusinessRequest
      additionalProperties: false
      description: |-
        The unique identifier of the user.
         For example, the email address or @username.
         string u_ref = 1;
    business.v1.AssociateUserToBusinessResponse:
      type: object
      properties:
        businessMember:
          title: business_member
          description: The business member to return
          $ref: '#/components/schemas/business.v1.BusinessMember'
      title: AssociateUserToBusinessResponse
      additionalProperties: false
    business.v1.Business:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          description: The reference id to the business identifier.
          nullable: true
        name:
          type: string
          title: name
          description: The name of the business.
        description:
          type: string
          title: description
          description: The description of the business.
          nullable: true
        status:
          title: status
          description: The status of the business.
          $ref: '#/components/schemas/business.v1.BusinessStatusType'
        ownerId:
          type: string
          title: owner_id
          description: The id of the owner of the business.
        logoLinkId:
          type: string
          title: logo_link_id
          description: The id of the media of the logo of the business.
          nullable: true
        countryCode:
          type: string
          title: country_code
          description: |-
            The ISO 3166-1 alpha-2 country code of the business.
             e.g. CM, US, GB, etc.
        currencyCode:
          type: string
          title: currency_code
          description: |-
            The ISO 4217 currency code of the business.
             For example: XAF, USD, EUR, etc.
             Note: All price in the business will be in this currency.
        externalLinksIds:
          type: array
          items:
            type: string
          title: external_links_ids
          description: |-
            The media ids of different links of the business.
             It can be social media links, website links, etc.
        contactInfo:
          type: string
          title: contact_info
          description: The business contact information.
          nullable: true
        address:
          type: string
          title: address
          description: The business address.
          nullable: true
        email:
          type: string
          title: email
          description: The business email.
          nullable: true
      title: Business
      additionalProperties: false
    business.v1.BusinessMember:
      type: object
      properties:
        userId:
          type: string
          title: user_id
          description: The unique identifier of the user.
        businessId:
          type: string
          title: business_id
          description: The unique identifier of the business.
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/identity.v1.BusinessPermission'
          title: permissions
          description: The permissions that the user has.
        memberSince:
          title: member_since
          description: The date since when the user became a member.
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: BusinessMember
      additionalProperties: false
    business.v1.BusinessStatusType:
      type: string
      title: BusinessStatusType
      enum:
        - BUSINESS_STATUS_TYPE_UNSPECIFIED
        - BUSINESS_STATUS_TYPE_ACTIVE
        - BUSINESS_STATUS_TYPE_INACTIVE
    business.v1.ChangeBusinessCurrencyRequest:
      type: object
      properties:
        currencyChangePolicy:
          title: currency_change_policy
          description: |-
            The policy to apply when changing the currency
             This field is required on currency change.
          $ref: '#/components/schemas/business.v1.CurrencyChangePolicyType'
        businessId:
          type: string
          title: business_id
          description: The unique ref id of the business.
        countryCode:
          type: string
          title: country_code
          description: |-
            The ISO 3166-1 alpha-2 country code of the business.
             e.g. CM, US, GB, etc.
      title: ChangeBusinessCurrencyRequest
      additionalProperties: false
    business.v1.ChangeBusinessCurrencyResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
      title: ChangeBusinessCurrencyResponse
      additionalProperties: false
    business.v1.CreateBusinessRequest:
      type: object
      properties:
        business:
          title: business
          description: |-
            The business information to create.
             Note:Only the fields that are set will be created.
          $ref: '#/components/schemas/business.v1.Business'
        logoRawImage:
          type: string
          title: logo_raw_image
          format: byte
          description: The raw image of the logo of the business.
          nullable: true
        externalLinks:
          type: array
          items:
            $ref: '#/components/schemas/link.v1.ResourceLink'
          title: external_links
          description: The links of the business.
      title: CreateBusinessRequest
      additionalProperties: false
    business.v1.CreateBusinessResponse:
      type: object
      properties:
        businessId:
          type: string
          title: business_id
          minLength: 3
          description: The reference id to the business identifier.
      title: CreateBusinessResponse
      required:
        - businessId
      additionalProperties: false
    business.v1.CreateUserToBusinessRequest:
      type: object
      properties:
        firstName:
          type: string
          title: first_name
          description: The first name of the user.
        lastName:
          type: string
          title: last_name
          description: The last name of the user.
        userName:
          type: string
          title: user_name
          description: The username of the user.
        phoneNumber:
          type: string
          title: phone_number
          description: The phone number of the user.
        email:
          type: string
          title: email
          description: The email of the user.
        password:
          type: string
          title: password
          description: The password of the user.
        businessId:
          type: string
          title: business_id
          description: The unique identifier of the business.
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/identity.v1.BusinessPermission'
          title: permissions
          description: The permissions that the user has.
      title: CreateUserToBusinessRequest
      additionalProperties: false
      description: |-
        The unique identifier of the user.
         For example, the email address or @username.
         string u_ref = 1;
    business.v1.CreateUserToBusinessResponse:
      type: object
      properties:
        businessMember:
          title: business_member
          description: The business member to return
          $ref: '#/components/schemas/business.v1.BusinessMember'
      title: CreateUserToBusinessResponse
      additionalProperties: false
    business.v1.CurrencyChangePolicyType:
      type: string
      title: CurrencyChangePolicyType
      enum:
        - CURRENCY_CHANGE_POLICY_TYPE_UNSPECIFIED
        - CURRENCY_CHANGE_POLICY_TYPE_KEEP_PREVIOUS_CURRENCY_VALUE
        - CURRENCY_CHANGE_POLICY_TYPE_CONVERT_BASED_ON_CURRENT_EXCHANGE_RATE
    business.v1.GetBusinessDetailsRequest:
      type: object
      properties:
        businessId:
          type: string
          title: business_id
          minLength: 3
          description: The reference id to the business identifier.
      title: GetBusinessDetailsRequest
      required:
        - businessId
      additionalProperties: false
    business.v1.GetBusinessDetailsResponse:
      type: object
      properties:
        business:
          title: business
          description: The retrieved business data.
          $ref: '#/components/schemas/business.v1.Business'
      title: GetBusinessDetailsResponse
      additionalProperties: false
    business.v1.GetBusinessMemberRequest:
      type: object
      properties:
        userId:
          type: string
          title: user_id
          minLength: 3
          description: The unique identifier of the user.
        businessId:
          type: string
          title: business_id
          minLength: 3
          description: The unique identifier of the business.
      title: GetBusinessMemberRequest
      required:
        - userId
        - businessId
      additionalProperties: false
    business.v1.GetBusinessMemberResponse:
      type: object
      properties:
        businessMember:
          title: business_member
          description: The business member.
          $ref: '#/components/schemas/business.v1.BusinessMember'
      title: GetBusinessMemberResponse
      additionalProperties: false
    business.v1.GetBusinessMembersRequest:
      type: object
      properties:
        businessId:
          type: string
          title: business_id
          minLength: 3
          description: The reference id to the business identifier.
      title: GetBusinessMembersRequest
      required:
        - businessId
      additionalProperties: false
    business.v1.GetBusinessMembersResponse:
      type: object
      properties:
        businessMembers:
          type: array
          items:
            $ref: '#/components/schemas/business.v1.BusinessMember'
          title: business_members
          description: The set of business member
      title: GetBusinessMembersResponse
      additionalProperties: false
    business.v1.GetMyBusinessesRequest:
      type: object
      properties:
        ownerId:
          type: string
          title: owner_id
          description: The unique identifier of the user.
      title: GetMyBusinessesRequest
      additionalProperties: false
    business.v1.GetMyBusinessesResponse:
      type: object
      properties:
        businesses:
          type: array
          items:
            $ref: '#/components/schemas/business.v1.Business'
          title: businesses
      title: GetMyBusinessesResponse
      additionalProperties: false
    business.v1.RemoveUserFromBusinessRequest:
      type: object
      properties:
        userId:
          type: string
          title: user_id
          minLength: 3
          description: The unique identifier of the user.
        businessId:
          type: string
          title: business_id
          minLength: 3
      title: RemoveUserFromBusinessRequest
      required:
        - userId
        - businessId
      additionalProperties: false
    business.v1.RemoveUserFromBusinessResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the user was successfully removed from the business.
      title: RemoveUserFromBusinessResponse
      additionalProperties: false
    business.v1.RequestDeleteBusinessRequest:
      type: object
      properties:
        businessId:
          type: string
          title: business_id
          minLength: 3
          description: The reference id to the business identifier.
        password:
          type: string
          title: password
          description: |-
            The password of the user who is trying to delete the business.
             If the user doesn't have a password, he must set it before handling any deletion.
      title: RequestDeleteBusinessRequest
      required:
        - businessId
      additionalProperties: false
    business.v1.RequestDeleteBusinessResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the business will be deleted or not.
        noticePeriod:
          type: string
          title: notice_period
          description: The notice period before the business will be deleted.
      title: RequestDeleteBusinessResponse
      additionalProperties: false
    business.v1.StreamBusinessMembersRequest:
      type: object
      properties:
        businessId:
          type: string
          title: business_id
          minLength: 3
          description: The unique identifier of the business.
      title: StreamBusinessMembersRequest
      required:
        - businessId
      additionalProperties: false
    business.v1.StreamBusinessMembersResponse:
      type: object
      properties:
        businessMembers:
          type: array
          items:
            $ref: '#/components/schemas/business.v1.BusinessMember'
          title: business_members
          description: The business members.
      title: StreamBusinessMembersResponse
      additionalProperties: false
    business.v1.UpdateBusinessMemberRequest:
      type: object
      properties:
        userId:
          type: string
          title: user_id
          minLength: 3
          description: The unique identifier of the user.
        businessId:
          type: string
          title: business_id
          minLength: 3
          description: The unique identifier of the business.
        addPermissions:
          type: array
          items:
            $ref: '#/components/schemas/identity.v1.BusinessPermission'
          title: add_permissions
          description: The permissions to add (optional).
        removePermissions:
          type: array
          items:
            $ref: '#/components/schemas/identity.v1.BusinessPermission'
          title: remove_permissions
          description: The permissions to remove (optional).
      title: UpdateBusinessMemberRequest
      required:
        - userId
        - businessId
      additionalProperties: false
    business.v1.UpdateBusinessMemberResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the member was successfully updated.
        businessMember:
          title: business_member
          description: The updated business member.
          $ref: '#/components/schemas/business.v1.BusinessMember'
      title: UpdateBusinessMemberResponse
      additionalProperties: false
    business.v1.UpdateBusinessRequest:
      type: object
      properties:
        business:
          title: business
          description: |-
            The business information to update.
             Note:Only the fields that are set will be updated.
          $ref: '#/components/schemas/business.v1.Business'
        logoRawImage:
          type: string
          title: logo_raw_image
          format: byte
          description: The raw image of the logo of the business.
          nullable: true
        externalLinks:
          type: array
          items:
            $ref: '#/components/schemas/link.v1.ResourceLink'
          title: external_links
          description: The links of the business.
      title: UpdateBusinessRequest
      additionalProperties: false
    business.v1.UpdateBusinessResponse:
      type: object
      properties:
        success:
          type: boolean
          title: success
          description: Whether the business was successfully updated.
      title: UpdateBusinessResponse
      additionalProperties: false
    connect-protocol-version:
      type: number
      title: Connect-Protocol-Version
      enum:
        - 1
      description: Define the version of the Connect protocol
      const: 1
    connect-timeout-header:
      type: number
      title: Connect-Timeout-Ms
      description: Define the timeout, in ms
    connect.error:
      type: object
      properties:
        code:
          type: string
          examples:
            - not_found
          enum:
            - canceled
            - unknown
            - invalid_argument
            - deadline_exceeded
            - not_found
            - already_exists
            - permission_denied
            - resource_exhausted
            - failed_precondition
            - aborted
            - out_of_range
            - unimplemented
            - internal
            - unavailable
            - data_loss
            - unauthenticated
          description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
        details:
          type: array
          items:
            $ref: '#/components/schemas/connect.error_details.Any'
          description: A list of messages that carry the error details. There is no limit on the number of messages.
      title: Connect Error
      additionalProperties: true
      description: 'Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation'
    connect.error_details.Any:
      type: object
      properties:
        type:
          type: string
          description: 'A URL that acts as a globally unique identifier for the type of the serialized message. For example: `type.googleapis.com/google.rpc.ErrorInfo`. This is used to determine the schema of the data in the `value` field and is the discriminator for the `debug` field.'
        value:
          type: string
          format: binary
          description: The Protobuf message, serialized as bytes and base64-encoded. The specific message type is identified by the `type` field.
        debug:
          oneOf:
            - type: object
              title: Any
              additionalProperties: true
              description: Detailed error information.
          discriminator:
            propertyName: type
          title: Debug
          description: Deserialized error detail payload. The 'type' field indicates the schema. This field is for easier debugging and should not be relied upon for application logic.
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message, with an additional debug field for ConnectRPC error details.
    google.protobuf.Timestamp:
      type: string
      examples:
        - "2023-01-15T01:30:15.01Z"
        - "2024-12-25T12:00:00Z"
      format: date-time
      description: |-
        A Timestamp represents a point in time independent of any time zone or local
         calendar, encoded as a count of seconds and fractions of seconds at
         nanosecond resolution. The count is relative to an epoch at UTC midnight on
         January 1, 1970, in the proleptic Gregorian calendar which extends the
         Gregorian calendar backwards to year one.

         All minutes are 60 seconds long. Leap seconds are "smeared" so that no leap
         second table is needed for interpretation, using a [24-hour linear
         smear](https://developers.google.com/time/smear).

         The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By
         restricting to that range, we ensure that we can convert to and from [RFC
         3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.

         # Examples

         Example 1: Compute Timestamp from POSIX `time()`.

             Timestamp timestamp;
             timestamp.set_seconds(time(NULL));
             timestamp.set_nanos(0);

         Example 2: Compute Timestamp from POSIX `gettimeofday()`.

             struct timeval tv;
             gettimeofday(&tv, NULL);

             Timestamp timestamp;
             timestamp.set_seconds(tv.tv_sec);
             timestamp.set_nanos(tv.tv_usec * 1000);

         Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.

             FILETIME ft;
             GetSystemTimeAsFileTime(&ft);
             UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;

             // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z
             // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.
             Timestamp timestamp;
             timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));
             timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));

         Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.

             long millis = System.currentTimeMillis();

             Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)
                 .setNanos((int) ((millis % 1000) * 1000000)).build();

         Example 5: Compute Timestamp from Java `Instant.now()`.

             Instant now = Instant.now();

             Timestamp timestamp =
                 Timestamp.newBuilder().setSeconds(now.getEpochSecond())
                     .setNanos(now.getNano()).build();

         Example 6: Compute Timestamp from current time in Python.

             timestamp = Timestamp()
             timestamp.GetCurrentTime()

         # JSON Mapping

         In JSON format, the Timestamp type is encoded as a string in the
         [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the
         format is "{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z"
         where {year} is always expressed using four digits while {month}, {day},
         {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional
         seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),
         are optional. The "Z" suffix indicates the timezone ("UTC"); the timezone
         is required. A proto3 JSON serializer should always use UTC (as indicated by
         "Z") when printing the Timestamp type and a proto3 JSON parser should be
         able to accept both UTC and other timezones (as indicated by an offset).

         For example, "2017-01-15T01:30:15.01Z" encodes 15.01 seconds past
         01:30 UTC on January 15, 2017.

         In JavaScript, one can convert a Date object to this format using the
         standard
         [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)
         method. In Python, a standard `datetime.datetime` object can be converted
         to this format using
         [`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with
         the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use
         the Joda Time's [`ISODateTimeFormat.dateTime()`](
         http://joda-time.sourceforge.net/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime()
         ) to obtain a formatter capable of generating timestamps in this format.
    identity.v1.BusinessPermission:
      type: object
      properties:
        resourceType:
          title: resource_type
          $ref: '#/components/schemas/identity.v1.BusinessResourceType'
        actionType:
          title: action_type
          $ref: '#/components/schemas/identity.v1.ResourceActionType'
      title: BusinessPermission
      additionalProperties: false
    identity.v1.BusinessResourceType:
      type: string
      title: BusinessResourceType
      enum:
        - BUSINESS_RESOURCE_TYPE_UNSPECIFIED
        - BUSINESS_RESOURCE_TYPE_BUSINESS
        - BUSINESS_RESOURCE_TYPE_MEMBER
        - BUSINESS_RESOURCE_TYPE_SUPPLIER
    identity.v1.ResourceActionType:
      type: string
      title: ResourceActionType
      enum:
        - RESOURCE_ACTION_TYPE_UNSPECIFIED
        - RESOURCE_ACTION_TYPE_READ
        - RESOURCE_ACTION_TYPE_ADD
        - RESOURCE_ACTION_TYPE_UPDATE
        - RESOURCE_ACTION_TYPE_REMOVE
    link.v1.ResourceLink:
      type: object
      properties:
        refId:
          type: string
          title: ref_id
          description: The unique identifier of the resource link.
          nullable: true
        targetUri:
          type: string
          title: target_uri
          description: The link of the resource link.
        iconUri:
          type: string
          title: icon_uri
          description: The icon of the resource type or owner.
          nullable: true
        info:
          type: string
          title: info
          description: |-
            The meta data of the resource link.
             It can be the title of the target resource.
          nullable: true
        label:
          type: string
          title: label
          description: The label use to identify the resource type.
          nullable: true
      title: ResourceLink
      additionalProperties: false
      description: 'TODO: Auto delete resource link not linked to any other resource.'
security: []
tags:
  - name: business.v1.BusinessService
