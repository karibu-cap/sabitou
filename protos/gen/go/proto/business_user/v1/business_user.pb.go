// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: business_user/v1/business_user.proto

package businessUserV1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	v1 "sabitou/proto/business/v1"
	v11 "sabitou/proto/user/v1"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BusinessRole int32

const (
	BusinessRole_UNSPECIFIED BusinessRole = 0
	BusinessRole_ADMIN       BusinessRole = 1
	BusinessRole_MANAGER     BusinessRole = 2
	BusinessRole_STAFF       BusinessRole = 3
)

// Enum value maps for BusinessRole.
var (
	BusinessRole_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "ADMIN",
		2: "MANAGER",
		3: "STAFF",
	}
	BusinessRole_value = map[string]int32{
		"UNSPECIFIED": 0,
		"ADMIN":       1,
		"MANAGER":     2,
		"STAFF":       3,
	}
)

func (x BusinessRole) Enum() *BusinessRole {
	p := new(BusinessRole)
	*p = x
	return p
}

func (x BusinessRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BusinessRole) Descriptor() protoreflect.EnumDescriptor {
	return file_business_user_v1_business_user_proto_enumTypes[0].Descriptor()
}

func (BusinessRole) Type() protoreflect.EnumType {
	return &file_business_user_v1_business_user_proto_enumTypes[0]
}

func (x BusinessRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BusinessRole.Descriptor instead.
func (BusinessRole) EnumDescriptor() ([]byte, []int) {
	return file_business_user_v1_business_user_proto_rawDescGZIP(), []int{0}
}

type BusinessPermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateAStore            bool `protobuf:"varint,1,opt,name=create_a_store,json=createAStore,proto3" json:"create_a_store,omitempty"`
	ViewMember              bool `protobuf:"varint,2,opt,name=view_member,json=viewMember,proto3" json:"view_member,omitempty"`
	EditBusinessInformation bool `protobuf:"varint,3,opt,name=edit_business_information,json=editBusinessInformation,proto3" json:"edit_business_information,omitempty"`
	DeleteBusiness          bool `protobuf:"varint,4,opt,name=delete_business,json=deleteBusiness,proto3" json:"delete_business,omitempty"`
}

func (x *BusinessPermission) Reset() {
	*x = BusinessPermission{}
	mi := &file_business_user_v1_business_user_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BusinessPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusinessPermission) ProtoMessage() {}

func (x *BusinessPermission) ProtoReflect() protoreflect.Message {
	mi := &file_business_user_v1_business_user_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusinessPermission.ProtoReflect.Descriptor instead.
func (*BusinessPermission) Descriptor() ([]byte, []int) {
	return file_business_user_v1_business_user_proto_rawDescGZIP(), []int{0}
}

func (x *BusinessPermission) GetCreateAStore() bool {
	if x != nil {
		return x.CreateAStore
	}
	return false
}

func (x *BusinessPermission) GetViewMember() bool {
	if x != nil {
		return x.ViewMember
	}
	return false
}

func (x *BusinessPermission) GetEditBusinessInformation() bool {
	if x != nil {
		return x.EditBusinessInformation
	}
	return false
}

func (x *BusinessPermission) GetDeleteBusiness() bool {
	if x != nil {
		return x.DeleteBusiness
	}
	return false
}

type BusinessUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BusinessId          string              `protobuf:"bytes,2,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	UserId              string              `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Active              bool                `protobuf:"varint,4,opt,name=active,proto3" json:"active,omitempty"`
	Role                string              `protobuf:"bytes,5,opt,name=role,proto3" json:"role,omitempty"`
	BusinessPermissions *BusinessPermission `protobuf:"bytes,6,opt,name=business_permissions,json=businessPermissions,proto3" json:"business_permissions,omitempty"`
	CreatedAt           string              `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt           string              `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *BusinessUser) Reset() {
	*x = BusinessUser{}
	mi := &file_business_user_v1_business_user_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BusinessUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusinessUser) ProtoMessage() {}

func (x *BusinessUser) ProtoReflect() protoreflect.Message {
	mi := &file_business_user_v1_business_user_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusinessUser.ProtoReflect.Descriptor instead.
func (*BusinessUser) Descriptor() ([]byte, []int) {
	return file_business_user_v1_business_user_proto_rawDescGZIP(), []int{1}
}

func (x *BusinessUser) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BusinessUser) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

func (x *BusinessUser) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *BusinessUser) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *BusinessUser) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *BusinessUser) GetBusinessPermissions() *BusinessPermission {
	if x != nil {
		return x.BusinessPermissions
	}
	return nil
}

func (x *BusinessUser) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *BusinessUser) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type CreateBusinessUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessUser *BusinessUser `protobuf:"bytes,1,opt,name=business_user,json=businessUser,proto3" json:"business_user,omitempty"`
}

func (x *CreateBusinessUserRequest) Reset() {
	*x = CreateBusinessUserRequest{}
	mi := &file_business_user_v1_business_user_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBusinessUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBusinessUserRequest) ProtoMessage() {}

func (x *CreateBusinessUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_business_user_v1_business_user_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBusinessUserRequest.ProtoReflect.Descriptor instead.
func (*CreateBusinessUserRequest) Descriptor() ([]byte, []int) {
	return file_business_user_v1_business_user_proto_rawDescGZIP(), []int{2}
}

func (x *CreateBusinessUserRequest) GetBusinessUser() *BusinessUser {
	if x != nil {
		return x.BusinessUser
	}
	return nil
}

type CreateBusinessUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateBusinessUserResponse) Reset() {
	*x = CreateBusinessUserResponse{}
	mi := &file_business_user_v1_business_user_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBusinessUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBusinessUserResponse) ProtoMessage() {}

func (x *CreateBusinessUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_business_user_v1_business_user_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBusinessUserResponse.ProtoReflect.Descriptor instead.
func (*CreateBusinessUserResponse) Descriptor() ([]byte, []int) {
	return file_business_user_v1_business_user_proto_rawDescGZIP(), []int{3}
}

func (x *CreateBusinessUserResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetBusinessUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetBusinessUserRequest) Reset() {
	*x = GetBusinessUserRequest{}
	mi := &file_business_user_v1_business_user_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBusinessUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessUserRequest) ProtoMessage() {}

func (x *GetBusinessUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_business_user_v1_business_user_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessUserRequest.ProtoReflect.Descriptor instead.
func (*GetBusinessUserRequest) Descriptor() ([]byte, []int) {
	return file_business_user_v1_business_user_proto_rawDescGZIP(), []int{4}
}

func (x *GetBusinessUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetBusinessUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Business            *v1.Business        `protobuf:"bytes,2,opt,name=business,proto3" json:"business,omitempty"`
	User                *v11.User           `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Active              bool                `protobuf:"varint,4,opt,name=active,proto3" json:"active,omitempty"`
	BusinessPermissions *BusinessPermission `protobuf:"bytes,5,opt,name=business_permissions,json=businessPermissions,proto3" json:"business_permissions,omitempty"`
	CreatedAt           string              `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt           string              `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *GetBusinessUserResponse) Reset() {
	*x = GetBusinessUserResponse{}
	mi := &file_business_user_v1_business_user_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBusinessUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessUserResponse) ProtoMessage() {}

func (x *GetBusinessUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_business_user_v1_business_user_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessUserResponse.ProtoReflect.Descriptor instead.
func (*GetBusinessUserResponse) Descriptor() ([]byte, []int) {
	return file_business_user_v1_business_user_proto_rawDescGZIP(), []int{5}
}

func (x *GetBusinessUserResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetBusinessUserResponse) GetBusiness() *v1.Business {
	if x != nil {
		return x.Business
	}
	return nil
}

func (x *GetBusinessUserResponse) GetUser() *v11.User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *GetBusinessUserResponse) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *GetBusinessUserResponse) GetBusinessPermissions() *BusinessPermission {
	if x != nil {
		return x.BusinessPermissions
	}
	return nil
}

func (x *GetBusinessUserResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GetBusinessUserResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type UpdateBusinessUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessUser *BusinessUser `protobuf:"bytes,1,opt,name=business_user,json=businessUser,proto3" json:"business_user,omitempty"`
}

func (x *UpdateBusinessUserRequest) Reset() {
	*x = UpdateBusinessUserRequest{}
	mi := &file_business_user_v1_business_user_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBusinessUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBusinessUserRequest) ProtoMessage() {}

func (x *UpdateBusinessUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_business_user_v1_business_user_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBusinessUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateBusinessUserRequest) Descriptor() ([]byte, []int) {
	return file_business_user_v1_business_user_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateBusinessUserRequest) GetBusinessUser() *BusinessUser {
	if x != nil {
		return x.BusinessUser
	}
	return nil
}

type UpdateBusinessUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessUser *BusinessUser `protobuf:"bytes,1,opt,name=business_user,json=businessUser,proto3" json:"business_user,omitempty"`
}

func (x *UpdateBusinessUserResponse) Reset() {
	*x = UpdateBusinessUserResponse{}
	mi := &file_business_user_v1_business_user_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBusinessUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBusinessUserResponse) ProtoMessage() {}

func (x *UpdateBusinessUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_business_user_v1_business_user_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBusinessUserResponse.ProtoReflect.Descriptor instead.
func (*UpdateBusinessUserResponse) Descriptor() ([]byte, []int) {
	return file_business_user_v1_business_user_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateBusinessUserResponse) GetBusinessUser() *BusinessUser {
	if x != nil {
		return x.BusinessUser
	}
	return nil
}

type DeleteBusinessUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteBusinessUserRequest) Reset() {
	*x = DeleteBusinessUserRequest{}
	mi := &file_business_user_v1_business_user_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBusinessUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBusinessUserRequest) ProtoMessage() {}

func (x *DeleteBusinessUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_business_user_v1_business_user_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBusinessUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteBusinessUserRequest) Descriptor() ([]byte, []int) {
	return file_business_user_v1_business_user_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteBusinessUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteBusinessUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteBusinessUserResponse) Reset() {
	*x = DeleteBusinessUserResponse{}
	mi := &file_business_user_v1_business_user_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBusinessUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBusinessUserResponse) ProtoMessage() {}

func (x *DeleteBusinessUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_business_user_v1_business_user_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBusinessUserResponse.ProtoReflect.Descriptor instead.
func (*DeleteBusinessUserResponse) Descriptor() ([]byte, []int) {
	return file_business_user_v1_business_user_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteBusinessUserResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_business_user_v1_business_user_proto protoreflect.FileDescriptor

var file_business_user_v1_business_user_proto_rawDesc = []byte{
	0x0a, 0x24, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2f,
	0x76, 0x31, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc0, 0x01, 0x0a, 0x12, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x24, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x5f, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x76, 0x69, 0x65, 0x77,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x19, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x65, 0x64, 0x69, 0x74, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x22, 0x9b, 0x02, 0x0a, 0x0c,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x12, 0x57, 0x0a, 0x14, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x60, 0x0a, 0x19, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x0d, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0c, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x22, 0x2c, 0x0a, 0x1a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x28, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0xae, 0x02, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x31, 0x0a, 0x08, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x08, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x12, 0x21, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x57, 0x0a,
	0x14, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x13, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0x60, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x43, 0x0a, 0x0d, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x22, 0x61, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0d, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0c, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x22, 0x2b, 0x0a, 0x19, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x36, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2a, 0x42,
	0x0a, 0x0c, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0f,
	0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x41,
	0x4e, 0x41, 0x47, 0x45, 0x52, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x54, 0x41, 0x46, 0x46,
	0x10, 0x03, 0x32, 0xd0, 0x03, 0x0a, 0x13, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6f, 0x0a, 0x12, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x2b, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x12, 0x28,
	0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2b, 0x2e, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2b, 0x2e, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xb5, 0x01, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x11,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x2d, 0x73, 0x61, 0x62, 0x69, 0x74, 0x6f, 0x75, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x2f, 0x76, 0x31, 0x3b, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x56, 0x31, 0xa2, 0x02, 0x03, 0x42, 0x58, 0x58, 0xaa, 0x02, 0x0f, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0f, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1b, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x5c, 0x56, 0x31, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x10, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_business_user_v1_business_user_proto_rawDescOnce sync.Once
	file_business_user_v1_business_user_proto_rawDescData = file_business_user_v1_business_user_proto_rawDesc
)

func file_business_user_v1_business_user_proto_rawDescGZIP() []byte {
	file_business_user_v1_business_user_proto_rawDescOnce.Do(func() {
		file_business_user_v1_business_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_business_user_v1_business_user_proto_rawDescData)
	})
	return file_business_user_v1_business_user_proto_rawDescData
}

var file_business_user_v1_business_user_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_business_user_v1_business_user_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_business_user_v1_business_user_proto_goTypes = []any{
	(BusinessRole)(0),                  // 0: business_user.v1.BusinessRole
	(*BusinessPermission)(nil),         // 1: business_user.v1.BusinessPermission
	(*BusinessUser)(nil),               // 2: business_user.v1.BusinessUser
	(*CreateBusinessUserRequest)(nil),  // 3: business_user.v1.CreateBusinessUserRequest
	(*CreateBusinessUserResponse)(nil), // 4: business_user.v1.CreateBusinessUserResponse
	(*GetBusinessUserRequest)(nil),     // 5: business_user.v1.GetBusinessUserRequest
	(*GetBusinessUserResponse)(nil),    // 6: business_user.v1.GetBusinessUserResponse
	(*UpdateBusinessUserRequest)(nil),  // 7: business_user.v1.UpdateBusinessUserRequest
	(*UpdateBusinessUserResponse)(nil), // 8: business_user.v1.UpdateBusinessUserResponse
	(*DeleteBusinessUserRequest)(nil),  // 9: business_user.v1.DeleteBusinessUserRequest
	(*DeleteBusinessUserResponse)(nil), // 10: business_user.v1.DeleteBusinessUserResponse
	(*v1.Business)(nil),                // 11: business.v1.Business
	(*v11.User)(nil),                   // 12: user.v1.User
}
var file_business_user_v1_business_user_proto_depIdxs = []int32{
	1,  // 0: business_user.v1.BusinessUser.business_permissions:type_name -> business_user.v1.BusinessPermission
	2,  // 1: business_user.v1.CreateBusinessUserRequest.business_user:type_name -> business_user.v1.BusinessUser
	11, // 2: business_user.v1.GetBusinessUserResponse.business:type_name -> business.v1.Business
	12, // 3: business_user.v1.GetBusinessUserResponse.user:type_name -> user.v1.User
	1,  // 4: business_user.v1.GetBusinessUserResponse.business_permissions:type_name -> business_user.v1.BusinessPermission
	2,  // 5: business_user.v1.UpdateBusinessUserRequest.business_user:type_name -> business_user.v1.BusinessUser
	2,  // 6: business_user.v1.UpdateBusinessUserResponse.business_user:type_name -> business_user.v1.BusinessUser
	3,  // 7: business_user.v1.BusinessUserService.CreateBusinessUser:input_type -> business_user.v1.CreateBusinessUserRequest
	5,  // 8: business_user.v1.BusinessUserService.GetBusinessUser:input_type -> business_user.v1.GetBusinessUserRequest
	7,  // 9: business_user.v1.BusinessUserService.UpdateBusinessUser:input_type -> business_user.v1.UpdateBusinessUserRequest
	9,  // 10: business_user.v1.BusinessUserService.DeleteBusinessUser:input_type -> business_user.v1.DeleteBusinessUserRequest
	4,  // 11: business_user.v1.BusinessUserService.CreateBusinessUser:output_type -> business_user.v1.CreateBusinessUserResponse
	6,  // 12: business_user.v1.BusinessUserService.GetBusinessUser:output_type -> business_user.v1.GetBusinessUserResponse
	8,  // 13: business_user.v1.BusinessUserService.UpdateBusinessUser:output_type -> business_user.v1.UpdateBusinessUserResponse
	10, // 14: business_user.v1.BusinessUserService.DeleteBusinessUser:output_type -> business_user.v1.DeleteBusinessUserResponse
	11, // [11:15] is the sub-list for method output_type
	7,  // [7:11] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_business_user_v1_business_user_proto_init() }
func file_business_user_v1_business_user_proto_init() {
	if File_business_user_v1_business_user_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_business_user_v1_business_user_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_business_user_v1_business_user_proto_goTypes,
		DependencyIndexes: file_business_user_v1_business_user_proto_depIdxs,
		EnumInfos:         file_business_user_v1_business_user_proto_enumTypes,
		MessageInfos:      file_business_user_v1_business_user_proto_msgTypes,
	}.Build()
	File_business_user_v1_business_user_proto = out.File
	file_business_user_v1_business_user_proto_rawDesc = nil
	file_business_user_v1_business_user_proto_goTypes = nil
	file_business_user_v1_business_user_proto_depIdxs = nil
}
