// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: business_article/v1/business_article.proto

package businessArticleV1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	v1 "sabitou/proto/article/v1"
	v11 "sabitou/proto/business/v1"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BusinessArticle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BusinessId string  `protobuf:"bytes,7,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	ArticleId  string  `protobuf:"bytes,2,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"`
	Price      float64 `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`
	CreatedAt  string  `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt  string  `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *BusinessArticle) Reset() {
	*x = BusinessArticle{}
	mi := &file_business_article_v1_business_article_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BusinessArticle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusinessArticle) ProtoMessage() {}

func (x *BusinessArticle) ProtoReflect() protoreflect.Message {
	mi := &file_business_article_v1_business_article_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusinessArticle.ProtoReflect.Descriptor instead.
func (*BusinessArticle) Descriptor() ([]byte, []int) {
	return file_business_article_v1_business_article_proto_rawDescGZIP(), []int{0}
}

func (x *BusinessArticle) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BusinessArticle) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

func (x *BusinessArticle) GetArticleId() string {
	if x != nil {
		return x.ArticleId
	}
	return ""
}

func (x *BusinessArticle) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *BusinessArticle) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *BusinessArticle) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type CreateBusinessArticleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessArticle *BusinessArticle `protobuf:"bytes,1,opt,name=business_article,json=businessArticle,proto3" json:"business_article,omitempty"`
}

func (x *CreateBusinessArticleRequest) Reset() {
	*x = CreateBusinessArticleRequest{}
	mi := &file_business_article_v1_business_article_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBusinessArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBusinessArticleRequest) ProtoMessage() {}

func (x *CreateBusinessArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_business_article_v1_business_article_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBusinessArticleRequest.ProtoReflect.Descriptor instead.
func (*CreateBusinessArticleRequest) Descriptor() ([]byte, []int) {
	return file_business_article_v1_business_article_proto_rawDescGZIP(), []int{1}
}

func (x *CreateBusinessArticleRequest) GetBusinessArticle() *BusinessArticle {
	if x != nil {
		return x.BusinessArticle
	}
	return nil
}

type CreateBusinessArticleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateBusinessArticleResponse) Reset() {
	*x = CreateBusinessArticleResponse{}
	mi := &file_business_article_v1_business_article_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBusinessArticleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBusinessArticleResponse) ProtoMessage() {}

func (x *CreateBusinessArticleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_business_article_v1_business_article_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBusinessArticleResponse.ProtoReflect.Descriptor instead.
func (*CreateBusinessArticleResponse) Descriptor() ([]byte, []int) {
	return file_business_article_v1_business_article_proto_rawDescGZIP(), []int{2}
}

func (x *CreateBusinessArticleResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetBusinessArticleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetBusinessArticleRequest) Reset() {
	*x = GetBusinessArticleRequest{}
	mi := &file_business_article_v1_business_article_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBusinessArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessArticleRequest) ProtoMessage() {}

func (x *GetBusinessArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_business_article_v1_business_article_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessArticleRequest.ProtoReflect.Descriptor instead.
func (*GetBusinessArticleRequest) Descriptor() ([]byte, []int) {
	return file_business_article_v1_business_article_proto_rawDescGZIP(), []int{3}
}

func (x *GetBusinessArticleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetBusinessArticleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Article   *v1.Article   `protobuf:"bytes,2,opt,name=article,proto3" json:"article,omitempty"`
	Business  *v11.Business `protobuf:"bytes,7,opt,name=business,proto3" json:"business,omitempty"`
	Price     float64       `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`
	CreatedAt string        `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt string        `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *GetBusinessArticleResponse) Reset() {
	*x = GetBusinessArticleResponse{}
	mi := &file_business_article_v1_business_article_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBusinessArticleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessArticleResponse) ProtoMessage() {}

func (x *GetBusinessArticleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_business_article_v1_business_article_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessArticleResponse.ProtoReflect.Descriptor instead.
func (*GetBusinessArticleResponse) Descriptor() ([]byte, []int) {
	return file_business_article_v1_business_article_proto_rawDescGZIP(), []int{4}
}

func (x *GetBusinessArticleResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetBusinessArticleResponse) GetArticle() *v1.Article {
	if x != nil {
		return x.Article
	}
	return nil
}

func (x *GetBusinessArticleResponse) GetBusiness() *v11.Business {
	if x != nil {
		return x.Business
	}
	return nil
}

func (x *GetBusinessArticleResponse) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *GetBusinessArticleResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GetBusinessArticleResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type UpdateBusinessArticleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessArticle *BusinessArticle `protobuf:"bytes,1,opt,name=business_article,json=businessArticle,proto3" json:"business_article,omitempty"`
}

func (x *UpdateBusinessArticleRequest) Reset() {
	*x = UpdateBusinessArticleRequest{}
	mi := &file_business_article_v1_business_article_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBusinessArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBusinessArticleRequest) ProtoMessage() {}

func (x *UpdateBusinessArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_business_article_v1_business_article_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBusinessArticleRequest.ProtoReflect.Descriptor instead.
func (*UpdateBusinessArticleRequest) Descriptor() ([]byte, []int) {
	return file_business_article_v1_business_article_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateBusinessArticleRequest) GetBusinessArticle() *BusinessArticle {
	if x != nil {
		return x.BusinessArticle
	}
	return nil
}

type UpdateBusinessArticleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessArticle *BusinessArticle `protobuf:"bytes,1,opt,name=business_article,json=businessArticle,proto3" json:"business_article,omitempty"`
}

func (x *UpdateBusinessArticleResponse) Reset() {
	*x = UpdateBusinessArticleResponse{}
	mi := &file_business_article_v1_business_article_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBusinessArticleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBusinessArticleResponse) ProtoMessage() {}

func (x *UpdateBusinessArticleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_business_article_v1_business_article_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBusinessArticleResponse.ProtoReflect.Descriptor instead.
func (*UpdateBusinessArticleResponse) Descriptor() ([]byte, []int) {
	return file_business_article_v1_business_article_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateBusinessArticleResponse) GetBusinessArticle() *BusinessArticle {
	if x != nil {
		return x.BusinessArticle
	}
	return nil
}

type DeleteBusinessArticleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteBusinessArticleRequest) Reset() {
	*x = DeleteBusinessArticleRequest{}
	mi := &file_business_article_v1_business_article_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBusinessArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBusinessArticleRequest) ProtoMessage() {}

func (x *DeleteBusinessArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_business_article_v1_business_article_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBusinessArticleRequest.ProtoReflect.Descriptor instead.
func (*DeleteBusinessArticleRequest) Descriptor() ([]byte, []int) {
	return file_business_article_v1_business_article_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteBusinessArticleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteBusinessArticleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteBusinessArticleResponse) Reset() {
	*x = DeleteBusinessArticleResponse{}
	mi := &file_business_article_v1_business_article_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBusinessArticleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBusinessArticleResponse) ProtoMessage() {}

func (x *DeleteBusinessArticleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_business_article_v1_business_article_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBusinessArticleResponse.ProtoReflect.Descriptor instead.
func (*DeleteBusinessArticleResponse) Descriptor() ([]byte, []int) {
	return file_business_article_v1_business_article_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteBusinessArticleResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_business_article_v1_business_article_proto protoreflect.FileDescriptor

var file_business_article_v1_business_article_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x1a, 0x18, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb5, 0x01, 0x0a, 0x0f, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x6f, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x4f, 0x0a, 0x10, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52,
	0x0f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x22, 0x2f, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x2b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xe2,
	0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2d, 0x0a,
	0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x52, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x31, 0x0a, 0x08,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x08, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x6f, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x10, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x52, 0x0f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x22, 0x70, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x10, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x0f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x22, 0x2e, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x32, 0x8f, 0x04, 0x0a, 0x16, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7e, 0x0a, 0x15,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x31, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x75, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x12, 0x2e, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x7e, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x31, 0x2e, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x32, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x7e, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x31, 0x2e, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x32, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0xcd, 0x01, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x42,
	0x14, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x33, 0x73, 0x61, 0x62, 0x69, 0x74, 0x6f, 0x75,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x56, 0x31, 0xa2, 0x02, 0x03, 0x42,
	0x58, 0x58, 0xaa, 0x02, 0x12, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x12, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1e, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5c, 0x56,
	0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x13,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x3a,
	0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_business_article_v1_business_article_proto_rawDescOnce sync.Once
	file_business_article_v1_business_article_proto_rawDescData = file_business_article_v1_business_article_proto_rawDesc
)

func file_business_article_v1_business_article_proto_rawDescGZIP() []byte {
	file_business_article_v1_business_article_proto_rawDescOnce.Do(func() {
		file_business_article_v1_business_article_proto_rawDescData = protoimpl.X.CompressGZIP(file_business_article_v1_business_article_proto_rawDescData)
	})
	return file_business_article_v1_business_article_proto_rawDescData
}

var file_business_article_v1_business_article_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_business_article_v1_business_article_proto_goTypes = []any{
	(*BusinessArticle)(nil),               // 0: business_article.v1.BusinessArticle
	(*CreateBusinessArticleRequest)(nil),  // 1: business_article.v1.CreateBusinessArticleRequest
	(*CreateBusinessArticleResponse)(nil), // 2: business_article.v1.CreateBusinessArticleResponse
	(*GetBusinessArticleRequest)(nil),     // 3: business_article.v1.GetBusinessArticleRequest
	(*GetBusinessArticleResponse)(nil),    // 4: business_article.v1.GetBusinessArticleResponse
	(*UpdateBusinessArticleRequest)(nil),  // 5: business_article.v1.UpdateBusinessArticleRequest
	(*UpdateBusinessArticleResponse)(nil), // 6: business_article.v1.UpdateBusinessArticleResponse
	(*DeleteBusinessArticleRequest)(nil),  // 7: business_article.v1.DeleteBusinessArticleRequest
	(*DeleteBusinessArticleResponse)(nil), // 8: business_article.v1.DeleteBusinessArticleResponse
	(*v1.Article)(nil),                    // 9: article.v1.Article
	(*v11.Business)(nil),                  // 10: business.v1.Business
}
var file_business_article_v1_business_article_proto_depIdxs = []int32{
	0,  // 0: business_article.v1.CreateBusinessArticleRequest.business_article:type_name -> business_article.v1.BusinessArticle
	9,  // 1: business_article.v1.GetBusinessArticleResponse.article:type_name -> article.v1.Article
	10, // 2: business_article.v1.GetBusinessArticleResponse.business:type_name -> business.v1.Business
	0,  // 3: business_article.v1.UpdateBusinessArticleRequest.business_article:type_name -> business_article.v1.BusinessArticle
	0,  // 4: business_article.v1.UpdateBusinessArticleResponse.business_article:type_name -> business_article.v1.BusinessArticle
	1,  // 5: business_article.v1.BusinessArticleService.CreateBusinessArticle:input_type -> business_article.v1.CreateBusinessArticleRequest
	3,  // 6: business_article.v1.BusinessArticleService.GetBusinessArticle:input_type -> business_article.v1.GetBusinessArticleRequest
	5,  // 7: business_article.v1.BusinessArticleService.UpdateBusinessArticle:input_type -> business_article.v1.UpdateBusinessArticleRequest
	7,  // 8: business_article.v1.BusinessArticleService.DeleteBusinessArticle:input_type -> business_article.v1.DeleteBusinessArticleRequest
	2,  // 9: business_article.v1.BusinessArticleService.CreateBusinessArticle:output_type -> business_article.v1.CreateBusinessArticleResponse
	4,  // 10: business_article.v1.BusinessArticleService.GetBusinessArticle:output_type -> business_article.v1.GetBusinessArticleResponse
	6,  // 11: business_article.v1.BusinessArticleService.UpdateBusinessArticle:output_type -> business_article.v1.UpdateBusinessArticleResponse
	8,  // 12: business_article.v1.BusinessArticleService.DeleteBusinessArticle:output_type -> business_article.v1.DeleteBusinessArticleResponse
	9,  // [9:13] is the sub-list for method output_type
	5,  // [5:9] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_business_article_v1_business_article_proto_init() }
func file_business_article_v1_business_article_proto_init() {
	if File_business_article_v1_business_article_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_business_article_v1_business_article_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_business_article_v1_business_article_proto_goTypes,
		DependencyIndexes: file_business_article_v1_business_article_proto_depIdxs,
		MessageInfos:      file_business_article_v1_business_article_proto_msgTypes,
	}.Build()
	File_business_article_v1_business_article_proto = out.File
	file_business_article_v1_business_article_proto_rawDesc = nil
	file_business_article_v1_business_article_proto_goTypes = nil
	file_business_article_v1_business_article_proto_depIdxs = nil
}
