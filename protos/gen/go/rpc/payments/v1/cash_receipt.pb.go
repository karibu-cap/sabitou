// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: payments/v1/cash_receipt.proto

package paymentsv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/karibu-cap/sabitou/protos/gen/go/rpc/financial/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// CashReceipt (Bon de Caisse)
// Issued at point of sale for immediate payment.
// Combines invoice + payment proof in one document.
// Common in retail where customer pays immediately.
//
// Fix: Items include batch_id for lot-specific sales (e.g., FIFO for perishables).
//
// Example - Retail store sale:
//
//	receipt_id: "CASH-2025-001"
//	cashier_user_id: "USR-005"
//	customer_id: "CMP-003" (can be null for walk-in)
//	store_id: "WH-002" (retail store)
//	items: [1x PRD-001 @ 450000]
//	subtotal: 450000
//	tax: 90000
//	total: 540000
//	amount_paid: 540000
//	payment_method: PAYMENT_METHOD_CASH
//
// INVENTORY IMPACT: -1 PRD-001 from WH-002
// ACCOUNTING IMPACT: Immediate revenue + payment
type CashReceipt struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	DocumentId      string                 `protobuf:"bytes,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`            // "CASH-2025-001"
	CashierUserId   string                 `protobuf:"bytes,2,opt,name=cashier_user_id,json=cashierUserId,proto3" json:"cashier_user_id,omitempty"` // Who processed sale
	CustomerId      string                 `protobuf:"bytes,3,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`            // Can be null for anonymous
	StoreId         string                 `protobuf:"bytes,4,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`                     // Which location/store
	Items           []*v1.InvoiceLineItem  `protobuf:"bytes,5,rep,name=items,proto3" json:"items,omitempty"`
	Subtotal        int64                  `protobuf:"varint,6,opt,name=subtotal,proto3" json:"subtotal,omitempty"`
	TaxAmount       int64                  `protobuf:"varint,7,opt,name=tax_amount,json=taxAmount,proto3" json:"tax_amount,omitempty"`
	TotalAmount     int64                  `protobuf:"varint,8,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	AmountPaid      int64                  `protobuf:"varint,9,opt,name=amount_paid,json=amountPaid,proto3" json:"amount_paid,omitempty"`     // What customer gave
	ChangeGiven     int64                  `protobuf:"varint,10,opt,name=change_given,json=changeGiven,proto3" json:"change_given,omitempty"` // amount_paid - total_amount
	Currency        string                 `protobuf:"bytes,11,opt,name=currency,proto3" json:"currency,omitempty"`
	PaymentIds      []string               `protobuf:"bytes,12,rep,name=payment_ids,json=paymentIds,proto3" json:"payment_ids,omitempty"`
	TransactionTime *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=transaction_time,json=transactionTime,proto3" json:"transaction_time,omitempty"`
	Notes           string                 `protobuf:"bytes,14,opt,name=notes,proto3" json:"notes,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CashReceipt) Reset() {
	*x = CashReceipt{}
	mi := &file_payments_v1_cash_receipt_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CashReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashReceipt) ProtoMessage() {}

func (x *CashReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_payments_v1_cash_receipt_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashReceipt.ProtoReflect.Descriptor instead.
func (*CashReceipt) Descriptor() ([]byte, []int) {
	return file_payments_v1_cash_receipt_proto_rawDescGZIP(), []int{0}
}

func (x *CashReceipt) GetDocumentId() string {
	if x != nil {
		return x.DocumentId
	}
	return ""
}

func (x *CashReceipt) GetCashierUserId() string {
	if x != nil {
		return x.CashierUserId
	}
	return ""
}

func (x *CashReceipt) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *CashReceipt) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *CashReceipt) GetItems() []*v1.InvoiceLineItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *CashReceipt) GetSubtotal() int64 {
	if x != nil {
		return x.Subtotal
	}
	return 0
}

func (x *CashReceipt) GetTaxAmount() int64 {
	if x != nil {
		return x.TaxAmount
	}
	return 0
}

func (x *CashReceipt) GetTotalAmount() int64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *CashReceipt) GetAmountPaid() int64 {
	if x != nil {
		return x.AmountPaid
	}
	return 0
}

func (x *CashReceipt) GetChangeGiven() int64 {
	if x != nil {
		return x.ChangeGiven
	}
	return 0
}

func (x *CashReceipt) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *CashReceipt) GetPaymentIds() []string {
	if x != nil {
		return x.PaymentIds
	}
	return nil
}

func (x *CashReceipt) GetTransactionTime() *timestamppb.Timestamp {
	if x != nil {
		return x.TransactionTime
	}
	return nil
}

func (x *CashReceipt) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

var File_payments_v1_cash_receipt_proto protoreflect.FileDescriptor

const file_payments_v1_cash_receipt_proto_rawDesc = "" +
	"\n" +
	"\x1epayments/v1/cash_receipt.proto\x12\vpayments.v1\x1a\x1bbuf/validate/validate.proto\x1a\"financial/v1/financial_utils.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1fpayments/v1/payment_utils.proto\"\x8b\x04\n" +
	"\vCashReceipt\x12'\n" +
	"\vdocument_id\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\n" +
	"documentId\x12&\n" +
	"\x0fcashier_user_id\x18\x02 \x01(\tR\rcashierUserId\x12\x1f\n" +
	"\vcustomer_id\x18\x03 \x01(\tR\n" +
	"customerId\x12\x19\n" +
	"\bstore_id\x18\x04 \x01(\tR\astoreId\x123\n" +
	"\x05items\x18\x05 \x03(\v2\x1d.financial.v1.InvoiceLineItemR\x05items\x12\x1a\n" +
	"\bsubtotal\x18\x06 \x01(\x03R\bsubtotal\x12\x1d\n" +
	"\n" +
	"tax_amount\x18\a \x01(\x03R\ttaxAmount\x12!\n" +
	"\ftotal_amount\x18\b \x01(\x03R\vtotalAmount\x12\x1f\n" +
	"\vamount_paid\x18\t \x01(\x03R\n" +
	"amountPaid\x12!\n" +
	"\fchange_given\x18\n" +
	" \x01(\x03R\vchangeGiven\x12\x1a\n" +
	"\bcurrency\x18\v \x01(\tR\bcurrency\x12\x1f\n" +
	"\vpayment_ids\x18\f \x03(\tR\n" +
	"paymentIds\x12E\n" +
	"\x10transaction_time\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\x0ftransactionTime\x12\x14\n" +
	"\x05notes\x18\x0e \x01(\tR\x05notesB\xb8\x01\n" +
	"\x0fcom.payments.v1B\x10CashReceiptProtoP\x01ZFgithub.com/karibu-cap/sabitou/protos/gen/go/rpc/payments/v1;paymentsv1\xa2\x02\x03PXX\xaa\x02\vPayments.V1\xca\x02\vPayments\\V1\xe2\x02\x17Payments\\V1\\GPBMetadata\xea\x02\fPayments::V1b\x06proto3"

var (
	file_payments_v1_cash_receipt_proto_rawDescOnce sync.Once
	file_payments_v1_cash_receipt_proto_rawDescData []byte
)

func file_payments_v1_cash_receipt_proto_rawDescGZIP() []byte {
	file_payments_v1_cash_receipt_proto_rawDescOnce.Do(func() {
		file_payments_v1_cash_receipt_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_payments_v1_cash_receipt_proto_rawDesc), len(file_payments_v1_cash_receipt_proto_rawDesc)))
	})
	return file_payments_v1_cash_receipt_proto_rawDescData
}

var file_payments_v1_cash_receipt_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_payments_v1_cash_receipt_proto_goTypes = []any{
	(*CashReceipt)(nil),           // 0: payments.v1.CashReceipt
	(*v1.InvoiceLineItem)(nil),    // 1: financial.v1.InvoiceLineItem
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_payments_v1_cash_receipt_proto_depIdxs = []int32{
	1, // 0: payments.v1.CashReceipt.items:type_name -> financial.v1.InvoiceLineItem
	2, // 1: payments.v1.CashReceipt.transaction_time:type_name -> google.protobuf.Timestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_payments_v1_cash_receipt_proto_init() }
func file_payments_v1_cash_receipt_proto_init() {
	if File_payments_v1_cash_receipt_proto != nil {
		return
	}
	file_payments_v1_payment_utils_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_payments_v1_cash_receipt_proto_rawDesc), len(file_payments_v1_cash_receipt_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_payments_v1_cash_receipt_proto_goTypes,
		DependencyIndexes: file_payments_v1_cash_receipt_proto_depIdxs,
		MessageInfos:      file_payments_v1_cash_receipt_proto_msgTypes,
	}.Build()
	File_payments_v1_cash_receipt_proto = out.File
	file_payments_v1_cash_receipt_proto_goTypes = nil
	file_payments_v1_cash_receipt_proto_depIdxs = nil
}
