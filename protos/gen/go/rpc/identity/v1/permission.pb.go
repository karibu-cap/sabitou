// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: identity/v1/permission.proto

package identityv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ResourceActionType int32

const (
	ResourceActionType_RESOURCE_ACTION_TYPE_UNSPECIFIED ResourceActionType = 0
	// Can read the resource.
	ResourceActionType_RESOURCE_ACTION_TYPE_READ ResourceActionType = 1
	// Can read and (create or add) the resource.
	ResourceActionType_RESOURCE_ACTION_TYPE_ADD ResourceActionType = 2
	// Can read, create, update the resource.
	ResourceActionType_RESOURCE_ACTION_TYPE_UPDATE ResourceActionType = 3
	// Can read, create, update, delete the resource.
	ResourceActionType_RESOURCE_ACTION_TYPE_REMOVE ResourceActionType = 4
)

// Enum value maps for ResourceActionType.
var (
	ResourceActionType_name = map[int32]string{
		0: "RESOURCE_ACTION_TYPE_UNSPECIFIED",
		1: "RESOURCE_ACTION_TYPE_READ",
		2: "RESOURCE_ACTION_TYPE_ADD",
		3: "RESOURCE_ACTION_TYPE_UPDATE",
		4: "RESOURCE_ACTION_TYPE_REMOVE",
	}
	ResourceActionType_value = map[string]int32{
		"RESOURCE_ACTION_TYPE_UNSPECIFIED": 0,
		"RESOURCE_ACTION_TYPE_READ":        1,
		"RESOURCE_ACTION_TYPE_ADD":         2,
		"RESOURCE_ACTION_TYPE_UPDATE":      3,
		"RESOURCE_ACTION_TYPE_REMOVE":      4,
	}
)

func (x ResourceActionType) Enum() *ResourceActionType {
	p := new(ResourceActionType)
	*p = x
	return p
}

func (x ResourceActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_identity_v1_permission_proto_enumTypes[0].Descriptor()
}

func (ResourceActionType) Type() protoreflect.EnumType {
	return &file_identity_v1_permission_proto_enumTypes[0]
}

func (x ResourceActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceActionType.Descriptor instead.
func (ResourceActionType) EnumDescriptor() ([]byte, []int) {
	return file_identity_v1_permission_proto_rawDescGZIP(), []int{0}
}

type ResourceType int32

const (
	ResourceType_RESOURCE_TYPE_UNSPECIFIED       ResourceType = 0
	ResourceType_RESOURCE_TYPE_BUSINESS          ResourceType = 1
	ResourceType_RESOURCE_TYPE_BUSINESS_MEMBER   ResourceType = 2
	ResourceType_RESOURCE_TYPE_BUSINESS_SUPPLIER ResourceType = 4
	ResourceType_RESOURCE_TYPE_STORE             ResourceType = 5
	ResourceType_RESOURCE_TYPE_INVOICE           ResourceType = 6
	ResourceType_RESOURCE_TYPE_STORE_ORDER       ResourceType = 7
	ResourceType_RESOURCE_TYPE_SUPPLIER_ORDER    ResourceType = 8
	ResourceType_RESOURCE_TYPE_PRODUCT           ResourceType = 9
)

// Enum value maps for ResourceType.
var (
	ResourceType_name = map[int32]string{
		0: "RESOURCE_TYPE_UNSPECIFIED",
		1: "RESOURCE_TYPE_BUSINESS",
		2: "RESOURCE_TYPE_BUSINESS_MEMBER",
		4: "RESOURCE_TYPE_BUSINESS_SUPPLIER",
		5: "RESOURCE_TYPE_STORE",
		6: "RESOURCE_TYPE_INVOICE",
		7: "RESOURCE_TYPE_STORE_ORDER",
		8: "RESOURCE_TYPE_SUPPLIER_ORDER",
		9: "RESOURCE_TYPE_PRODUCT",
	}
	ResourceType_value = map[string]int32{
		"RESOURCE_TYPE_UNSPECIFIED":       0,
		"RESOURCE_TYPE_BUSINESS":          1,
		"RESOURCE_TYPE_BUSINESS_MEMBER":   2,
		"RESOURCE_TYPE_BUSINESS_SUPPLIER": 4,
		"RESOURCE_TYPE_STORE":             5,
		"RESOURCE_TYPE_INVOICE":           6,
		"RESOURCE_TYPE_STORE_ORDER":       7,
		"RESOURCE_TYPE_SUPPLIER_ORDER":    8,
		"RESOURCE_TYPE_PRODUCT":           9,
	}
)

func (x ResourceType) Enum() *ResourceType {
	p := new(ResourceType)
	*p = x
	return p
}

func (x ResourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_identity_v1_permission_proto_enumTypes[1].Descriptor()
}

func (ResourceType) Type() protoreflect.EnumType {
	return &file_identity_v1_permission_proto_enumTypes[1]
}

func (x ResourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceType.Descriptor instead.
func (ResourceType) EnumDescriptor() ([]byte, []int) {
	return file_identity_v1_permission_proto_rawDescGZIP(), []int{1}
}

type Permission struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	ResourceType ResourceType           `protobuf:"varint,1,opt,name=resource_type,json=resourceType,proto3,enum=identity.v1.ResourceType" json:"resource_type,omitempty"`
	// The resource_id is only specified when we want to restrict action on a specific resource.
	ResourceId *string `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3,oneof" json:"resource_id,omitempty"`
	// The action that the member can perform on the resource.
	ActionType    ResourceActionType `protobuf:"varint,3,opt,name=action_type,json=actionType,proto3,enum=identity.v1.ResourceActionType" json:"action_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Permission) Reset() {
	*x = Permission{}
	mi := &file_identity_v1_permission_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Permission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permission) ProtoMessage() {}

func (x *Permission) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v1_permission_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permission.ProtoReflect.Descriptor instead.
func (*Permission) Descriptor() ([]byte, []int) {
	return file_identity_v1_permission_proto_rawDescGZIP(), []int{0}
}

func (x *Permission) GetResourceType() ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return ResourceType_RESOURCE_TYPE_UNSPECIFIED
}

func (x *Permission) GetResourceId() string {
	if x != nil && x.ResourceId != nil {
		return *x.ResourceId
	}
	return ""
}

func (x *Permission) GetActionType() ResourceActionType {
	if x != nil {
		return x.ActionType
	}
	return ResourceActionType_RESOURCE_ACTION_TYPE_UNSPECIFIED
}

type PermissionsGroup struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The reference id to the permission group identifier.
	RefId *string `protobuf:"bytes,1,opt,name=ref_id,json=refId,proto3,oneof" json:"ref_id,omitempty"`
	// The name of the permission group. Generally the role of the group.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The description of the permission group.
	Description *string `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	// The permissions that the permission group has.
	Permissions []*Permission `protobuf:"bytes,4,rep,name=permissions,proto3" json:"permissions,omitempty"`
	// The unique identifier of the business.
	// must be set if the permission group is create by a business.
	BusinessId    *string `protobuf:"bytes,6,opt,name=business_id,json=businessId,proto3,oneof" json:"business_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PermissionsGroup) Reset() {
	*x = PermissionsGroup{}
	mi := &file_identity_v1_permission_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PermissionsGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionsGroup) ProtoMessage() {}

func (x *PermissionsGroup) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v1_permission_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionsGroup.ProtoReflect.Descriptor instead.
func (*PermissionsGroup) Descriptor() ([]byte, []int) {
	return file_identity_v1_permission_proto_rawDescGZIP(), []int{1}
}

func (x *PermissionsGroup) GetRefId() string {
	if x != nil && x.RefId != nil {
		return *x.RefId
	}
	return ""
}

func (x *PermissionsGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PermissionsGroup) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *PermissionsGroup) GetPermissions() []*Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *PermissionsGroup) GetBusinessId() string {
	if x != nil && x.BusinessId != nil {
		return *x.BusinessId
	}
	return ""
}

type CreatePermissionsGroupRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The permission group information to create.
	// Note:Only the fields that are set will be created.
	PermissionsGroup *PermissionsGroup `protobuf:"bytes,1,opt,name=permissions_group,json=permissionsGroup,proto3" json:"permissions_group,omitempty"`
	// The unique identifier of the business on which the permission group is created.
	BusinessId    string `protobuf:"bytes,2,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePermissionsGroupRequest) Reset() {
	*x = CreatePermissionsGroupRequest{}
	mi := &file_identity_v1_permission_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePermissionsGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePermissionsGroupRequest) ProtoMessage() {}

func (x *CreatePermissionsGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v1_permission_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePermissionsGroupRequest.ProtoReflect.Descriptor instead.
func (*CreatePermissionsGroupRequest) Descriptor() ([]byte, []int) {
	return file_identity_v1_permission_proto_rawDescGZIP(), []int{2}
}

func (x *CreatePermissionsGroupRequest) GetPermissionsGroup() *PermissionsGroup {
	if x != nil {
		return x.PermissionsGroup
	}
	return nil
}

func (x *CreatePermissionsGroupRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

type CreatePermissionsGroupResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the created permission group.
	PermissionGroupId string `protobuf:"bytes,1,opt,name=permission_group_id,json=permissionGroupId,proto3" json:"permission_group_id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CreatePermissionsGroupResponse) Reset() {
	*x = CreatePermissionsGroupResponse{}
	mi := &file_identity_v1_permission_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePermissionsGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePermissionsGroupResponse) ProtoMessage() {}

func (x *CreatePermissionsGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v1_permission_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePermissionsGroupResponse.ProtoReflect.Descriptor instead.
func (*CreatePermissionsGroupResponse) Descriptor() ([]byte, []int) {
	return file_identity_v1_permission_proto_rawDescGZIP(), []int{3}
}

func (x *CreatePermissionsGroupResponse) GetPermissionGroupId() string {
	if x != nil {
		return x.PermissionGroupId
	}
	return ""
}

type GetPermissionsGroupRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the permission group to retrieve.
	PermissionGroupId string `protobuf:"bytes,1,opt,name=permission_group_id,json=permissionGroupId,proto3" json:"permission_group_id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetPermissionsGroupRequest) Reset() {
	*x = GetPermissionsGroupRequest{}
	mi := &file_identity_v1_permission_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPermissionsGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermissionsGroupRequest) ProtoMessage() {}

func (x *GetPermissionsGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v1_permission_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermissionsGroupRequest.ProtoReflect.Descriptor instead.
func (*GetPermissionsGroupRequest) Descriptor() ([]byte, []int) {
	return file_identity_v1_permission_proto_rawDescGZIP(), []int{4}
}

func (x *GetPermissionsGroupRequest) GetPermissionGroupId() string {
	if x != nil {
		return x.PermissionGroupId
	}
	return ""
}

type GetPermissionsGroupResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The retrieved permission group data.
	PermissionsGroup *PermissionsGroup `protobuf:"bytes,1,opt,name=permissions_group,json=permissionsGroup,proto3" json:"permissions_group,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetPermissionsGroupResponse) Reset() {
	*x = GetPermissionsGroupResponse{}
	mi := &file_identity_v1_permission_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPermissionsGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermissionsGroupResponse) ProtoMessage() {}

func (x *GetPermissionsGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v1_permission_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermissionsGroupResponse.ProtoReflect.Descriptor instead.
func (*GetPermissionsGroupResponse) Descriptor() ([]byte, []int) {
	return file_identity_v1_permission_proto_rawDescGZIP(), []int{5}
}

func (x *GetPermissionsGroupResponse) GetPermissionsGroup() *PermissionsGroup {
	if x != nil {
		return x.PermissionsGroup
	}
	return nil
}

type UpdatePermissionsGroupRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The permission group id;
	PermissionsGroupId string `protobuf:"bytes,1,opt,name=permissions_group_id,json=permissionsGroupId,proto3" json:"permissions_group_id,omitempty"`
	// The unique identifier of the business.
	BusinessId string `protobuf:"bytes,6,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	// The name of the permission group. Generally the role of the group.
	Name *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// The description of the permission group.
	Description *string `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	// The permissions set to add.
	AddPermissions []*Permission `protobuf:"bytes,4,rep,name=add_permissions,json=addPermissions,proto3" json:"add_permissions,omitempty"`
	// The permissions set to remove.
	RemovePermissions []*Permission `protobuf:"bytes,5,rep,name=remove_permissions,json=removePermissions,proto3" json:"remove_permissions,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *UpdatePermissionsGroupRequest) Reset() {
	*x = UpdatePermissionsGroupRequest{}
	mi := &file_identity_v1_permission_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePermissionsGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePermissionsGroupRequest) ProtoMessage() {}

func (x *UpdatePermissionsGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v1_permission_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePermissionsGroupRequest.ProtoReflect.Descriptor instead.
func (*UpdatePermissionsGroupRequest) Descriptor() ([]byte, []int) {
	return file_identity_v1_permission_proto_rawDescGZIP(), []int{6}
}

func (x *UpdatePermissionsGroupRequest) GetPermissionsGroupId() string {
	if x != nil {
		return x.PermissionsGroupId
	}
	return ""
}

func (x *UpdatePermissionsGroupRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

func (x *UpdatePermissionsGroupRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdatePermissionsGroupRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *UpdatePermissionsGroupRequest) GetAddPermissions() []*Permission {
	if x != nil {
		return x.AddPermissions
	}
	return nil
}

func (x *UpdatePermissionsGroupRequest) GetRemovePermissions() []*Permission {
	if x != nil {
		return x.RemovePermissions
	}
	return nil
}

type UpdatePermissionsGroupResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the permission group was successfully updated.
	Success       bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePermissionsGroupResponse) Reset() {
	*x = UpdatePermissionsGroupResponse{}
	mi := &file_identity_v1_permission_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePermissionsGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePermissionsGroupResponse) ProtoMessage() {}

func (x *UpdatePermissionsGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v1_permission_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePermissionsGroupResponse.ProtoReflect.Descriptor instead.
func (*UpdatePermissionsGroupResponse) Descriptor() ([]byte, []int) {
	return file_identity_v1_permission_proto_rawDescGZIP(), []int{7}
}

func (x *UpdatePermissionsGroupResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DeletePermissionsGroupRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the permission group to delete.
	PermissionGroupId string `protobuf:"bytes,1,opt,name=permission_group_id,json=permissionGroupId,proto3" json:"permission_group_id,omitempty"`
	// The unique identifier of the business.
	BusinessId    string `protobuf:"bytes,2,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePermissionsGroupRequest) Reset() {
	*x = DeletePermissionsGroupRequest{}
	mi := &file_identity_v1_permission_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePermissionsGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePermissionsGroupRequest) ProtoMessage() {}

func (x *DeletePermissionsGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v1_permission_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePermissionsGroupRequest.ProtoReflect.Descriptor instead.
func (*DeletePermissionsGroupRequest) Descriptor() ([]byte, []int) {
	return file_identity_v1_permission_proto_rawDescGZIP(), []int{8}
}

func (x *DeletePermissionsGroupRequest) GetPermissionGroupId() string {
	if x != nil {
		return x.PermissionGroupId
	}
	return ""
}

func (x *DeletePermissionsGroupRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

type DeletePermissionsGroupResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the permission group was successfully deleted.
	Success       bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePermissionsGroupResponse) Reset() {
	*x = DeletePermissionsGroupResponse{}
	mi := &file_identity_v1_permission_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePermissionsGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePermissionsGroupResponse) ProtoMessage() {}

func (x *DeletePermissionsGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v1_permission_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePermissionsGroupResponse.ProtoReflect.Descriptor instead.
func (*DeletePermissionsGroupResponse) Descriptor() ([]byte, []int) {
	return file_identity_v1_permission_proto_rawDescGZIP(), []int{9}
}

func (x *DeletePermissionsGroupResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type UpdateMemberPermissionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the member.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The id of the business on which we want to update the permissions.
	BusinessId string `protobuf:"bytes,2,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	// The set of permissions to remove from the member.
	RemovePermissions []*Permission `protobuf:"bytes,3,rep,name=remove_permissions,json=removePermissions,proto3" json:"remove_permissions,omitempty"`
	// The set of permissions to add on the member
	AddPermissions []*Permission `protobuf:"bytes,4,rep,name=add_permissions,json=addPermissions,proto3" json:"add_permissions,omitempty"`
	// The set of permissions groups to remove the member from.
	RemovePermissionsGroupsIds []string `protobuf:"bytes,5,rep,name=remove_permissions_groups_ids,json=removePermissionsGroupsIds,proto3" json:"remove_permissions_groups_ids,omitempty"`
	// The set of permissions groups to add the member on.
	AddPermissionsGroupsIds []string `protobuf:"bytes,6,rep,name=add_permissions_groups_ids,json=addPermissionsGroupsIds,proto3" json:"add_permissions_groups_ids,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *UpdateMemberPermissionsRequest) Reset() {
	*x = UpdateMemberPermissionsRequest{}
	mi := &file_identity_v1_permission_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMemberPermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberPermissionsRequest) ProtoMessage() {}

func (x *UpdateMemberPermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v1_permission_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberPermissionsRequest.ProtoReflect.Descriptor instead.
func (*UpdateMemberPermissionsRequest) Descriptor() ([]byte, []int) {
	return file_identity_v1_permission_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateMemberPermissionsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateMemberPermissionsRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

func (x *UpdateMemberPermissionsRequest) GetRemovePermissions() []*Permission {
	if x != nil {
		return x.RemovePermissions
	}
	return nil
}

func (x *UpdateMemberPermissionsRequest) GetAddPermissions() []*Permission {
	if x != nil {
		return x.AddPermissions
	}
	return nil
}

func (x *UpdateMemberPermissionsRequest) GetRemovePermissionsGroupsIds() []string {
	if x != nil {
		return x.RemovePermissionsGroupsIds
	}
	return nil
}

func (x *UpdateMemberPermissionsRequest) GetAddPermissionsGroupsIds() []string {
	if x != nil {
		return x.AddPermissionsGroupsIds
	}
	return nil
}

type UpdateMemberPermissionsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the member was successfully removed from the permission group.
	Success       bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMemberPermissionsResponse) Reset() {
	*x = UpdateMemberPermissionsResponse{}
	mi := &file_identity_v1_permission_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMemberPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberPermissionsResponse) ProtoMessage() {}

func (x *UpdateMemberPermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v1_permission_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberPermissionsResponse.ProtoReflect.Descriptor instead.
func (*UpdateMemberPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_identity_v1_permission_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateMemberPermissionsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetBusinessPermissionsGroupsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the business to retrieve.
	BusinessId    string `protobuf:"bytes,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBusinessPermissionsGroupsRequest) Reset() {
	*x = GetBusinessPermissionsGroupsRequest{}
	mi := &file_identity_v1_permission_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBusinessPermissionsGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessPermissionsGroupsRequest) ProtoMessage() {}

func (x *GetBusinessPermissionsGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v1_permission_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessPermissionsGroupsRequest.ProtoReflect.Descriptor instead.
func (*GetBusinessPermissionsGroupsRequest) Descriptor() ([]byte, []int) {
	return file_identity_v1_permission_proto_rawDescGZIP(), []int{12}
}

func (x *GetBusinessPermissionsGroupsRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

type GetBusinessPermissionsGroupsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The permission groups that the business has.
	PermissionsGroups []*PermissionsGroup `protobuf:"bytes,1,rep,name=permissions_groups,json=permissionsGroups,proto3" json:"permissions_groups,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetBusinessPermissionsGroupsResponse) Reset() {
	*x = GetBusinessPermissionsGroupsResponse{}
	mi := &file_identity_v1_permission_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBusinessPermissionsGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessPermissionsGroupsResponse) ProtoMessage() {}

func (x *GetBusinessPermissionsGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v1_permission_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessPermissionsGroupsResponse.ProtoReflect.Descriptor instead.
func (*GetBusinessPermissionsGroupsResponse) Descriptor() ([]byte, []int) {
	return file_identity_v1_permission_proto_rawDescGZIP(), []int{13}
}

func (x *GetBusinessPermissionsGroupsResponse) GetPermissionsGroups() []*PermissionsGroup {
	if x != nil {
		return x.PermissionsGroups
	}
	return nil
}

type CheckPermissionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the member.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The unique identifier of the business on which we want to check the permission.
	BusinessId string `protobuf:"bytes,3,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	// The permission to check.
	Permission    *Permission `protobuf:"bytes,4,opt,name=permission,proto3" json:"permission,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckPermissionRequest) Reset() {
	*x = CheckPermissionRequest{}
	mi := &file_identity_v1_permission_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPermissionRequest) ProtoMessage() {}

func (x *CheckPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v1_permission_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPermissionRequest.ProtoReflect.Descriptor instead.
func (*CheckPermissionRequest) Descriptor() ([]byte, []int) {
	return file_identity_v1_permission_proto_rawDescGZIP(), []int{14}
}

func (x *CheckPermissionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CheckPermissionRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

func (x *CheckPermissionRequest) GetPermission() *Permission {
	if x != nil {
		return x.Permission
	}
	return nil
}

type CheckPermissionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the member has the permission.
	HasPermission bool `protobuf:"varint,1,opt,name=has_permission,json=hasPermission,proto3" json:"has_permission,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckPermissionResponse) Reset() {
	*x = CheckPermissionResponse{}
	mi := &file_identity_v1_permission_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckPermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPermissionResponse) ProtoMessage() {}

func (x *CheckPermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v1_permission_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPermissionResponse.ProtoReflect.Descriptor instead.
func (*CheckPermissionResponse) Descriptor() ([]byte, []int) {
	return file_identity_v1_permission_proto_rawDescGZIP(), []int{15}
}

func (x *CheckPermissionResponse) GetHasPermission() bool {
	if x != nil {
		return x.HasPermission
	}
	return false
}

// Request to stream business permissions groups
type StreamBusinessPermissionsGroupsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the business to stream.
	BusinessId    string `protobuf:"bytes,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamBusinessPermissionsGroupsRequest) Reset() {
	*x = StreamBusinessPermissionsGroupsRequest{}
	mi := &file_identity_v1_permission_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamBusinessPermissionsGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamBusinessPermissionsGroupsRequest) ProtoMessage() {}

func (x *StreamBusinessPermissionsGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v1_permission_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamBusinessPermissionsGroupsRequest.ProtoReflect.Descriptor instead.
func (*StreamBusinessPermissionsGroupsRequest) Descriptor() ([]byte, []int) {
	return file_identity_v1_permission_proto_rawDescGZIP(), []int{16}
}

func (x *StreamBusinessPermissionsGroupsRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

// Response for streaming business permissions groups
type StreamBusinessPermissionsGroupsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The permission groups that the business has.
	PermissionsGroups []*PermissionsGroup `protobuf:"bytes,1,rep,name=permissions_groups,json=permissionsGroups,proto3" json:"permissions_groups,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *StreamBusinessPermissionsGroupsResponse) Reset() {
	*x = StreamBusinessPermissionsGroupsResponse{}
	mi := &file_identity_v1_permission_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamBusinessPermissionsGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamBusinessPermissionsGroupsResponse) ProtoMessage() {}

func (x *StreamBusinessPermissionsGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_identity_v1_permission_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamBusinessPermissionsGroupsResponse.ProtoReflect.Descriptor instead.
func (*StreamBusinessPermissionsGroupsResponse) Descriptor() ([]byte, []int) {
	return file_identity_v1_permission_proto_rawDescGZIP(), []int{17}
}

func (x *StreamBusinessPermissionsGroupsResponse) GetPermissionsGroups() []*PermissionsGroup {
	if x != nil {
		return x.PermissionsGroups
	}
	return nil
}

var File_identity_v1_permission_proto protoreflect.FileDescriptor

const file_identity_v1_permission_proto_rawDesc = "" +
	"\n" +
	"\x1cidentity/v1/permission.proto\x12\videntity.v1\x1a\x1bbuf/validate/validate.proto\"\xc4\x01\n" +
	"\n" +
	"Permission\x12>\n" +
	"\rresource_type\x18\x01 \x01(\x0e2\x19.identity.v1.ResourceTypeR\fresourceType\x12$\n" +
	"\vresource_id\x18\x02 \x01(\tH\x00R\n" +
	"resourceId\x88\x01\x01\x12@\n" +
	"\vaction_type\x18\x03 \x01(\x0e2\x1f.identity.v1.ResourceActionTypeR\n" +
	"actionTypeB\x0e\n" +
	"\f_resource_id\"\xf5\x01\n" +
	"\x10PermissionsGroup\x12\x1a\n" +
	"\x06ref_id\x18\x01 \x01(\tH\x00R\x05refId\x88\x01\x01\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12%\n" +
	"\vdescription\x18\x03 \x01(\tH\x01R\vdescription\x88\x01\x01\x129\n" +
	"\vpermissions\x18\x04 \x03(\v2\x17.identity.v1.PermissionR\vpermissions\x12$\n" +
	"\vbusiness_id\x18\x06 \x01(\tH\x02R\n" +
	"businessId\x88\x01\x01B\t\n" +
	"\a_ref_idB\x0e\n" +
	"\f_descriptionB\x0e\n" +
	"\f_business_id\"\x98\x01\n" +
	"\x1dCreatePermissionsGroupRequest\x12J\n" +
	"\x11permissions_group\x18\x01 \x01(\v2\x1d.identity.v1.PermissionsGroupR\x10permissionsGroup\x12+\n" +
	"\vbusiness_id\x18\x02 \x01(\tB\n" +
	"\xbaH\a\xc8\x01\x01r\x02\x10\x03R\n" +
	"businessId\"\\\n" +
	"\x1eCreatePermissionsGroupResponse\x12:\n" +
	"\x13permission_group_id\x18\x01 \x01(\tB\n" +
	"\xbaH\a\xc8\x01\x01r\x02\x10\x03R\x11permissionGroupId\"X\n" +
	"\x1aGetPermissionsGroupRequest\x12:\n" +
	"\x13permission_group_id\x18\x01 \x01(\tB\n" +
	"\xbaH\a\xc8\x01\x01r\x02\x10\x03R\x11permissionGroupId\"i\n" +
	"\x1bGetPermissionsGroupResponse\x12J\n" +
	"\x11permissions_group\x18\x01 \x01(\v2\x1d.identity.v1.PermissionsGroupR\x10permissionsGroup\"\xed\x02\n" +
	"\x1dUpdatePermissionsGroupRequest\x12<\n" +
	"\x14permissions_group_id\x18\x01 \x01(\tB\n" +
	"\xbaH\a\xc8\x01\x01r\x02\x10\x03R\x12permissionsGroupId\x12+\n" +
	"\vbusiness_id\x18\x06 \x01(\tB\n" +
	"\xbaH\a\xc8\x01\x01r\x02\x10\x03R\n" +
	"businessId\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tH\x00R\x04name\x88\x01\x01\x12%\n" +
	"\vdescription\x18\x03 \x01(\tH\x01R\vdescription\x88\x01\x01\x12@\n" +
	"\x0fadd_permissions\x18\x04 \x03(\v2\x17.identity.v1.PermissionR\x0eaddPermissions\x12F\n" +
	"\x12remove_permissions\x18\x05 \x03(\v2\x17.identity.v1.PermissionR\x11removePermissionsB\a\n" +
	"\x05_nameB\x0e\n" +
	"\f_description\":\n" +
	"\x1eUpdatePermissionsGroupResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\x88\x01\n" +
	"\x1dDeletePermissionsGroupRequest\x12:\n" +
	"\x13permission_group_id\x18\x01 \x01(\tB\n" +
	"\xbaH\a\xc8\x01\x01r\x02\x10\x03R\x11permissionGroupId\x12+\n" +
	"\vbusiness_id\x18\x02 \x01(\tB\n" +
	"\xbaH\a\xc8\x01\x01r\x02\x10\x03R\n" +
	"businessId\":\n" +
	"\x1eDeletePermissionsGroupResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\xfc\x02\n" +
	"\x1eUpdateMemberPermissionsRequest\x12#\n" +
	"\auser_id\x18\x01 \x01(\tB\n" +
	"\xbaH\a\xc8\x01\x01r\x02\x10\x03R\x06userId\x12+\n" +
	"\vbusiness_id\x18\x02 \x01(\tB\n" +
	"\xbaH\a\xc8\x01\x01r\x02\x10\x03R\n" +
	"businessId\x12F\n" +
	"\x12remove_permissions\x18\x03 \x03(\v2\x17.identity.v1.PermissionR\x11removePermissions\x12@\n" +
	"\x0fadd_permissions\x18\x04 \x03(\v2\x17.identity.v1.PermissionR\x0eaddPermissions\x12A\n" +
	"\x1dremove_permissions_groups_ids\x18\x05 \x03(\tR\x1aremovePermissionsGroupsIds\x12;\n" +
	"\x1aadd_permissions_groups_ids\x18\x06 \x03(\tR\x17addPermissionsGroupsIds\";\n" +
	"\x1fUpdateMemberPermissionsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"R\n" +
	"#GetBusinessPermissionsGroupsRequest\x12+\n" +
	"\vbusiness_id\x18\x01 \x01(\tB\n" +
	"\xbaH\a\xc8\x01\x01r\x02\x10\x03R\n" +
	"businessId\"t\n" +
	"$GetBusinessPermissionsGroupsResponse\x12L\n" +
	"\x12permissions_groups\x18\x01 \x03(\v2\x1d.identity.v1.PermissionsGroupR\x11permissionsGroups\"\xa3\x01\n" +
	"\x16CheckPermissionRequest\x12#\n" +
	"\auser_id\x18\x01 \x01(\tB\n" +
	"\xbaH\a\xc8\x01\x01r\x02\x10\x03R\x06userId\x12+\n" +
	"\vbusiness_id\x18\x03 \x01(\tB\n" +
	"\xbaH\a\xc8\x01\x01r\x02\x10\x03R\n" +
	"businessId\x127\n" +
	"\n" +
	"permission\x18\x04 \x01(\v2\x17.identity.v1.PermissionR\n" +
	"permission\"@\n" +
	"\x17CheckPermissionResponse\x12%\n" +
	"\x0ehas_permission\x18\x01 \x01(\bR\rhasPermission\"U\n" +
	"&StreamBusinessPermissionsGroupsRequest\x12+\n" +
	"\vbusiness_id\x18\x01 \x01(\tB\n" +
	"\xbaH\a\xc8\x01\x01r\x02\x10\x03R\n" +
	"businessId\"w\n" +
	"'StreamBusinessPermissionsGroupsResponse\x12L\n" +
	"\x12permissions_groups\x18\x01 \x03(\v2\x1d.identity.v1.PermissionsGroupR\x11permissionsGroups*\xb9\x01\n" +
	"\x12ResourceActionType\x12$\n" +
	" RESOURCE_ACTION_TYPE_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19RESOURCE_ACTION_TYPE_READ\x10\x01\x12\x1c\n" +
	"\x18RESOURCE_ACTION_TYPE_ADD\x10\x02\x12\x1f\n" +
	"\x1bRESOURCE_ACTION_TYPE_UPDATE\x10\x03\x12\x1f\n" +
	"\x1bRESOURCE_ACTION_TYPE_REMOVE\x10\x04*\xa1\x02\n" +
	"\fResourceType\x12\x1d\n" +
	"\x19RESOURCE_TYPE_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16RESOURCE_TYPE_BUSINESS\x10\x01\x12!\n" +
	"\x1dRESOURCE_TYPE_BUSINESS_MEMBER\x10\x02\x12#\n" +
	"\x1fRESOURCE_TYPE_BUSINESS_SUPPLIER\x10\x04\x12\x17\n" +
	"\x13RESOURCE_TYPE_STORE\x10\x05\x12\x19\n" +
	"\x15RESOURCE_TYPE_INVOICE\x10\x06\x12\x1d\n" +
	"\x19RESOURCE_TYPE_STORE_ORDER\x10\a\x12 \n" +
	"\x1cRESOURCE_TYPE_SUPPLIER_ORDER\x10\b\x12\x19\n" +
	"\x15RESOURCE_TYPE_PRODUCT\x10\t2\xd1\a\n" +
	"\x11PermissionService\x12s\n" +
	"\x16CreatePermissionsGroup\x12*.identity.v1.CreatePermissionsGroupRequest\x1a+.identity.v1.CreatePermissionsGroupResponse\"\x00\x12j\n" +
	"\x13GetPermissionsGroup\x12'.identity.v1.GetPermissionsGroupRequest\x1a(.identity.v1.GetPermissionsGroupResponse\"\x00\x12s\n" +
	"\x16UpdatePermissionsGroup\x12*.identity.v1.UpdatePermissionsGroupRequest\x1a+.identity.v1.UpdatePermissionsGroupResponse\"\x00\x12s\n" +
	"\x16DeletePermissionsGroup\x12*.identity.v1.DeletePermissionsGroupRequest\x1a+.identity.v1.DeletePermissionsGroupResponse\"\x00\x12v\n" +
	"\x17UpdateMemberPermissions\x12+.identity.v1.UpdateMemberPermissionsRequest\x1a,.identity.v1.UpdateMemberPermissionsResponse\"\x00\x12\x85\x01\n" +
	"\x1cGetBusinessPermissionsGroups\x120.identity.v1.GetBusinessPermissionsGroupsRequest\x1a1.identity.v1.GetBusinessPermissionsGroupsResponse\"\x00\x12^\n" +
	"\x0fCheckPermission\x12#.identity.v1.CheckPermissionRequest\x1a$.identity.v1.CheckPermissionResponse\"\x00\x12\x90\x01\n" +
	"\x1fStreamBusinessPermissionsGroups\x123.identity.v1.StreamBusinessPermissionsGroupsRequest\x1a4.identity.v1.StreamBusinessPermissionsGroupsResponse\"\x000\x01B\xb7\x01\n" +
	"\x0fcom.identity.v1B\x0fPermissionProtoP\x01ZFgithub.com/karibu-cap/sabitou/protos/gen/go/rpc/identity/v1;identityv1\xa2\x02\x03IXX\xaa\x02\vIdentity.V1\xca\x02\vIdentity\\V1\xe2\x02\x17Identity\\V1\\GPBMetadata\xea\x02\fIdentity::V1b\x06proto3"

var (
	file_identity_v1_permission_proto_rawDescOnce sync.Once
	file_identity_v1_permission_proto_rawDescData []byte
)

func file_identity_v1_permission_proto_rawDescGZIP() []byte {
	file_identity_v1_permission_proto_rawDescOnce.Do(func() {
		file_identity_v1_permission_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_identity_v1_permission_proto_rawDesc), len(file_identity_v1_permission_proto_rawDesc)))
	})
	return file_identity_v1_permission_proto_rawDescData
}

var file_identity_v1_permission_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_identity_v1_permission_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_identity_v1_permission_proto_goTypes = []any{
	(ResourceActionType)(0),                         // 0: identity.v1.ResourceActionType
	(ResourceType)(0),                               // 1: identity.v1.ResourceType
	(*Permission)(nil),                              // 2: identity.v1.Permission
	(*PermissionsGroup)(nil),                        // 3: identity.v1.PermissionsGroup
	(*CreatePermissionsGroupRequest)(nil),           // 4: identity.v1.CreatePermissionsGroupRequest
	(*CreatePermissionsGroupResponse)(nil),          // 5: identity.v1.CreatePermissionsGroupResponse
	(*GetPermissionsGroupRequest)(nil),              // 6: identity.v1.GetPermissionsGroupRequest
	(*GetPermissionsGroupResponse)(nil),             // 7: identity.v1.GetPermissionsGroupResponse
	(*UpdatePermissionsGroupRequest)(nil),           // 8: identity.v1.UpdatePermissionsGroupRequest
	(*UpdatePermissionsGroupResponse)(nil),          // 9: identity.v1.UpdatePermissionsGroupResponse
	(*DeletePermissionsGroupRequest)(nil),           // 10: identity.v1.DeletePermissionsGroupRequest
	(*DeletePermissionsGroupResponse)(nil),          // 11: identity.v1.DeletePermissionsGroupResponse
	(*UpdateMemberPermissionsRequest)(nil),          // 12: identity.v1.UpdateMemberPermissionsRequest
	(*UpdateMemberPermissionsResponse)(nil),         // 13: identity.v1.UpdateMemberPermissionsResponse
	(*GetBusinessPermissionsGroupsRequest)(nil),     // 14: identity.v1.GetBusinessPermissionsGroupsRequest
	(*GetBusinessPermissionsGroupsResponse)(nil),    // 15: identity.v1.GetBusinessPermissionsGroupsResponse
	(*CheckPermissionRequest)(nil),                  // 16: identity.v1.CheckPermissionRequest
	(*CheckPermissionResponse)(nil),                 // 17: identity.v1.CheckPermissionResponse
	(*StreamBusinessPermissionsGroupsRequest)(nil),  // 18: identity.v1.StreamBusinessPermissionsGroupsRequest
	(*StreamBusinessPermissionsGroupsResponse)(nil), // 19: identity.v1.StreamBusinessPermissionsGroupsResponse
}
var file_identity_v1_permission_proto_depIdxs = []int32{
	1,  // 0: identity.v1.Permission.resource_type:type_name -> identity.v1.ResourceType
	0,  // 1: identity.v1.Permission.action_type:type_name -> identity.v1.ResourceActionType
	2,  // 2: identity.v1.PermissionsGroup.permissions:type_name -> identity.v1.Permission
	3,  // 3: identity.v1.CreatePermissionsGroupRequest.permissions_group:type_name -> identity.v1.PermissionsGroup
	3,  // 4: identity.v1.GetPermissionsGroupResponse.permissions_group:type_name -> identity.v1.PermissionsGroup
	2,  // 5: identity.v1.UpdatePermissionsGroupRequest.add_permissions:type_name -> identity.v1.Permission
	2,  // 6: identity.v1.UpdatePermissionsGroupRequest.remove_permissions:type_name -> identity.v1.Permission
	2,  // 7: identity.v1.UpdateMemberPermissionsRequest.remove_permissions:type_name -> identity.v1.Permission
	2,  // 8: identity.v1.UpdateMemberPermissionsRequest.add_permissions:type_name -> identity.v1.Permission
	3,  // 9: identity.v1.GetBusinessPermissionsGroupsResponse.permissions_groups:type_name -> identity.v1.PermissionsGroup
	2,  // 10: identity.v1.CheckPermissionRequest.permission:type_name -> identity.v1.Permission
	3,  // 11: identity.v1.StreamBusinessPermissionsGroupsResponse.permissions_groups:type_name -> identity.v1.PermissionsGroup
	4,  // 12: identity.v1.PermissionService.CreatePermissionsGroup:input_type -> identity.v1.CreatePermissionsGroupRequest
	6,  // 13: identity.v1.PermissionService.GetPermissionsGroup:input_type -> identity.v1.GetPermissionsGroupRequest
	8,  // 14: identity.v1.PermissionService.UpdatePermissionsGroup:input_type -> identity.v1.UpdatePermissionsGroupRequest
	10, // 15: identity.v1.PermissionService.DeletePermissionsGroup:input_type -> identity.v1.DeletePermissionsGroupRequest
	12, // 16: identity.v1.PermissionService.UpdateMemberPermissions:input_type -> identity.v1.UpdateMemberPermissionsRequest
	14, // 17: identity.v1.PermissionService.GetBusinessPermissionsGroups:input_type -> identity.v1.GetBusinessPermissionsGroupsRequest
	16, // 18: identity.v1.PermissionService.CheckPermission:input_type -> identity.v1.CheckPermissionRequest
	18, // 19: identity.v1.PermissionService.StreamBusinessPermissionsGroups:input_type -> identity.v1.StreamBusinessPermissionsGroupsRequest
	5,  // 20: identity.v1.PermissionService.CreatePermissionsGroup:output_type -> identity.v1.CreatePermissionsGroupResponse
	7,  // 21: identity.v1.PermissionService.GetPermissionsGroup:output_type -> identity.v1.GetPermissionsGroupResponse
	9,  // 22: identity.v1.PermissionService.UpdatePermissionsGroup:output_type -> identity.v1.UpdatePermissionsGroupResponse
	11, // 23: identity.v1.PermissionService.DeletePermissionsGroup:output_type -> identity.v1.DeletePermissionsGroupResponse
	13, // 24: identity.v1.PermissionService.UpdateMemberPermissions:output_type -> identity.v1.UpdateMemberPermissionsResponse
	15, // 25: identity.v1.PermissionService.GetBusinessPermissionsGroups:output_type -> identity.v1.GetBusinessPermissionsGroupsResponse
	17, // 26: identity.v1.PermissionService.CheckPermission:output_type -> identity.v1.CheckPermissionResponse
	19, // 27: identity.v1.PermissionService.StreamBusinessPermissionsGroups:output_type -> identity.v1.StreamBusinessPermissionsGroupsResponse
	20, // [20:28] is the sub-list for method output_type
	12, // [12:20] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_identity_v1_permission_proto_init() }
func file_identity_v1_permission_proto_init() {
	if File_identity_v1_permission_proto != nil {
		return
	}
	file_identity_v1_permission_proto_msgTypes[0].OneofWrappers = []any{}
	file_identity_v1_permission_proto_msgTypes[1].OneofWrappers = []any{}
	file_identity_v1_permission_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_identity_v1_permission_proto_rawDesc), len(file_identity_v1_permission_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_identity_v1_permission_proto_goTypes,
		DependencyIndexes: file_identity_v1_permission_proto_depIdxs,
		EnumInfos:         file_identity_v1_permission_proto_enumTypes,
		MessageInfos:      file_identity_v1_permission_proto_msgTypes,
	}.Build()
	File_identity_v1_permission_proto = out.File
	file_identity_v1_permission_proto_goTypes = nil
	file_identity_v1_permission_proto_depIdxs = nil
}
