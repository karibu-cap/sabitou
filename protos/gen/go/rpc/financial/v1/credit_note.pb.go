// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: financial/v1/credit_note.proto

package financialv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreditNoteType int32

const (
	CreditNoteType_CREDIT_TYPE_UNSPECIFIED   CreditNoteType = 0
	CreditNoteType_CREDIT_TYPE_RETURN        CreditNoteType = 1 // Customer returns goods
	CreditNoteType_CREDIT_TYPE_PRICE_ERROR   CreditNoteType = 2 // Invoice had wrong price
	CreditNoteType_CREDIT_TYPE_DISCOUNT      CreditNoteType = 3 // Goodwill gesture
	CreditNoteType_CREDIT_TYPE_CANCELLATION  CreditNoteType = 4 // Full invoice cancellation
	CreditNoteType_CREDIT_TYPE_DAMAGED_GOODS CreditNoteType = 5 // Goods arrived damaged
)

// Enum value maps for CreditNoteType.
var (
	CreditNoteType_name = map[int32]string{
		0: "CREDIT_TYPE_UNSPECIFIED",
		1: "CREDIT_TYPE_RETURN",
		2: "CREDIT_TYPE_PRICE_ERROR",
		3: "CREDIT_TYPE_DISCOUNT",
		4: "CREDIT_TYPE_CANCELLATION",
		5: "CREDIT_TYPE_DAMAGED_GOODS",
	}
	CreditNoteType_value = map[string]int32{
		"CREDIT_TYPE_UNSPECIFIED":   0,
		"CREDIT_TYPE_RETURN":        1,
		"CREDIT_TYPE_PRICE_ERROR":   2,
		"CREDIT_TYPE_DISCOUNT":      3,
		"CREDIT_TYPE_CANCELLATION":  4,
		"CREDIT_TYPE_DAMAGED_GOODS": 5,
	}
)

func (x CreditNoteType) Enum() *CreditNoteType {
	p := new(CreditNoteType)
	*p = x
	return p
}

func (x CreditNoteType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreditNoteType) Descriptor() protoreflect.EnumDescriptor {
	return file_financial_v1_credit_note_proto_enumTypes[0].Descriptor()
}

func (CreditNoteType) Type() protoreflect.EnumType {
	return &file_financial_v1_credit_note_proto_enumTypes[0]
}

func (x CreditNoteType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreditNoteType.Descriptor instead.
func (CreditNoteType) EnumDescriptor() ([]byte, []int) {
	return file_financial_v1_credit_note_proto_rawDescGZIP(), []int{0}
}

type CreditNoteStatus int32

const (
	CreditNoteStatus_CN_STATUS_UNSPECIFIED CreditNoteStatus = 0
	CreditNoteStatus_CN_STATUS_DRAFT       CreditNoteStatus = 1
	CreditNoteStatus_CN_STATUS_ISSUED      CreditNoteStatus = 2 // Sent to customer
	CreditNoteStatus_CN_STATUS_APPLIED     CreditNoteStatus = 3 // Applied to customer account
)

// Enum value maps for CreditNoteStatus.
var (
	CreditNoteStatus_name = map[int32]string{
		0: "CN_STATUS_UNSPECIFIED",
		1: "CN_STATUS_DRAFT",
		2: "CN_STATUS_ISSUED",
		3: "CN_STATUS_APPLIED",
	}
	CreditNoteStatus_value = map[string]int32{
		"CN_STATUS_UNSPECIFIED": 0,
		"CN_STATUS_DRAFT":       1,
		"CN_STATUS_ISSUED":      2,
		"CN_STATUS_APPLIED":     3,
	}
)

func (x CreditNoteStatus) Enum() *CreditNoteStatus {
	p := new(CreditNoteStatus)
	*p = x
	return p
}

func (x CreditNoteStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreditNoteStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_financial_v1_credit_note_proto_enumTypes[1].Descriptor()
}

func (CreditNoteStatus) Type() protoreflect.EnumType {
	return &file_financial_v1_credit_note_proto_enumTypes[1]
}

func (x CreditNoteStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreditNoteStatus.Descriptor instead.
func (CreditNoteStatus) EnumDescriptor() ([]byte, []int) {
	return file_financial_v1_credit_note_proto_rawDescGZIP(), []int{1}
}

// *
// CreditNote (Avoir / Bon d'Avoir)
// Issued to cancel or reduce a previous invoice.
// Can be for returns, errors, discounts, etc.
//
// Fix: Items include batch_id if inventory impact involves specific lots.
//
// Example - Customer returns damaged goods:
//
//	cn_id: "CN-2025-001"
//	related_invoice_id: "INV-2025-001"
//	credit_type: CREDIT_TYPE_RETURN
//	recipient_id: "CMP-003" (customer)
//	items: [2x PRD-001 @ 450000]
//	total_amount: -900000 (negative = credit)
//	has_inventory_impact: true
//
// INVENTORY IMPACT (if has_inventory_impact = true):
//
//	+2 PRD-001 back to warehouse
//
// ACCOUNTING IMPACT:
//
//	Customer now owes: 5400000 - 900000 = 4500000
type CreditNote struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	DocumentId          string                 `protobuf:"bytes,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`                                   // "CN-2025-001"
	RelatedInvoiceId    string                 `protobuf:"bytes,2,opt,name=related_invoice_id,json=relatedInvoiceId,proto3" json:"related_invoice_id,omitempty"`               // Which invoice this corrects
	CreditType          CreditNoteType         `protobuf:"varint,3,opt,name=credit_type,json=creditType,proto3,enum=financial.v1.CreditNoteType" json:"credit_type,omitempty"` // Why credit is issued
	IssuerId            string                 `protobuf:"bytes,4,opt,name=issuer_id,json=issuerId,proto3" json:"issuer_id,omitempty"`                                         // Who issues the credit
	RecipientId         string                 `protobuf:"bytes,5,opt,name=recipient_id,json=recipientId,proto3" json:"recipient_id,omitempty"`                                // Who receives the credit
	Status              CreditNoteStatus       `protobuf:"varint,6,opt,name=status,proto3,enum=financial.v1.CreditNoteStatus" json:"status,omitempty"`
	Items               []*InvoiceLineItem     `protobuf:"bytes,7,rep,name=items,proto3" json:"items,omitempty"`                                  // What's being credited
	TotalAmount         float64                `protobuf:"fixed64,8,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"` // Negative value
	Currency            string                 `protobuf:"bytes,9,opt,name=currency,proto3" json:"currency,omitempty"`
	HasInventoryImpact  bool                   `protobuf:"varint,10,opt,name=has_inventory_impact,json=hasInventoryImpact,proto3" json:"has_inventory_impact,omitempty"`     // Does stock come back?
	RelatedReturnNoteId string                 `protobuf:"bytes,11,opt,name=related_return_note_id,json=relatedReturnNoteId,proto3" json:"related_return_note_id,omitempty"` // If goods returned
	IssueDate           *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=issue_date,json=issueDate,proto3" json:"issue_date,omitempty"`
	CreatedByUserId     string                 `protobuf:"bytes,13,opt,name=created_by_user_id,json=createdByUserId,proto3" json:"created_by_user_id,omitempty"`
	Reason              string                 `protobuf:"bytes,14,opt,name=reason,proto3" json:"reason,omitempty"` // Detailed explanation
	Notes               string                 `protobuf:"bytes,15,opt,name=notes,proto3" json:"notes,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CreditNote) Reset() {
	*x = CreditNote{}
	mi := &file_financial_v1_credit_note_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditNote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditNote) ProtoMessage() {}

func (x *CreditNote) ProtoReflect() protoreflect.Message {
	mi := &file_financial_v1_credit_note_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditNote.ProtoReflect.Descriptor instead.
func (*CreditNote) Descriptor() ([]byte, []int) {
	return file_financial_v1_credit_note_proto_rawDescGZIP(), []int{0}
}

func (x *CreditNote) GetDocumentId() string {
	if x != nil {
		return x.DocumentId
	}
	return ""
}

func (x *CreditNote) GetRelatedInvoiceId() string {
	if x != nil {
		return x.RelatedInvoiceId
	}
	return ""
}

func (x *CreditNote) GetCreditType() CreditNoteType {
	if x != nil {
		return x.CreditType
	}
	return CreditNoteType_CREDIT_TYPE_UNSPECIFIED
}

func (x *CreditNote) GetIssuerId() string {
	if x != nil {
		return x.IssuerId
	}
	return ""
}

func (x *CreditNote) GetRecipientId() string {
	if x != nil {
		return x.RecipientId
	}
	return ""
}

func (x *CreditNote) GetStatus() CreditNoteStatus {
	if x != nil {
		return x.Status
	}
	return CreditNoteStatus_CN_STATUS_UNSPECIFIED
}

func (x *CreditNote) GetItems() []*InvoiceLineItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *CreditNote) GetTotalAmount() float64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *CreditNote) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *CreditNote) GetHasInventoryImpact() bool {
	if x != nil {
		return x.HasInventoryImpact
	}
	return false
}

func (x *CreditNote) GetRelatedReturnNoteId() string {
	if x != nil {
		return x.RelatedReturnNoteId
	}
	return ""
}

func (x *CreditNote) GetIssueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.IssueDate
	}
	return nil
}

func (x *CreditNote) GetCreatedByUserId() string {
	if x != nil {
		return x.CreatedByUserId
	}
	return ""
}

func (x *CreditNote) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *CreditNote) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

var File_financial_v1_credit_note_proto protoreflect.FileDescriptor

const file_financial_v1_credit_note_proto_rawDesc = "" +
	"\n" +
	"\x1efinancial/v1/credit_note.proto\x12\ffinancial.v1\x1a\x1bbuf/validate/validate.proto\x1a\"financial/v1/financial_utils.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x8b\x05\n" +
	"\n" +
	"CreditNote\x12'\n" +
	"\vdocument_id\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\n" +
	"documentId\x12,\n" +
	"\x12related_invoice_id\x18\x02 \x01(\tR\x10relatedInvoiceId\x12=\n" +
	"\vcredit_type\x18\x03 \x01(\x0e2\x1c.financial.v1.CreditNoteTypeR\n" +
	"creditType\x12\x1b\n" +
	"\tissuer_id\x18\x04 \x01(\tR\bissuerId\x12!\n" +
	"\frecipient_id\x18\x05 \x01(\tR\vrecipientId\x126\n" +
	"\x06status\x18\x06 \x01(\x0e2\x1e.financial.v1.CreditNoteStatusR\x06status\x123\n" +
	"\x05items\x18\a \x03(\v2\x1d.financial.v1.InvoiceLineItemR\x05items\x12!\n" +
	"\ftotal_amount\x18\b \x01(\x01R\vtotalAmount\x12\x1a\n" +
	"\bcurrency\x18\t \x01(\tR\bcurrency\x120\n" +
	"\x14has_inventory_impact\x18\n" +
	" \x01(\bR\x12hasInventoryImpact\x123\n" +
	"\x16related_return_note_id\x18\v \x01(\tR\x13relatedReturnNoteId\x129\n" +
	"\n" +
	"issue_date\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\tissueDate\x12+\n" +
	"\x12created_by_user_id\x18\r \x01(\tR\x0fcreatedByUserId\x12\x16\n" +
	"\x06reason\x18\x0e \x01(\tR\x06reason\x12\x14\n" +
	"\x05notes\x18\x0f \x01(\tR\x05notes*\xb9\x01\n" +
	"\x0eCreditNoteType\x12\x1b\n" +
	"\x17CREDIT_TYPE_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12CREDIT_TYPE_RETURN\x10\x01\x12\x1b\n" +
	"\x17CREDIT_TYPE_PRICE_ERROR\x10\x02\x12\x18\n" +
	"\x14CREDIT_TYPE_DISCOUNT\x10\x03\x12\x1c\n" +
	"\x18CREDIT_TYPE_CANCELLATION\x10\x04\x12\x1d\n" +
	"\x19CREDIT_TYPE_DAMAGED_GOODS\x10\x05*o\n" +
	"\x10CreditNoteStatus\x12\x19\n" +
	"\x15CN_STATUS_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fCN_STATUS_DRAFT\x10\x01\x12\x14\n" +
	"\x10CN_STATUS_ISSUED\x10\x02\x12\x15\n" +
	"\x11CN_STATUS_APPLIED\x10\x03B\xbe\x01\n" +
	"\x10com.financial.v1B\x0fCreditNoteProtoP\x01ZHgithub.com/karibu-cap/sabitou/protos/gen/go/rpc/financial/v1;financialv1\xa2\x02\x03FXX\xaa\x02\fFinancial.V1\xca\x02\fFinancial\\V1\xe2\x02\x18Financial\\V1\\GPBMetadata\xea\x02\rFinancial::V1b\x06proto3"

var (
	file_financial_v1_credit_note_proto_rawDescOnce sync.Once
	file_financial_v1_credit_note_proto_rawDescData []byte
)

func file_financial_v1_credit_note_proto_rawDescGZIP() []byte {
	file_financial_v1_credit_note_proto_rawDescOnce.Do(func() {
		file_financial_v1_credit_note_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_financial_v1_credit_note_proto_rawDesc), len(file_financial_v1_credit_note_proto_rawDesc)))
	})
	return file_financial_v1_credit_note_proto_rawDescData
}

var file_financial_v1_credit_note_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_financial_v1_credit_note_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_financial_v1_credit_note_proto_goTypes = []any{
	(CreditNoteType)(0),           // 0: financial.v1.CreditNoteType
	(CreditNoteStatus)(0),         // 1: financial.v1.CreditNoteStatus
	(*CreditNote)(nil),            // 2: financial.v1.CreditNote
	(*InvoiceLineItem)(nil),       // 3: financial.v1.InvoiceLineItem
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_financial_v1_credit_note_proto_depIdxs = []int32{
	0, // 0: financial.v1.CreditNote.credit_type:type_name -> financial.v1.CreditNoteType
	1, // 1: financial.v1.CreditNote.status:type_name -> financial.v1.CreditNoteStatus
	3, // 2: financial.v1.CreditNote.items:type_name -> financial.v1.InvoiceLineItem
	4, // 3: financial.v1.CreditNote.issue_date:type_name -> google.protobuf.Timestamp
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_financial_v1_credit_note_proto_init() }
func file_financial_v1_credit_note_proto_init() {
	if File_financial_v1_credit_note_proto != nil {
		return
	}
	file_financial_v1_financial_utils_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_financial_v1_credit_note_proto_rawDesc), len(file_financial_v1_credit_note_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_financial_v1_credit_note_proto_goTypes,
		DependencyIndexes: file_financial_v1_credit_note_proto_depIdxs,
		EnumInfos:         file_financial_v1_credit_note_proto_enumTypes,
		MessageInfos:      file_financial_v1_credit_note_proto_msgTypes,
	}.Build()
	File_financial_v1_credit_note_proto = out.File
	file_financial_v1_credit_note_proto_goTypes = nil
	file_financial_v1_credit_note_proto_depIdxs = nil
}
