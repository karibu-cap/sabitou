// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: financial/v1/debit_note.proto

package financialv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DebitNoteType int32

const (
	DebitNoteType_DEBIT_TYPE_UNSPECIFIED   DebitNoteType = 0
	DebitNoteType_DEBIT_TYPE_RETURN        DebitNoteType = 1 // Returning goods to supplier
	DebitNoteType_DEBIT_TYPE_PRICE_DISPUTE DebitNoteType = 2 // Invoice price was wrong
	DebitNoteType_DEBIT_TYPE_QUALITY_ISSUE DebitNoteType = 3 // Goods defective
	DebitNoteType_DEBIT_TYPE_SHORTAGE      DebitNoteType = 4 // Received less than invoiced
)

// Enum value maps for DebitNoteType.
var (
	DebitNoteType_name = map[int32]string{
		0: "DEBIT_TYPE_UNSPECIFIED",
		1: "DEBIT_TYPE_RETURN",
		2: "DEBIT_TYPE_PRICE_DISPUTE",
		3: "DEBIT_TYPE_QUALITY_ISSUE",
		4: "DEBIT_TYPE_SHORTAGE",
	}
	DebitNoteType_value = map[string]int32{
		"DEBIT_TYPE_UNSPECIFIED":   0,
		"DEBIT_TYPE_RETURN":        1,
		"DEBIT_TYPE_PRICE_DISPUTE": 2,
		"DEBIT_TYPE_QUALITY_ISSUE": 3,
		"DEBIT_TYPE_SHORTAGE":      4,
	}
)

func (x DebitNoteType) Enum() *DebitNoteType {
	p := new(DebitNoteType)
	*p = x
	return p
}

func (x DebitNoteType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DebitNoteType) Descriptor() protoreflect.EnumDescriptor {
	return file_financial_v1_debit_note_proto_enumTypes[0].Descriptor()
}

func (DebitNoteType) Type() protoreflect.EnumType {
	return &file_financial_v1_debit_note_proto_enumTypes[0]
}

func (x DebitNoteType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DebitNoteType.Descriptor instead.
func (DebitNoteType) EnumDescriptor() ([]byte, []int) {
	return file_financial_v1_debit_note_proto_rawDescGZIP(), []int{0}
}

type DebitNoteStatus int32

const (
	DebitNoteStatus_DEBIT_STATUS_UNSPECIFIED DebitNoteStatus = 0
	DebitNoteStatus_DEBIT_STATUS_DRAFT       DebitNoteStatus = 1
	DebitNoteStatus_DEBIT_STATUS_ISSUED      DebitNoteStatus = 2
	DebitNoteStatus_DEBIT_STATUS_ACCEPTED    DebitNoteStatus = 3 // Supplier agreed
	DebitNoteStatus_DEBIT_STATUS_DISPUTED    DebitNoteStatus = 4 // Supplier disagrees
)

// Enum value maps for DebitNoteStatus.
var (
	DebitNoteStatus_name = map[int32]string{
		0: "DEBIT_STATUS_UNSPECIFIED",
		1: "DEBIT_STATUS_DRAFT",
		2: "DEBIT_STATUS_ISSUED",
		3: "DEBIT_STATUS_ACCEPTED",
		4: "DEBIT_STATUS_DISPUTED",
	}
	DebitNoteStatus_value = map[string]int32{
		"DEBIT_STATUS_UNSPECIFIED": 0,
		"DEBIT_STATUS_DRAFT":       1,
		"DEBIT_STATUS_ISSUED":      2,
		"DEBIT_STATUS_ACCEPTED":    3,
		"DEBIT_STATUS_DISPUTED":    4,
	}
)

func (x DebitNoteStatus) Enum() *DebitNoteStatus {
	p := new(DebitNoteStatus)
	*p = x
	return p
}

func (x DebitNoteStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DebitNoteStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_financial_v1_debit_note_proto_enumTypes[1].Descriptor()
}

func (DebitNoteStatus) Type() protoreflect.EnumType {
	return &file_financial_v1_debit_note_proto_enumTypes[1]
}

func (x DebitNoteStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DebitNoteStatus.Descriptor instead.
func (DebitNoteStatus) EnumDescriptor() ([]byte, []int) {
	return file_financial_v1_debit_note_proto_rawDescGZIP(), []int{1}
}

// *
// DebitNote (Note de DÃ©bit)
// Like a CreditNote but in reverse - YOU issue it TO supplier.
// Used when returning goods to supplier or correcting purchase invoice.
//
// Fix: Items include batch_id.
//
// Example - You return defective goods to supplier:
//
//	dn_id: "DEBIT-2025-001"
//	related_invoice_id: "PINV-2025-001" (purchase invoice)
//	debit_type: DEBIT_TYPE_RETURN
//	issuer_id: "CMP-001" (your company)
//	recipient_id: "CMP-002" (supplier)
//	items: [5x PRD-001 @ 400000]
//	total_amount: -2000000
//
// INVENTORY IMPACT: -5 PRD-001 (returned to supplier)
// ACCOUNTING IMPACT: You owe supplier 2000000 less
type DebitNote struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	DocumentId          string                 `protobuf:"bytes,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`                     // "DEBIT-2025-001"
	RelatedInvoiceId    string                 `protobuf:"bytes,2,opt,name=related_invoice_id,json=relatedInvoiceId,proto3" json:"related_invoice_id,omitempty"` // Purchase invoice being adjusted
	DebitType           DebitNoteType          `protobuf:"varint,3,opt,name=debit_type,json=debitType,proto3,enum=financial.v1.DebitNoteType" json:"debit_type,omitempty"`
	IssuerId            string                 `protobuf:"bytes,4,opt,name=issuer_id,json=issuerId,proto3" json:"issuer_id,omitempty"`          // You (buyer)
	RecipientId         string                 `protobuf:"bytes,5,opt,name=recipient_id,json=recipientId,proto3" json:"recipient_id,omitempty"` // Supplier
	Status              DebitNoteStatus        `protobuf:"varint,6,opt,name=status,proto3,enum=financial.v1.DebitNoteStatus" json:"status,omitempty"`
	Items               []*InvoiceLineItem     `protobuf:"bytes,7,rep,name=items,proto3" json:"items,omitempty"`
	TotalAmount         float64                `protobuf:"fixed64,8,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"` // Negative value
	Currency            string                 `protobuf:"bytes,9,opt,name=currency,proto3" json:"currency,omitempty"`
	HasInventoryImpact  bool                   `protobuf:"varint,10,opt,name=has_inventory_impact,json=hasInventoryImpact,proto3" json:"has_inventory_impact,omitempty"`
	RelatedReturnNoteId string                 `protobuf:"bytes,11,opt,name=related_return_note_id,json=relatedReturnNoteId,proto3" json:"related_return_note_id,omitempty"`
	IssueDate           *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=issue_date,json=issueDate,proto3" json:"issue_date,omitempty"`
	CreatedByUserId     string                 `protobuf:"bytes,13,opt,name=created_by_user_id,json=createdByUserId,proto3" json:"created_by_user_id,omitempty"`
	Reason              string                 `protobuf:"bytes,14,opt,name=reason,proto3" json:"reason,omitempty"`
	Notes               string                 `protobuf:"bytes,15,opt,name=notes,proto3" json:"notes,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *DebitNote) Reset() {
	*x = DebitNote{}
	mi := &file_financial_v1_debit_note_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebitNote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitNote) ProtoMessage() {}

func (x *DebitNote) ProtoReflect() protoreflect.Message {
	mi := &file_financial_v1_debit_note_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitNote.ProtoReflect.Descriptor instead.
func (*DebitNote) Descriptor() ([]byte, []int) {
	return file_financial_v1_debit_note_proto_rawDescGZIP(), []int{0}
}

func (x *DebitNote) GetDocumentId() string {
	if x != nil {
		return x.DocumentId
	}
	return ""
}

func (x *DebitNote) GetRelatedInvoiceId() string {
	if x != nil {
		return x.RelatedInvoiceId
	}
	return ""
}

func (x *DebitNote) GetDebitType() DebitNoteType {
	if x != nil {
		return x.DebitType
	}
	return DebitNoteType_DEBIT_TYPE_UNSPECIFIED
}

func (x *DebitNote) GetIssuerId() string {
	if x != nil {
		return x.IssuerId
	}
	return ""
}

func (x *DebitNote) GetRecipientId() string {
	if x != nil {
		return x.RecipientId
	}
	return ""
}

func (x *DebitNote) GetStatus() DebitNoteStatus {
	if x != nil {
		return x.Status
	}
	return DebitNoteStatus_DEBIT_STATUS_UNSPECIFIED
}

func (x *DebitNote) GetItems() []*InvoiceLineItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *DebitNote) GetTotalAmount() float64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *DebitNote) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *DebitNote) GetHasInventoryImpact() bool {
	if x != nil {
		return x.HasInventoryImpact
	}
	return false
}

func (x *DebitNote) GetRelatedReturnNoteId() string {
	if x != nil {
		return x.RelatedReturnNoteId
	}
	return ""
}

func (x *DebitNote) GetIssueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.IssueDate
	}
	return nil
}

func (x *DebitNote) GetCreatedByUserId() string {
	if x != nil {
		return x.CreatedByUserId
	}
	return ""
}

func (x *DebitNote) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *DebitNote) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

var File_financial_v1_debit_note_proto protoreflect.FileDescriptor

const file_financial_v1_debit_note_proto_rawDesc = "" +
	"\n" +
	"\x1dfinancial/v1/debit_note.proto\x12\ffinancial.v1\x1a\x1bbuf/validate/validate.proto\x1a\"financial/v1/financial_utils.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\x86\x05\n" +
	"\tDebitNote\x12'\n" +
	"\vdocument_id\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\n" +
	"documentId\x12,\n" +
	"\x12related_invoice_id\x18\x02 \x01(\tR\x10relatedInvoiceId\x12:\n" +
	"\n" +
	"debit_type\x18\x03 \x01(\x0e2\x1b.financial.v1.DebitNoteTypeR\tdebitType\x12\x1b\n" +
	"\tissuer_id\x18\x04 \x01(\tR\bissuerId\x12!\n" +
	"\frecipient_id\x18\x05 \x01(\tR\vrecipientId\x125\n" +
	"\x06status\x18\x06 \x01(\x0e2\x1d.financial.v1.DebitNoteStatusR\x06status\x123\n" +
	"\x05items\x18\a \x03(\v2\x1d.financial.v1.InvoiceLineItemR\x05items\x12!\n" +
	"\ftotal_amount\x18\b \x01(\x01R\vtotalAmount\x12\x1a\n" +
	"\bcurrency\x18\t \x01(\tR\bcurrency\x120\n" +
	"\x14has_inventory_impact\x18\n" +
	" \x01(\bR\x12hasInventoryImpact\x123\n" +
	"\x16related_return_note_id\x18\v \x01(\tR\x13relatedReturnNoteId\x129\n" +
	"\n" +
	"issue_date\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\tissueDate\x12+\n" +
	"\x12created_by_user_id\x18\r \x01(\tR\x0fcreatedByUserId\x12\x16\n" +
	"\x06reason\x18\x0e \x01(\tR\x06reason\x12\x14\n" +
	"\x05notes\x18\x0f \x01(\tR\x05notes*\x97\x01\n" +
	"\rDebitNoteType\x12\x1a\n" +
	"\x16DEBIT_TYPE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11DEBIT_TYPE_RETURN\x10\x01\x12\x1c\n" +
	"\x18DEBIT_TYPE_PRICE_DISPUTE\x10\x02\x12\x1c\n" +
	"\x18DEBIT_TYPE_QUALITY_ISSUE\x10\x03\x12\x17\n" +
	"\x13DEBIT_TYPE_SHORTAGE\x10\x04*\x96\x01\n" +
	"\x0fDebitNoteStatus\x12\x1c\n" +
	"\x18DEBIT_STATUS_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12DEBIT_STATUS_DRAFT\x10\x01\x12\x17\n" +
	"\x13DEBIT_STATUS_ISSUED\x10\x02\x12\x19\n" +
	"\x15DEBIT_STATUS_ACCEPTED\x10\x03\x12\x19\n" +
	"\x15DEBIT_STATUS_DISPUTED\x10\x04B\xbd\x01\n" +
	"\x10com.financial.v1B\x0eDebitNoteProtoP\x01ZHgithub.com/karibu-cap/sabitou/protos/gen/go/rpc/financial/v1;financialv1\xa2\x02\x03FXX\xaa\x02\fFinancial.V1\xca\x02\fFinancial\\V1\xe2\x02\x18Financial\\V1\\GPBMetadata\xea\x02\rFinancial::V1b\x06proto3"

var (
	file_financial_v1_debit_note_proto_rawDescOnce sync.Once
	file_financial_v1_debit_note_proto_rawDescData []byte
)

func file_financial_v1_debit_note_proto_rawDescGZIP() []byte {
	file_financial_v1_debit_note_proto_rawDescOnce.Do(func() {
		file_financial_v1_debit_note_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_financial_v1_debit_note_proto_rawDesc), len(file_financial_v1_debit_note_proto_rawDesc)))
	})
	return file_financial_v1_debit_note_proto_rawDescData
}

var file_financial_v1_debit_note_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_financial_v1_debit_note_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_financial_v1_debit_note_proto_goTypes = []any{
	(DebitNoteType)(0),            // 0: financial.v1.DebitNoteType
	(DebitNoteStatus)(0),          // 1: financial.v1.DebitNoteStatus
	(*DebitNote)(nil),             // 2: financial.v1.DebitNote
	(*InvoiceLineItem)(nil),       // 3: financial.v1.InvoiceLineItem
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_financial_v1_debit_note_proto_depIdxs = []int32{
	0, // 0: financial.v1.DebitNote.debit_type:type_name -> financial.v1.DebitNoteType
	1, // 1: financial.v1.DebitNote.status:type_name -> financial.v1.DebitNoteStatus
	3, // 2: financial.v1.DebitNote.items:type_name -> financial.v1.InvoiceLineItem
	4, // 3: financial.v1.DebitNote.issue_date:type_name -> google.protobuf.Timestamp
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_financial_v1_debit_note_proto_init() }
func file_financial_v1_debit_note_proto_init() {
	if File_financial_v1_debit_note_proto != nil {
		return
	}
	file_financial_v1_financial_utils_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_financial_v1_debit_note_proto_rawDesc), len(file_financial_v1_debit_note_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_financial_v1_debit_note_proto_goTypes,
		DependencyIndexes: file_financial_v1_debit_note_proto_depIdxs,
		EnumInfos:         file_financial_v1_debit_note_proto_enumTypes,
		MessageInfos:      file_financial_v1_debit_note_proto_msgTypes,
	}.Build()
	File_financial_v1_debit_note_proto = out.File
	file_financial_v1_debit_note_proto_goTypes = nil
	file_financial_v1_debit_note_proto_depIdxs = nil
}
