// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: inventory/v1/inventory.proto

package inventoryv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/karibu-cap/sabitou/protos/gen/go/rpc/audits/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BatchStatus int32

const (
	BatchStatus_BATCH_STATUS_UNSPECIFIED BatchStatus = 0
	BatchStatus_BATCH_STATUS_ACTIVE      BatchStatus = 1 // Available for use/sale
	BatchStatus_BATCH_STATUS_QUARANTINE  BatchStatus = 2 // Under inspection
	BatchStatus_BATCH_STATUS_EXPIRED     BatchStatus = 3 // Past expiration
	BatchStatus_BATCH_STATUS_CONSUMED    BatchStatus = 4 // Fully used/sold
)

// Enum value maps for BatchStatus.
var (
	BatchStatus_name = map[int32]string{
		0: "BATCH_STATUS_UNSPECIFIED",
		1: "BATCH_STATUS_ACTIVE",
		2: "BATCH_STATUS_QUARANTINE",
		3: "BATCH_STATUS_EXPIRED",
		4: "BATCH_STATUS_CONSUMED",
	}
	BatchStatus_value = map[string]int32{
		"BATCH_STATUS_UNSPECIFIED": 0,
		"BATCH_STATUS_ACTIVE":      1,
		"BATCH_STATUS_QUARANTINE":  2,
		"BATCH_STATUS_EXPIRED":     3,
		"BATCH_STATUS_CONSUMED":    4,
	}
)

func (x BatchStatus) Enum() *BatchStatus {
	p := new(BatchStatus)
	*p = x
	return p
}

func (x BatchStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BatchStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_inventory_v1_inventory_proto_enumTypes[0].Descriptor()
}

func (BatchStatus) Type() protoreflect.EnumType {
	return &file_inventory_v1_inventory_proto_enumTypes[0]
}

func (x BatchStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BatchStatus.Descriptor instead.
func (BatchStatus) EnumDescriptor() ([]byte, []int) {
	return file_inventory_v1_inventory_proto_rawDescGZIP(), []int{0}
}

type StockStatus int32

const (
	StockStatus_STOCK_STATUS_UNSPECIFIED  StockStatus = 0
	StockStatus_STOCK_STATUS_LOW          StockStatus = 1
	StockStatus_STOCK_STATUS_OK           StockStatus = 2
	StockStatus_STOCK_STATUS_OUT_OF_STOCK StockStatus = 3
)

// Enum value maps for StockStatus.
var (
	StockStatus_name = map[int32]string{
		0: "STOCK_STATUS_UNSPECIFIED",
		1: "STOCK_STATUS_LOW",
		2: "STOCK_STATUS_OK",
		3: "STOCK_STATUS_OUT_OF_STOCK",
	}
	StockStatus_value = map[string]int32{
		"STOCK_STATUS_UNSPECIFIED":  0,
		"STOCK_STATUS_LOW":          1,
		"STOCK_STATUS_OK":           2,
		"STOCK_STATUS_OUT_OF_STOCK": 3,
	}
)

func (x StockStatus) Enum() *StockStatus {
	p := new(StockStatus)
	*p = x
	return p
}

func (x StockStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StockStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_inventory_v1_inventory_proto_enumTypes[1].Descriptor()
}

func (StockStatus) Type() protoreflect.EnumType {
	return &file_inventory_v1_inventory_proto_enumTypes[1]
}

func (x StockStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StockStatus.Descriptor instead.
func (StockStatus) EnumDescriptor() ([]byte, []int) {
	return file_inventory_v1_inventory_proto_rawDescGZIP(), []int{1}
}

// *
// Batch represents a lot of products with specific attributes like expiration.
//
// Fix: New message added for lot tracking. Each batch can have its own quantity, expiration date, and is linked to a product and warehouse.
// InventoryLevel now aggregates from batches, but batches provide detailed quantity per lot.
//
// Example:
//
//	batch_id: "BATCH-2025-001"
//	product_id: "PRD-001"
//	warehouse_id: "WH-001"
//	quantity: 50.0
//	expiration_date: 2026-09-29T00:00:00Z
//	received_at: 2025-09-29T10:30:00Z
type Batch struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	DocumentId          string                 `protobuf:"bytes,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`                              // Unique batch/lot ID: "BATCH-2025-001"
	ProductId           string                 `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                                 // Which product this batch is for
	WarehouseId         string                 `protobuf:"bytes,3,opt,name=warehouse_id,json=warehouseId,proto3" json:"warehouse_id,omitempty"`                           // Which warehouse stores this batch
	Quantity            int32                  `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`                                                   // Quantity in this specific batch
	ExpirationDate      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=expiration_date,json=expirationDate,proto3" json:"expiration_date,omitempty"`                  // Expiration date for this batch
	ReceivedAt          *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=received_at,json=receivedAt,proto3" json:"received_at,omitempty"`                              // When the batch was received
	SupplierBatchNumber string                 `protobuf:"bytes,7,opt,name=supplier_batch_number,json=supplierBatchNumber,proto3" json:"supplier_batch_number,omitempty"` // Supplier's reference number
	Status              BatchStatus            `protobuf:"varint,8,opt,name=status,proto3,enum=inventory.v1.BatchStatus" json:"status,omitempty"`                         // e.g., Active, Expired
	Notes               string                 `protobuf:"bytes,9,opt,name=notes,proto3" json:"notes,omitempty"`                                                          // Additional details
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Batch) Reset() {
	*x = Batch{}
	mi := &file_inventory_v1_inventory_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Batch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Batch) ProtoMessage() {}

func (x *Batch) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_inventory_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Batch.ProtoReflect.Descriptor instead.
func (*Batch) Descriptor() ([]byte, []int) {
	return file_inventory_v1_inventory_proto_rawDescGZIP(), []int{0}
}

func (x *Batch) GetDocumentId() string {
	if x != nil {
		return x.DocumentId
	}
	return ""
}

func (x *Batch) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *Batch) GetWarehouseId() string {
	if x != nil {
		return x.WarehouseId
	}
	return ""
}

func (x *Batch) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Batch) GetExpirationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpirationDate
	}
	return nil
}

func (x *Batch) GetReceivedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReceivedAt
	}
	return nil
}

func (x *Batch) GetSupplierBatchNumber() string {
	if x != nil {
		return x.SupplierBatchNumber
	}
	return ""
}

func (x *Batch) GetStatus() BatchStatus {
	if x != nil {
		return x.Status
	}
	return BatchStatus_BATCH_STATUS_UNSPECIFIED
}

func (x *Batch) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

// *
// InventoryLevel tracks how much stock exists in each warehouse.
// This is the current state, updated by various documents.
//
// Fixes: Added repeated batches for lot-level details (quantity per lot, expiration).
// The quantity_available is now the sum of batch quantities (computed).
// Added min_threshold per warehouse for the product.
//
// Example:
//
//	product_id: "PRD-001"
//	store_id: "WH-001"
//	quantity_available: 50
//	quantity_reserved: 10 (in pending orders)
//	quantity_in_transit: 20 (being delivered)
//	min_threshold: 15.0
//	last_updated: 2025-09-29T10:30:00Z
//	batches: [Batch1 with qty 30 exp 2026-01-01, Batch2 with qty 20 exp 2026-06-01]
//
// Note we can only have one InventoryLevel per (product_id, supplier_id).
// Reason why we don't add it directly to Storeproduct is because the Storeproduct can be handler by multiple supplier.
// Example: On product Coffee can be provide by 2 different supplier.
type InventoryLevel struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The product id to get level.
	StoreProductId string `protobuf:"bytes,1,opt,name=store_product_id,json=storeProductId,proto3" json:"store_product_id,omitempty"`
	// The warehouse id to get level.
	StoreId string `protobuf:"bytes,2,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	// Ready to sell/use (sum of batch quantities)
	QuantityAvailable int32 `protobuf:"varint,3,opt,name=quantity_available,json=quantityAvailable,proto3" json:"quantity_available,omitempty"`
	// Allocated to orders not yet fulfilled
	QuantityReserved int32 `protobuf:"varint,4,opt,name=quantity_reserved,json=quantityReserved,proto3" json:"quantity_reserved,omitempty"`
	// Being delivered here
	QuantityInTransit int32 `protobuf:"varint,5,opt,name=quantity_in_transit,json=quantityInTransit,proto3" json:"quantity_in_transit,omitempty"`
	// Minimum stock threshold for this product in this warehouse
	MinThreshold int32                  `protobuf:"varint,8,opt,name=min_threshold,json=minThreshold,proto3" json:"min_threshold,omitempty"`
	LastUpdated  *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	// Who made last change
	LastUpdatedByUserId string `protobuf:"bytes,7,opt,name=last_updated_by_user_id,json=lastUpdatedByUserId,proto3" json:"last_updated_by_user_id,omitempty"`
	// Detailed batches/lots for this product in this store
	Batches       []*Batch `protobuf:"bytes,9,rep,name=batches,proto3" json:"batches,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InventoryLevel) Reset() {
	*x = InventoryLevel{}
	mi := &file_inventory_v1_inventory_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InventoryLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryLevel) ProtoMessage() {}

func (x *InventoryLevel) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_inventory_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryLevel.ProtoReflect.Descriptor instead.
func (*InventoryLevel) Descriptor() ([]byte, []int) {
	return file_inventory_v1_inventory_proto_rawDescGZIP(), []int{1}
}

func (x *InventoryLevel) GetStoreProductId() string {
	if x != nil {
		return x.StoreProductId
	}
	return ""
}

func (x *InventoryLevel) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *InventoryLevel) GetQuantityAvailable() int32 {
	if x != nil {
		return x.QuantityAvailable
	}
	return 0
}

func (x *InventoryLevel) GetQuantityReserved() int32 {
	if x != nil {
		return x.QuantityReserved
	}
	return 0
}

func (x *InventoryLevel) GetQuantityInTransit() int32 {
	if x != nil {
		return x.QuantityInTransit
	}
	return 0
}

func (x *InventoryLevel) GetMinThreshold() int32 {
	if x != nil {
		return x.MinThreshold
	}
	return 0
}

func (x *InventoryLevel) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

func (x *InventoryLevel) GetLastUpdatedByUserId() string {
	if x != nil {
		return x.LastUpdatedByUserId
	}
	return ""
}

func (x *InventoryLevel) GetBatches() []*Batch {
	if x != nil {
		return x.Batches
	}
	return nil
}

type InventoryLevelWithProduct struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Level         *InventoryLevel        `protobuf:"bytes,1,opt,name=level,proto3" json:"level,omitempty"`
	Product       *StoreProduct          `protobuf:"bytes,2,opt,name=product,proto3" json:"product,omitempty"`
	GlobalProduct *GlobalProduct         `protobuf:"bytes,3,opt,name=globalProduct,proto3" json:"globalProduct,omitempty"`
	StockValue    int32                  `protobuf:"varint,4,opt,name=stock_value,json=stockValue,proto3" json:"stock_value,omitempty"` // quantity * product.unit_price
	StockStatus   StockStatus            `protobuf:"varint,5,opt,name=stockStatus,proto3,enum=inventory.v1.StockStatus" json:"stockStatus,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InventoryLevelWithProduct) Reset() {
	*x = InventoryLevelWithProduct{}
	mi := &file_inventory_v1_inventory_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InventoryLevelWithProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryLevelWithProduct) ProtoMessage() {}

func (x *InventoryLevelWithProduct) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_inventory_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryLevelWithProduct.ProtoReflect.Descriptor instead.
func (*InventoryLevelWithProduct) Descriptor() ([]byte, []int) {
	return file_inventory_v1_inventory_proto_rawDescGZIP(), []int{2}
}

func (x *InventoryLevelWithProduct) GetLevel() *InventoryLevel {
	if x != nil {
		return x.Level
	}
	return nil
}

func (x *InventoryLevelWithProduct) GetProduct() *StoreProduct {
	if x != nil {
		return x.Product
	}
	return nil
}

func (x *InventoryLevelWithProduct) GetGlobalProduct() *GlobalProduct {
	if x != nil {
		return x.GlobalProduct
	}
	return nil
}

func (x *InventoryLevelWithProduct) GetStockValue() int32 {
	if x != nil {
		return x.StockValue
	}
	return 0
}

func (x *InventoryLevelWithProduct) GetStockStatus() StockStatus {
	if x != nil {
		return x.StockStatus
	}
	return StockStatus_STOCK_STATUS_UNSPECIFIED
}

type GetInventoryTransactionHistoryRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	StoreId         *string                `protobuf:"bytes,1,opt,name=store_id,json=storeId,proto3,oneof" json:"store_id,omitempty"`                                                         // Optional
	ProductId       *string                `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3,oneof" json:"product_id,omitempty"`                                                   // Optional
	TransactionType *v1.TransactionType    `protobuf:"varint,3,opt,name=transaction_type,json=transactionType,proto3,enum=audits.v1.TransactionType,oneof" json:"transaction_type,omitempty"` // Optional
	StartDate       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate         *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	PageSize        int32                  `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageNumber      int32                  `protobuf:"varint,7,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetInventoryTransactionHistoryRequest) Reset() {
	*x = GetInventoryTransactionHistoryRequest{}
	mi := &file_inventory_v1_inventory_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInventoryTransactionHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInventoryTransactionHistoryRequest) ProtoMessage() {}

func (x *GetInventoryTransactionHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_inventory_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInventoryTransactionHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetInventoryTransactionHistoryRequest) Descriptor() ([]byte, []int) {
	return file_inventory_v1_inventory_proto_rawDescGZIP(), []int{3}
}

func (x *GetInventoryTransactionHistoryRequest) GetStoreId() string {
	if x != nil && x.StoreId != nil {
		return *x.StoreId
	}
	return ""
}

func (x *GetInventoryTransactionHistoryRequest) GetProductId() string {
	if x != nil && x.ProductId != nil {
		return *x.ProductId
	}
	return ""
}

func (x *GetInventoryTransactionHistoryRequest) GetTransactionType() v1.TransactionType {
	if x != nil && x.TransactionType != nil {
		return *x.TransactionType
	}
	return v1.TransactionType(0)
}

func (x *GetInventoryTransactionHistoryRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *GetInventoryTransactionHistoryRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *GetInventoryTransactionHistoryRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetInventoryTransactionHistoryRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type GetInventoryTransactionHistoryResponse struct {
	state            protoimpl.MessageState     `protogen:"open.v1"`
	Transactions     []*v1.InventoryTransaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	TotalCount       int32                      `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	TotalQuantityIn  float64                    `protobuf:"fixed64,3,opt,name=total_quantity_in,json=totalQuantityIn,proto3" json:"total_quantity_in,omitempty"`    // Sum of positive changes
	TotalQuantityOut float64                    `protobuf:"fixed64,4,opt,name=total_quantity_out,json=totalQuantityOut,proto3" json:"total_quantity_out,omitempty"` // Sum of negative changes
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetInventoryTransactionHistoryResponse) Reset() {
	*x = GetInventoryTransactionHistoryResponse{}
	mi := &file_inventory_v1_inventory_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInventoryTransactionHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInventoryTransactionHistoryResponse) ProtoMessage() {}

func (x *GetInventoryTransactionHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_inventory_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInventoryTransactionHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetInventoryTransactionHistoryResponse) Descriptor() ([]byte, []int) {
	return file_inventory_v1_inventory_proto_rawDescGZIP(), []int{4}
}

func (x *GetInventoryTransactionHistoryResponse) GetTransactions() []*v1.InventoryTransaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *GetInventoryTransactionHistoryResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *GetInventoryTransactionHistoryResponse) GetTotalQuantityIn() float64 {
	if x != nil {
		return x.TotalQuantityIn
	}
	return 0
}

func (x *GetInventoryTransactionHistoryResponse) GetTotalQuantityOut() float64 {
	if x != nil {
		return x.TotalQuantityOut
	}
	return 0
}

type GetProductInventoryLevelsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProductId     string                 `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProductInventoryLevelsRequest) Reset() {
	*x = GetProductInventoryLevelsRequest{}
	mi := &file_inventory_v1_inventory_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProductInventoryLevelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductInventoryLevelsRequest) ProtoMessage() {}

func (x *GetProductInventoryLevelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_inventory_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductInventoryLevelsRequest.ProtoReflect.Descriptor instead.
func (*GetProductInventoryLevelsRequest) Descriptor() ([]byte, []int) {
	return file_inventory_v1_inventory_proto_rawDescGZIP(), []int{5}
}

func (x *GetProductInventoryLevelsRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type GetProductInventoryLevelsResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Levels         []*InventoryLevel      `protobuf:"bytes,1,rep,name=levels,proto3" json:"levels,omitempty"`
	TotalAvailable int32                  `protobuf:"varint,2,opt,name=total_available,json=totalAvailable,proto3" json:"total_available,omitempty"`
	TotalReserved  int32                  `protobuf:"varint,3,opt,name=total_reserved,json=totalReserved,proto3" json:"total_reserved,omitempty"`
	TotalInTransit int32                  `protobuf:"varint,4,opt,name=total_in_transit,json=totalInTransit,proto3" json:"total_in_transit,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetProductInventoryLevelsResponse) Reset() {
	*x = GetProductInventoryLevelsResponse{}
	mi := &file_inventory_v1_inventory_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProductInventoryLevelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductInventoryLevelsResponse) ProtoMessage() {}

func (x *GetProductInventoryLevelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_inventory_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductInventoryLevelsResponse.ProtoReflect.Descriptor instead.
func (*GetProductInventoryLevelsResponse) Descriptor() ([]byte, []int) {
	return file_inventory_v1_inventory_proto_rawDescGZIP(), []int{6}
}

func (x *GetProductInventoryLevelsResponse) GetLevels() []*InventoryLevel {
	if x != nil {
		return x.Levels
	}
	return nil
}

func (x *GetProductInventoryLevelsResponse) GetTotalAvailable() int32 {
	if x != nil {
		return x.TotalAvailable
	}
	return 0
}

func (x *GetProductInventoryLevelsResponse) GetTotalReserved() int32 {
	if x != nil {
		return x.TotalReserved
	}
	return 0
}

func (x *GetProductInventoryLevelsResponse) GetTotalInTransit() int32 {
	if x != nil {
		return x.TotalInTransit
	}
	return 0
}

type CheckProductAvailabilityRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ProductId      string                 `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	StoreId        string                 `protobuf:"bytes,2,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	QuantityNeeded float64                `protobuf:"fixed64,3,opt,name=quantity_needed,json=quantityNeeded,proto3" json:"quantity_needed,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CheckProductAvailabilityRequest) Reset() {
	*x = CheckProductAvailabilityRequest{}
	mi := &file_inventory_v1_inventory_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckProductAvailabilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckProductAvailabilityRequest) ProtoMessage() {}

func (x *CheckProductAvailabilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_inventory_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckProductAvailabilityRequest.ProtoReflect.Descriptor instead.
func (*CheckProductAvailabilityRequest) Descriptor() ([]byte, []int) {
	return file_inventory_v1_inventory_proto_rawDescGZIP(), []int{7}
}

func (x *CheckProductAvailabilityRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *CheckProductAvailabilityRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *CheckProductAvailabilityRequest) GetQuantityNeeded() float64 {
	if x != nil {
		return x.QuantityNeeded
	}
	return 0
}

type CheckProductAvailabilityResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	IsAvailable       bool                   `protobuf:"varint,1,opt,name=is_available,json=isAvailable,proto3" json:"is_available,omitempty"`
	QuantityAvailable float64                `protobuf:"fixed64,2,opt,name=quantity_available,json=quantityAvailable,proto3" json:"quantity_available,omitempty"`
	QuantityNeeded    float64                `protobuf:"fixed64,3,opt,name=quantity_needed,json=quantityNeeded,proto3" json:"quantity_needed,omitempty"`
	Shortage          float64                `protobuf:"fixed64,4,opt,name=shortage,proto3" json:"shortage,omitempty"` // If not available
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CheckProductAvailabilityResponse) Reset() {
	*x = CheckProductAvailabilityResponse{}
	mi := &file_inventory_v1_inventory_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckProductAvailabilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckProductAvailabilityResponse) ProtoMessage() {}

func (x *CheckProductAvailabilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_inventory_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckProductAvailabilityResponse.ProtoReflect.Descriptor instead.
func (*CheckProductAvailabilityResponse) Descriptor() ([]byte, []int) {
	return file_inventory_v1_inventory_proto_rawDescGZIP(), []int{8}
}

func (x *CheckProductAvailabilityResponse) GetIsAvailable() bool {
	if x != nil {
		return x.IsAvailable
	}
	return false
}

func (x *CheckProductAvailabilityResponse) GetQuantityAvailable() float64 {
	if x != nil {
		return x.QuantityAvailable
	}
	return 0
}

func (x *CheckProductAvailabilityResponse) GetQuantityNeeded() float64 {
	if x != nil {
		return x.QuantityNeeded
	}
	return 0
}

func (x *CheckProductAvailabilityResponse) GetShortage() float64 {
	if x != nil {
		return x.Shortage
	}
	return 0
}

type GetLowStockItemsRequest struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	StoreId string                 `protobuf:"bytes,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	// Min stock level to flag as low
	Threshold     *int32  `protobuf:"varint,2,opt,name=threshold,proto3,oneof" json:"threshold,omitempty"`
	CategoryId    *string `protobuf:"bytes,3,opt,name=category_id,json=categoryId,proto3,oneof" json:"category_id,omitempty"`
	SupplierId    *string `protobuf:"bytes,4,opt,name=supplier_id,json=supplierId,proto3,oneof" json:"supplier_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLowStockItemsRequest) Reset() {
	*x = GetLowStockItemsRequest{}
	mi := &file_inventory_v1_inventory_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLowStockItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLowStockItemsRequest) ProtoMessage() {}

func (x *GetLowStockItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_inventory_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLowStockItemsRequest.ProtoReflect.Descriptor instead.
func (*GetLowStockItemsRequest) Descriptor() ([]byte, []int) {
	return file_inventory_v1_inventory_proto_rawDescGZIP(), []int{9}
}

func (x *GetLowStockItemsRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *GetLowStockItemsRequest) GetThreshold() int32 {
	if x != nil && x.Threshold != nil {
		return *x.Threshold
	}
	return 0
}

func (x *GetLowStockItemsRequest) GetCategoryId() string {
	if x != nil && x.CategoryId != nil {
		return *x.CategoryId
	}
	return ""
}

func (x *GetLowStockItemsRequest) GetSupplierId() string {
	if x != nil && x.SupplierId != nil {
		return *x.SupplierId
	}
	return ""
}

type GetLowStockItemsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LowStockItems []*InventoryLevel      `protobuf:"bytes,1,rep,name=low_stock_items,json=lowStockItems,proto3" json:"low_stock_items,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLowStockItemsResponse) Reset() {
	*x = GetLowStockItemsResponse{}
	mi := &file_inventory_v1_inventory_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLowStockItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLowStockItemsResponse) ProtoMessage() {}

func (x *GetLowStockItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_inventory_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLowStockItemsResponse.ProtoReflect.Descriptor instead.
func (*GetLowStockItemsResponse) Descriptor() ([]byte, []int) {
	return file_inventory_v1_inventory_proto_rawDescGZIP(), []int{10}
}

func (x *GetLowStockItemsResponse) GetLowStockItems() []*InventoryLevel {
	if x != nil {
		return x.LowStockItems
	}
	return nil
}

func (x *GetLowStockItemsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type GetResourceInventoryRequest struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	StoreId string                 `protobuf:"bytes,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	// Specific product, if omitted: full snapshot
	ProductId *string `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3,oneof" json:"product_id,omitempty"`
	// Historical snapshot
	AsOfDate      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=as_of_date,json=asOfDate,proto3,oneof" json:"as_of_date,omitempty"`
	SupplierId    *string                `protobuf:"bytes,4,opt,name=supplier_id,json=supplierId,proto3,oneof" json:"supplier_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResourceInventoryRequest) Reset() {
	*x = GetResourceInventoryRequest{}
	mi := &file_inventory_v1_inventory_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResourceInventoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourceInventoryRequest) ProtoMessage() {}

func (x *GetResourceInventoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_inventory_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourceInventoryRequest.ProtoReflect.Descriptor instead.
func (*GetResourceInventoryRequest) Descriptor() ([]byte, []int) {
	return file_inventory_v1_inventory_proto_rawDescGZIP(), []int{11}
}

func (x *GetResourceInventoryRequest) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *GetResourceInventoryRequest) GetProductId() string {
	if x != nil && x.ProductId != nil {
		return *x.ProductId
	}
	return ""
}

func (x *GetResourceInventoryRequest) GetAsOfDate() *timestamppb.Timestamp {
	if x != nil {
		return x.AsOfDate
	}
	return nil
}

func (x *GetResourceInventoryRequest) GetSupplierId() string {
	if x != nil && x.SupplierId != nil {
		return *x.SupplierId
	}
	return ""
}

type GetResourceInventoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*InventoryLevel      `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalQuantity float64                `protobuf:"fixed64,2,opt,name=total_quantity,json=totalQuantity,proto3" json:"total_quantity,omitempty"`
	SnapshotDate  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=snapshot_date,json=snapshotDate,proto3" json:"snapshot_date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResourceInventoryResponse) Reset() {
	*x = GetResourceInventoryResponse{}
	mi := &file_inventory_v1_inventory_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResourceInventoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourceInventoryResponse) ProtoMessage() {}

func (x *GetResourceInventoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_inventory_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourceInventoryResponse.ProtoReflect.Descriptor instead.
func (*GetResourceInventoryResponse) Descriptor() ([]byte, []int) {
	return file_inventory_v1_inventory_proto_rawDescGZIP(), []int{12}
}

func (x *GetResourceInventoryResponse) GetItems() []*InventoryLevel {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetResourceInventoryResponse) GetTotalQuantity() float64 {
	if x != nil {
		return x.TotalQuantity
	}
	return 0
}

func (x *GetResourceInventoryResponse) GetSnapshotDate() *timestamppb.Timestamp {
	if x != nil {
		return x.SnapshotDate
	}
	return nil
}

type GetProductTransactionHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProductId     string                 `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	StoreId       *string                `protobuf:"bytes,2,opt,name=store_id,json=storeId,proto3,oneof" json:"store_id,omitempty"` // Optional filter
	StartDate     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	PageSize      int32                  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageNumber    int32                  `protobuf:"varint,6,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProductTransactionHistoryRequest) Reset() {
	*x = GetProductTransactionHistoryRequest{}
	mi := &file_inventory_v1_inventory_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProductTransactionHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductTransactionHistoryRequest) ProtoMessage() {}

func (x *GetProductTransactionHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_inventory_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductTransactionHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetProductTransactionHistoryRequest) Descriptor() ([]byte, []int) {
	return file_inventory_v1_inventory_proto_rawDescGZIP(), []int{13}
}

func (x *GetProductTransactionHistoryRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *GetProductTransactionHistoryRequest) GetStoreId() string {
	if x != nil && x.StoreId != nil {
		return *x.StoreId
	}
	return ""
}

func (x *GetProductTransactionHistoryRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *GetProductTransactionHistoryRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *GetProductTransactionHistoryRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetProductTransactionHistoryRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type GetProductTransactionHistoryResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Transactions  []*v1.InventoryTransaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	TotalCount    int32                      `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProductTransactionHistoryResponse) Reset() {
	*x = GetProductTransactionHistoryResponse{}
	mi := &file_inventory_v1_inventory_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProductTransactionHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductTransactionHistoryResponse) ProtoMessage() {}

func (x *GetProductTransactionHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_inventory_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductTransactionHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetProductTransactionHistoryResponse) Descriptor() ([]byte, []int) {
	return file_inventory_v1_inventory_proto_rawDescGZIP(), []int{14}
}

func (x *GetProductTransactionHistoryResponse) GetTransactions() []*v1.InventoryTransaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *GetProductTransactionHistoryResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

var File_inventory_v1_inventory_proto protoreflect.FileDescriptor

const file_inventory_v1_inventory_proto_rawDesc = "" +
	"\n" +
	"\x1cinventory/v1/inventory.proto\x12\finventory.v1\x1a%audits/v1/inventory_transaction.proto\x1a\x1bbuf/validate/validate.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a inventory/v1/store_product.proto\"\x8d\x03\n" +
	"\x05Batch\x12'\n" +
	"\vdocument_id\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\n" +
	"documentId\x12\x1d\n" +
	"\n" +
	"product_id\x18\x02 \x01(\tR\tproductId\x12!\n" +
	"\fwarehouse_id\x18\x03 \x01(\tR\vwarehouseId\x12\x1a\n" +
	"\bquantity\x18\x04 \x01(\x05R\bquantity\x12C\n" +
	"\x0fexpiration_date\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x0eexpirationDate\x12;\n" +
	"\vreceived_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"receivedAt\x122\n" +
	"\x15supplier_batch_number\x18\a \x01(\tR\x13supplierBatchNumber\x121\n" +
	"\x06status\x18\b \x01(\x0e2\x19.inventory.v1.BatchStatusR\x06status\x12\x14\n" +
	"\x05notes\x18\t \x01(\tR\x05notes\"\xaa\x03\n" +
	"\x0eInventoryLevel\x12(\n" +
	"\x10store_product_id\x18\x01 \x01(\tR\x0estoreProductId\x12\x19\n" +
	"\bstore_id\x18\x02 \x01(\tR\astoreId\x12-\n" +
	"\x12quantity_available\x18\x03 \x01(\x05R\x11quantityAvailable\x12+\n" +
	"\x11quantity_reserved\x18\x04 \x01(\x05R\x10quantityReserved\x12.\n" +
	"\x13quantity_in_transit\x18\x05 \x01(\x05R\x11quantityInTransit\x12#\n" +
	"\rmin_threshold\x18\b \x01(\x05R\fminThreshold\x12=\n" +
	"\flast_updated\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\vlastUpdated\x124\n" +
	"\x17last_updated_by_user_id\x18\a \x01(\tR\x13lastUpdatedByUserId\x12-\n" +
	"\abatches\x18\t \x03(\v2\x13.inventory.v1.BatchR\abatches\"\xa6\x02\n" +
	"\x19InventoryLevelWithProduct\x122\n" +
	"\x05level\x18\x01 \x01(\v2\x1c.inventory.v1.InventoryLevelR\x05level\x124\n" +
	"\aproduct\x18\x02 \x01(\v2\x1a.inventory.v1.StoreProductR\aproduct\x12A\n" +
	"\rglobalProduct\x18\x03 \x01(\v2\x1b.inventory.v1.GlobalProductR\rglobalProduct\x12\x1f\n" +
	"\vstock_value\x18\x04 \x01(\x05R\n" +
	"stockValue\x12;\n" +
	"\vstockStatus\x18\x05 \x01(\x0e2\x19.inventory.v1.StockStatusR\vstockStatus\"\x98\x03\n" +
	"%GetInventoryTransactionHistoryRequest\x12\x1e\n" +
	"\bstore_id\x18\x01 \x01(\tH\x00R\astoreId\x88\x01\x01\x12\"\n" +
	"\n" +
	"product_id\x18\x02 \x01(\tH\x01R\tproductId\x88\x01\x01\x12J\n" +
	"\x10transaction_type\x18\x03 \x01(\x0e2\x1a.audits.v1.TransactionTypeH\x02R\x0ftransactionType\x88\x01\x01\x129\n" +
	"\n" +
	"start_date\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tstartDate\x125\n" +
	"\bend_date\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\aendDate\x12\x1b\n" +
	"\tpage_size\x18\x06 \x01(\x05R\bpageSize\x12\x1f\n" +
	"\vpage_number\x18\a \x01(\x05R\n" +
	"pageNumberB\v\n" +
	"\t_store_idB\r\n" +
	"\v_product_idB\x13\n" +
	"\x11_transaction_type\"\xe8\x01\n" +
	"&GetInventoryTransactionHistoryResponse\x12C\n" +
	"\ftransactions\x18\x01 \x03(\v2\x1f.audits.v1.InventoryTransactionR\ftransactions\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12*\n" +
	"\x11total_quantity_in\x18\x03 \x01(\x01R\x0ftotalQuantityIn\x12,\n" +
	"\x12total_quantity_out\x18\x04 \x01(\x01R\x10totalQuantityOut\"A\n" +
	" GetProductInventoryLevelsRequest\x12\x1d\n" +
	"\n" +
	"product_id\x18\x01 \x01(\tR\tproductId\"\xd3\x01\n" +
	"!GetProductInventoryLevelsResponse\x124\n" +
	"\x06levels\x18\x01 \x03(\v2\x1c.inventory.v1.InventoryLevelR\x06levels\x12'\n" +
	"\x0ftotal_available\x18\x02 \x01(\x05R\x0etotalAvailable\x12%\n" +
	"\x0etotal_reserved\x18\x03 \x01(\x05R\rtotalReserved\x12(\n" +
	"\x10total_in_transit\x18\x04 \x01(\x05R\x0etotalInTransit\"\x84\x01\n" +
	"\x1fCheckProductAvailabilityRequest\x12\x1d\n" +
	"\n" +
	"product_id\x18\x01 \x01(\tR\tproductId\x12\x19\n" +
	"\bstore_id\x18\x02 \x01(\tR\astoreId\x12'\n" +
	"\x0fquantity_needed\x18\x03 \x01(\x01R\x0equantityNeeded\"\xb9\x01\n" +
	" CheckProductAvailabilityResponse\x12!\n" +
	"\fis_available\x18\x01 \x01(\bR\visAvailable\x12-\n" +
	"\x12quantity_available\x18\x02 \x01(\x01R\x11quantityAvailable\x12'\n" +
	"\x0fquantity_needed\x18\x03 \x01(\x01R\x0equantityNeeded\x12\x1a\n" +
	"\bshortage\x18\x04 \x01(\x01R\bshortage\"\xd9\x01\n" +
	"\x17GetLowStockItemsRequest\x12!\n" +
	"\bstore_id\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\astoreId\x12!\n" +
	"\tthreshold\x18\x02 \x01(\x05H\x00R\tthreshold\x88\x01\x01\x12$\n" +
	"\vcategory_id\x18\x03 \x01(\tH\x01R\n" +
	"categoryId\x88\x01\x01\x12$\n" +
	"\vsupplier_id\x18\x04 \x01(\tH\x02R\n" +
	"supplierId\x88\x01\x01B\f\n" +
	"\n" +
	"_thresholdB\x0e\n" +
	"\f_category_idB\x0e\n" +
	"\f_supplier_id\"\x81\x01\n" +
	"\x18GetLowStockItemsResponse\x12D\n" +
	"\x0flow_stock_items\x18\x01 \x03(\v2\x1c.inventory.v1.InventoryLevelR\rlowStockItems\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"\xf7\x01\n" +
	"\x1bGetResourceInventoryRequest\x12!\n" +
	"\bstore_id\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\astoreId\x12\"\n" +
	"\n" +
	"product_id\x18\x02 \x01(\tH\x00R\tproductId\x88\x01\x01\x12=\n" +
	"\n" +
	"as_of_date\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampH\x01R\basOfDate\x88\x01\x01\x12$\n" +
	"\vsupplier_id\x18\x04 \x01(\tH\x02R\n" +
	"supplierId\x88\x01\x01B\r\n" +
	"\v_product_idB\r\n" +
	"\v_as_of_dateB\x0e\n" +
	"\f_supplier_id\"\xba\x01\n" +
	"\x1cGetResourceInventoryResponse\x122\n" +
	"\x05items\x18\x01 \x03(\v2\x1c.inventory.v1.InventoryLevelR\x05items\x12%\n" +
	"\x0etotal_quantity\x18\x02 \x01(\x01R\rtotalQuantity\x12?\n" +
	"\rsnapshot_date\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\fsnapshotDate\"\xa1\x02\n" +
	"#GetProductTransactionHistoryRequest\x12\x1d\n" +
	"\n" +
	"product_id\x18\x01 \x01(\tR\tproductId\x12\x1e\n" +
	"\bstore_id\x18\x02 \x01(\tH\x00R\astoreId\x88\x01\x01\x129\n" +
	"\n" +
	"start_date\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tstartDate\x125\n" +
	"\bend_date\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\aendDate\x12\x1b\n" +
	"\tpage_size\x18\x05 \x01(\x05R\bpageSize\x12\x1f\n" +
	"\vpage_number\x18\x06 \x01(\x05R\n" +
	"pageNumberB\v\n" +
	"\t_store_id\"\x8c\x01\n" +
	"$GetProductTransactionHistoryResponse\x12C\n" +
	"\ftransactions\x18\x01 \x03(\v2\x1f.audits.v1.InventoryTransactionR\ftransactions\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount*\x96\x01\n" +
	"\vBatchStatus\x12\x1c\n" +
	"\x18BATCH_STATUS_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13BATCH_STATUS_ACTIVE\x10\x01\x12\x1b\n" +
	"\x17BATCH_STATUS_QUARANTINE\x10\x02\x12\x18\n" +
	"\x14BATCH_STATUS_EXPIRED\x10\x03\x12\x19\n" +
	"\x15BATCH_STATUS_CONSUMED\x10\x04*u\n" +
	"\vStockStatus\x12\x1c\n" +
	"\x18STOCK_STATUS_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10STOCK_STATUS_LOW\x10\x01\x12\x13\n" +
	"\x0fSTOCK_STATUS_OK\x10\x02\x12\x1d\n" +
	"\x19STOCK_STATUS_OUT_OF_STOCK\x10\x032\xf3\x05\n" +
	"\x10InventoryService\x12|\n" +
	"\x19GetProductInventoryLevels\x12..inventory.v1.GetProductInventoryLevelsRequest\x1a/.inventory.v1.GetProductInventoryLevelsResponse\x12y\n" +
	"\x18CheckProductAvailability\x12-.inventory.v1.CheckProductAvailabilityRequest\x1a..inventory.v1.CheckProductAvailabilityResponse\x12a\n" +
	"\x10GetLowStockItems\x12%.inventory.v1.GetLowStockItemsRequest\x1a&.inventory.v1.GetLowStockItemsResponse\x12m\n" +
	"\x14GetResourceInventory\x12).inventory.v1.GetResourceInventoryRequest\x1a*.inventory.v1.GetResourceInventoryResponse\x12\x8b\x01\n" +
	"\x1eGetRecentInventoryTransactions\x123.inventory.v1.GetInventoryTransactionHistoryRequest\x1a4.inventory.v1.GetInventoryTransactionHistoryResponse\x12\x85\x01\n" +
	"\x1cGetProductTransactionHistory\x121.inventory.v1.GetProductTransactionHistoryRequest\x1a2.inventory.v1.GetProductTransactionHistoryResponseB\xbd\x01\n" +
	"\x10com.inventory.v1B\x0eInventoryProtoP\x01ZHgithub.com/karibu-cap/sabitou/protos/gen/go/rpc/inventory/v1;inventoryv1\xa2\x02\x03IXX\xaa\x02\fInventory.V1\xca\x02\fInventory\\V1\xe2\x02\x18Inventory\\V1\\GPBMetadata\xea\x02\rInventory::V1b\x06proto3"

var (
	file_inventory_v1_inventory_proto_rawDescOnce sync.Once
	file_inventory_v1_inventory_proto_rawDescData []byte
)

func file_inventory_v1_inventory_proto_rawDescGZIP() []byte {
	file_inventory_v1_inventory_proto_rawDescOnce.Do(func() {
		file_inventory_v1_inventory_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_inventory_v1_inventory_proto_rawDesc), len(file_inventory_v1_inventory_proto_rawDesc)))
	})
	return file_inventory_v1_inventory_proto_rawDescData
}

var file_inventory_v1_inventory_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_inventory_v1_inventory_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_inventory_v1_inventory_proto_goTypes = []any{
	(BatchStatus)(0),                               // 0: inventory.v1.BatchStatus
	(StockStatus)(0),                               // 1: inventory.v1.StockStatus
	(*Batch)(nil),                                  // 2: inventory.v1.Batch
	(*InventoryLevel)(nil),                         // 3: inventory.v1.InventoryLevel
	(*InventoryLevelWithProduct)(nil),              // 4: inventory.v1.InventoryLevelWithProduct
	(*GetInventoryTransactionHistoryRequest)(nil),  // 5: inventory.v1.GetInventoryTransactionHistoryRequest
	(*GetInventoryTransactionHistoryResponse)(nil), // 6: inventory.v1.GetInventoryTransactionHistoryResponse
	(*GetProductInventoryLevelsRequest)(nil),       // 7: inventory.v1.GetProductInventoryLevelsRequest
	(*GetProductInventoryLevelsResponse)(nil),      // 8: inventory.v1.GetProductInventoryLevelsResponse
	(*CheckProductAvailabilityRequest)(nil),        // 9: inventory.v1.CheckProductAvailabilityRequest
	(*CheckProductAvailabilityResponse)(nil),       // 10: inventory.v1.CheckProductAvailabilityResponse
	(*GetLowStockItemsRequest)(nil),                // 11: inventory.v1.GetLowStockItemsRequest
	(*GetLowStockItemsResponse)(nil),               // 12: inventory.v1.GetLowStockItemsResponse
	(*GetResourceInventoryRequest)(nil),            // 13: inventory.v1.GetResourceInventoryRequest
	(*GetResourceInventoryResponse)(nil),           // 14: inventory.v1.GetResourceInventoryResponse
	(*GetProductTransactionHistoryRequest)(nil),    // 15: inventory.v1.GetProductTransactionHistoryRequest
	(*GetProductTransactionHistoryResponse)(nil),   // 16: inventory.v1.GetProductTransactionHistoryResponse
	(*timestamppb.Timestamp)(nil),                  // 17: google.protobuf.Timestamp
	(*StoreProduct)(nil),                           // 18: inventory.v1.StoreProduct
	(*GlobalProduct)(nil),                          // 19: inventory.v1.GlobalProduct
	(v1.TransactionType)(0),                        // 20: audits.v1.TransactionType
	(*v1.InventoryTransaction)(nil),                // 21: audits.v1.InventoryTransaction
}
var file_inventory_v1_inventory_proto_depIdxs = []int32{
	17, // 0: inventory.v1.Batch.expiration_date:type_name -> google.protobuf.Timestamp
	17, // 1: inventory.v1.Batch.received_at:type_name -> google.protobuf.Timestamp
	0,  // 2: inventory.v1.Batch.status:type_name -> inventory.v1.BatchStatus
	17, // 3: inventory.v1.InventoryLevel.last_updated:type_name -> google.protobuf.Timestamp
	2,  // 4: inventory.v1.InventoryLevel.batches:type_name -> inventory.v1.Batch
	3,  // 5: inventory.v1.InventoryLevelWithProduct.level:type_name -> inventory.v1.InventoryLevel
	18, // 6: inventory.v1.InventoryLevelWithProduct.product:type_name -> inventory.v1.StoreProduct
	19, // 7: inventory.v1.InventoryLevelWithProduct.globalProduct:type_name -> inventory.v1.GlobalProduct
	1,  // 8: inventory.v1.InventoryLevelWithProduct.stockStatus:type_name -> inventory.v1.StockStatus
	20, // 9: inventory.v1.GetInventoryTransactionHistoryRequest.transaction_type:type_name -> audits.v1.TransactionType
	17, // 10: inventory.v1.GetInventoryTransactionHistoryRequest.start_date:type_name -> google.protobuf.Timestamp
	17, // 11: inventory.v1.GetInventoryTransactionHistoryRequest.end_date:type_name -> google.protobuf.Timestamp
	21, // 12: inventory.v1.GetInventoryTransactionHistoryResponse.transactions:type_name -> audits.v1.InventoryTransaction
	3,  // 13: inventory.v1.GetProductInventoryLevelsResponse.levels:type_name -> inventory.v1.InventoryLevel
	3,  // 14: inventory.v1.GetLowStockItemsResponse.low_stock_items:type_name -> inventory.v1.InventoryLevel
	17, // 15: inventory.v1.GetResourceInventoryRequest.as_of_date:type_name -> google.protobuf.Timestamp
	3,  // 16: inventory.v1.GetResourceInventoryResponse.items:type_name -> inventory.v1.InventoryLevel
	17, // 17: inventory.v1.GetResourceInventoryResponse.snapshot_date:type_name -> google.protobuf.Timestamp
	17, // 18: inventory.v1.GetProductTransactionHistoryRequest.start_date:type_name -> google.protobuf.Timestamp
	17, // 19: inventory.v1.GetProductTransactionHistoryRequest.end_date:type_name -> google.protobuf.Timestamp
	21, // 20: inventory.v1.GetProductTransactionHistoryResponse.transactions:type_name -> audits.v1.InventoryTransaction
	7,  // 21: inventory.v1.InventoryService.GetProductInventoryLevels:input_type -> inventory.v1.GetProductInventoryLevelsRequest
	9,  // 22: inventory.v1.InventoryService.CheckProductAvailability:input_type -> inventory.v1.CheckProductAvailabilityRequest
	11, // 23: inventory.v1.InventoryService.GetLowStockItems:input_type -> inventory.v1.GetLowStockItemsRequest
	13, // 24: inventory.v1.InventoryService.GetResourceInventory:input_type -> inventory.v1.GetResourceInventoryRequest
	5,  // 25: inventory.v1.InventoryService.GetRecentInventoryTransactions:input_type -> inventory.v1.GetInventoryTransactionHistoryRequest
	15, // 26: inventory.v1.InventoryService.GetProductTransactionHistory:input_type -> inventory.v1.GetProductTransactionHistoryRequest
	8,  // 27: inventory.v1.InventoryService.GetProductInventoryLevels:output_type -> inventory.v1.GetProductInventoryLevelsResponse
	10, // 28: inventory.v1.InventoryService.CheckProductAvailability:output_type -> inventory.v1.CheckProductAvailabilityResponse
	12, // 29: inventory.v1.InventoryService.GetLowStockItems:output_type -> inventory.v1.GetLowStockItemsResponse
	14, // 30: inventory.v1.InventoryService.GetResourceInventory:output_type -> inventory.v1.GetResourceInventoryResponse
	6,  // 31: inventory.v1.InventoryService.GetRecentInventoryTransactions:output_type -> inventory.v1.GetInventoryTransactionHistoryResponse
	16, // 32: inventory.v1.InventoryService.GetProductTransactionHistory:output_type -> inventory.v1.GetProductTransactionHistoryResponse
	27, // [27:33] is the sub-list for method output_type
	21, // [21:27] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_inventory_v1_inventory_proto_init() }
func file_inventory_v1_inventory_proto_init() {
	if File_inventory_v1_inventory_proto != nil {
		return
	}
	file_inventory_v1_store_product_proto_init()
	file_inventory_v1_inventory_proto_msgTypes[3].OneofWrappers = []any{}
	file_inventory_v1_inventory_proto_msgTypes[9].OneofWrappers = []any{}
	file_inventory_v1_inventory_proto_msgTypes[11].OneofWrappers = []any{}
	file_inventory_v1_inventory_proto_msgTypes[13].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_inventory_v1_inventory_proto_rawDesc), len(file_inventory_v1_inventory_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_inventory_v1_inventory_proto_goTypes,
		DependencyIndexes: file_inventory_v1_inventory_proto_depIdxs,
		EnumInfos:         file_inventory_v1_inventory_proto_enumTypes,
		MessageInfos:      file_inventory_v1_inventory_proto_msgTypes,
	}.Build()
	File_inventory_v1_inventory_proto = out.File
	file_inventory_v1_inventory_proto_goTypes = nil
	file_inventory_v1_inventory_proto_depIdxs = nil
}
