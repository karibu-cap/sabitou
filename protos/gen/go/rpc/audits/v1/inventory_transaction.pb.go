// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: audits/v1/inventory_transaction.proto

package auditsv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TransactionType int32

const (
	TransactionType_TXN_TYPE_UNSPECIFIED  TransactionType = 0
	TransactionType_TXN_TYPE_PURCHASE     TransactionType = 1  // Receiving from supplier
	TransactionType_TXN_TYPE_SALE         TransactionType = 2  // Selling to customer
	TransactionType_TXN_TYPE_RETURN_IN    TransactionType = 3  // Customer returning to you
	TransactionType_TXN_TYPE_RETURN_OUT   TransactionType = 4  // You returning to supplier
	TransactionType_TXN_TYPE_TRANSFER_OUT TransactionType = 5  // Moving to another warehouse
	TransactionType_TXN_TYPE_TRANSFER_IN  TransactionType = 6  // Receiving from another warehouse
	TransactionType_TXN_TYPE_ADJUSTMENT   TransactionType = 7  // Manual adjustment
	TransactionType_TXN_TYPE_DAMAGE       TransactionType = 8  // Damaged goods write-off
	TransactionType_TXN_TYPE_THEFT        TransactionType = 9  // Stolen items
	TransactionType_TXN_TYPE_INITIAL      TransactionType = 10 // Initial stock entry
	TransactionType_TXN_TYPE_EXPIRATION   TransactionType = 11 // Batch expired
)

// Enum value maps for TransactionType.
var (
	TransactionType_name = map[int32]string{
		0:  "TXN_TYPE_UNSPECIFIED",
		1:  "TXN_TYPE_PURCHASE",
		2:  "TXN_TYPE_SALE",
		3:  "TXN_TYPE_RETURN_IN",
		4:  "TXN_TYPE_RETURN_OUT",
		5:  "TXN_TYPE_TRANSFER_OUT",
		6:  "TXN_TYPE_TRANSFER_IN",
		7:  "TXN_TYPE_ADJUSTMENT",
		8:  "TXN_TYPE_DAMAGE",
		9:  "TXN_TYPE_THEFT",
		10: "TXN_TYPE_INITIAL",
		11: "TXN_TYPE_EXPIRATION",
	}
	TransactionType_value = map[string]int32{
		"TXN_TYPE_UNSPECIFIED":  0,
		"TXN_TYPE_PURCHASE":     1,
		"TXN_TYPE_SALE":         2,
		"TXN_TYPE_RETURN_IN":    3,
		"TXN_TYPE_RETURN_OUT":   4,
		"TXN_TYPE_TRANSFER_OUT": 5,
		"TXN_TYPE_TRANSFER_IN":  6,
		"TXN_TYPE_ADJUSTMENT":   7,
		"TXN_TYPE_DAMAGE":       8,
		"TXN_TYPE_THEFT":        9,
		"TXN_TYPE_INITIAL":      10,
		"TXN_TYPE_EXPIRATION":   11,
	}
)

func (x TransactionType) Enum() *TransactionType {
	p := new(TransactionType)
	*p = x
	return p
}

func (x TransactionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionType) Descriptor() protoreflect.EnumDescriptor {
	return file_audits_v1_inventory_transaction_proto_enumTypes[0].Descriptor()
}

func (TransactionType) Type() protoreflect.EnumType {
	return &file_audits_v1_inventory_transaction_proto_enumTypes[0]
}

func (x TransactionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionType.Descriptor instead.
func (TransactionType) EnumDescriptor() ([]byte, []int) {
	return file_audits_v1_inventory_transaction_proto_rawDescGZIP(), []int{0}
}

// *
// InventoryTransaction (Journal des Mouvements)
// Complete audit trail of every inventory change.
// Auto-generated by all operations that affect stock.
//
// Fix: Added batch_id for lot-specific transactions.
//
// Example:
//
//	transaction_id: "TXN-2025-00123"
//	warehouse_id: "WH-001"
//	product_id: "PRD-001"
//	transaction_type: TXN_TYPE_SALE
//	quantity_change: -10
//	quantity_before: 100
//	quantity_after: 90
//	related_document_type: "DeliveryNote"
//	related_document_id: "DN-2025-001"
//	performed_by_user_id: "USR-003"
//	batch_id: "BATCH-2025-001"
type InventoryTransaction struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	DocumentId          *string                `protobuf:"bytes,1,opt,name=document_id,json=documentId,proto3,oneof" json:"document_id,omitempty"` // "TXN-2025-00123"
	StoreId             string                 `protobuf:"bytes,2,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	ProductId           string                 `protobuf:"bytes,3,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	TransactionType     TransactionType        `protobuf:"varint,4,opt,name=transaction_type,json=transactionType,proto3,enum=audits.v1.TransactionType" json:"transaction_type,omitempty"`
	QuantityChange      float64                `protobuf:"fixed64,5,opt,name=quantity_change,json=quantityChange,proto3" json:"quantity_change,omitempty"`                // Positive = increase, negative = decrease
	QuantityBefore      float64                `protobuf:"fixed64,6,opt,name=quantity_before,json=quantityBefore,proto3" json:"quantity_before,omitempty"`                // Stock level before
	QuantityAfter       float64                `protobuf:"fixed64,7,opt,name=quantity_after,json=quantityAfter,proto3" json:"quantity_after,omitempty"`                   // Stock level after
	RelatedDocumentType string                 `protobuf:"bytes,8,opt,name=related_document_type,json=relatedDocumentType,proto3" json:"related_document_type,omitempty"` // "DeliveryNote", "ReceivingNote", etc.
	RelatedDocumentId   string                 `protobuf:"bytes,9,opt,name=related_document_id,json=relatedDocumentId,proto3" json:"related_document_id,omitempty"`       // ID of the document
	PerformedByUserId   string                 `protobuf:"bytes,10,opt,name=performed_by_user_id,json=performedByUserId,proto3" json:"performed_by_user_id,omitempty"`
	TransactionTime     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=transaction_time,json=transactionTime,proto3" json:"transaction_time,omitempty"`
	Notes               string                 `protobuf:"bytes,12,opt,name=notes,proto3" json:"notes,omitempty"`
	BatchId             string                 `protobuf:"bytes,13,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"` // Specific batch affected
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *InventoryTransaction) Reset() {
	*x = InventoryTransaction{}
	mi := &file_audits_v1_inventory_transaction_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InventoryTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryTransaction) ProtoMessage() {}

func (x *InventoryTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_audits_v1_inventory_transaction_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryTransaction.ProtoReflect.Descriptor instead.
func (*InventoryTransaction) Descriptor() ([]byte, []int) {
	return file_audits_v1_inventory_transaction_proto_rawDescGZIP(), []int{0}
}

func (x *InventoryTransaction) GetDocumentId() string {
	if x != nil && x.DocumentId != nil {
		return *x.DocumentId
	}
	return ""
}

func (x *InventoryTransaction) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *InventoryTransaction) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *InventoryTransaction) GetTransactionType() TransactionType {
	if x != nil {
		return x.TransactionType
	}
	return TransactionType_TXN_TYPE_UNSPECIFIED
}

func (x *InventoryTransaction) GetQuantityChange() float64 {
	if x != nil {
		return x.QuantityChange
	}
	return 0
}

func (x *InventoryTransaction) GetQuantityBefore() float64 {
	if x != nil {
		return x.QuantityBefore
	}
	return 0
}

func (x *InventoryTransaction) GetQuantityAfter() float64 {
	if x != nil {
		return x.QuantityAfter
	}
	return 0
}

func (x *InventoryTransaction) GetRelatedDocumentType() string {
	if x != nil {
		return x.RelatedDocumentType
	}
	return ""
}

func (x *InventoryTransaction) GetRelatedDocumentId() string {
	if x != nil {
		return x.RelatedDocumentId
	}
	return ""
}

func (x *InventoryTransaction) GetPerformedByUserId() string {
	if x != nil {
		return x.PerformedByUserId
	}
	return ""
}

func (x *InventoryTransaction) GetTransactionTime() *timestamppb.Timestamp {
	if x != nil {
		return x.TransactionTime
	}
	return nil
}

func (x *InventoryTransaction) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *InventoryTransaction) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

var File_audits_v1_inventory_transaction_proto protoreflect.FileDescriptor

const file_audits_v1_inventory_transaction_proto_rawDesc = "" +
	"\n" +
	"%audits/v1/inventory_transaction.proto\x12\taudits.v1\x1a\x1bbuf/validate/validate.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xdb\x04\n" +
	"\x14InventoryTransaction\x12,\n" +
	"\vdocument_id\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01H\x00R\n" +
	"documentId\x88\x01\x01\x12\x19\n" +
	"\bstore_id\x18\x02 \x01(\tR\astoreId\x12\x1d\n" +
	"\n" +
	"product_id\x18\x03 \x01(\tR\tproductId\x12E\n" +
	"\x10transaction_type\x18\x04 \x01(\x0e2\x1a.audits.v1.TransactionTypeR\x0ftransactionType\x12'\n" +
	"\x0fquantity_change\x18\x05 \x01(\x01R\x0equantityChange\x12'\n" +
	"\x0fquantity_before\x18\x06 \x01(\x01R\x0equantityBefore\x12%\n" +
	"\x0equantity_after\x18\a \x01(\x01R\rquantityAfter\x122\n" +
	"\x15related_document_type\x18\b \x01(\tR\x13relatedDocumentType\x12.\n" +
	"\x13related_document_id\x18\t \x01(\tR\x11relatedDocumentId\x12/\n" +
	"\x14performed_by_user_id\x18\n" +
	" \x01(\tR\x11performedByUserId\x12E\n" +
	"\x10transaction_time\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\x0ftransactionTime\x12\x14\n" +
	"\x05notes\x18\f \x01(\tR\x05notes\x12\x19\n" +
	"\bbatch_id\x18\r \x01(\tR\abatchIdB\x0e\n" +
	"\f_document_id*\xac\x02\n" +
	"\x0fTransactionType\x12\x18\n" +
	"\x14TXN_TYPE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11TXN_TYPE_PURCHASE\x10\x01\x12\x11\n" +
	"\rTXN_TYPE_SALE\x10\x02\x12\x16\n" +
	"\x12TXN_TYPE_RETURN_IN\x10\x03\x12\x17\n" +
	"\x13TXN_TYPE_RETURN_OUT\x10\x04\x12\x19\n" +
	"\x15TXN_TYPE_TRANSFER_OUT\x10\x05\x12\x18\n" +
	"\x14TXN_TYPE_TRANSFER_IN\x10\x06\x12\x17\n" +
	"\x13TXN_TYPE_ADJUSTMENT\x10\a\x12\x13\n" +
	"\x0fTXN_TYPE_DAMAGE\x10\b\x12\x12\n" +
	"\x0eTXN_TYPE_THEFT\x10\t\x12\x14\n" +
	"\x10TXN_TYPE_INITIAL\x10\n" +
	"\x12\x17\n" +
	"\x13TXN_TYPE_EXPIRATION\x10\vB\xb3\x01\n" +
	"\rcom.audits.v1B\x19InventoryTransactionProtoP\x01ZBgithub.com/karibu-cap/sabitou/protos/gen/go/rpc/audits/v1;auditsv1\xa2\x02\x03AXX\xaa\x02\tAudits.V1\xca\x02\tAudits\\V1\xe2\x02\x15Audits\\V1\\GPBMetadata\xea\x02\n" +
	"Audits::V1b\x06proto3"

var (
	file_audits_v1_inventory_transaction_proto_rawDescOnce sync.Once
	file_audits_v1_inventory_transaction_proto_rawDescData []byte
)

func file_audits_v1_inventory_transaction_proto_rawDescGZIP() []byte {
	file_audits_v1_inventory_transaction_proto_rawDescOnce.Do(func() {
		file_audits_v1_inventory_transaction_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_audits_v1_inventory_transaction_proto_rawDesc), len(file_audits_v1_inventory_transaction_proto_rawDesc)))
	})
	return file_audits_v1_inventory_transaction_proto_rawDescData
}

var file_audits_v1_inventory_transaction_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_audits_v1_inventory_transaction_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_audits_v1_inventory_transaction_proto_goTypes = []any{
	(TransactionType)(0),          // 0: audits.v1.TransactionType
	(*InventoryTransaction)(nil),  // 1: audits.v1.InventoryTransaction
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_audits_v1_inventory_transaction_proto_depIdxs = []int32{
	0, // 0: audits.v1.InventoryTransaction.transaction_type:type_name -> audits.v1.TransactionType
	2, // 1: audits.v1.InventoryTransaction.transaction_time:type_name -> google.protobuf.Timestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_audits_v1_inventory_transaction_proto_init() }
func file_audits_v1_inventory_transaction_proto_init() {
	if File_audits_v1_inventory_transaction_proto != nil {
		return
	}
	file_audits_v1_inventory_transaction_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_audits_v1_inventory_transaction_proto_rawDesc), len(file_audits_v1_inventory_transaction_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_audits_v1_inventory_transaction_proto_goTypes,
		DependencyIndexes: file_audits_v1_inventory_transaction_proto_depIdxs,
		EnumInfos:         file_audits_v1_inventory_transaction_proto_enumTypes,
		MessageInfos:      file_audits_v1_inventory_transaction_proto_msgTypes,
	}.Build()
	File_audits_v1_inventory_transaction_proto = out.File
	file_audits_v1_inventory_transaction_proto_goTypes = nil
	file_audits_v1_inventory_transaction_proto_depIdxs = nil
}
