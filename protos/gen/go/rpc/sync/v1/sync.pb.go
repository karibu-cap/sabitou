// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: sync/v1/sync.proto

package syncv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/karibu-cap/sabitou/protos/gen/go/rpc/inventory/v1"
	v11 "github.com/karibu-cap/sabitou/protos/gen/go/rpc/order/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum for sync operation types
type SyncOperationType int32

const (
	// Unknown operation type
	SyncOperationType_SYNC_OPERATION_TYPE_UNSPECIFIED SyncOperationType = 0
	// Create operation
	SyncOperationType_SYNC_OPERATION_TYPE_CREATE SyncOperationType = 1
	// Update operation
	SyncOperationType_SYNC_OPERATION_TYPE_UPDATE SyncOperationType = 2
	// Delete operation
	SyncOperationType_SYNC_OPERATION_TYPE_DELETE SyncOperationType = 3
)

// Enum value maps for SyncOperationType.
var (
	SyncOperationType_name = map[int32]string{
		0: "SYNC_OPERATION_TYPE_UNSPECIFIED",
		1: "SYNC_OPERATION_TYPE_CREATE",
		2: "SYNC_OPERATION_TYPE_UPDATE",
		3: "SYNC_OPERATION_TYPE_DELETE",
	}
	SyncOperationType_value = map[string]int32{
		"SYNC_OPERATION_TYPE_UNSPECIFIED": 0,
		"SYNC_OPERATION_TYPE_CREATE":      1,
		"SYNC_OPERATION_TYPE_UPDATE":      2,
		"SYNC_OPERATION_TYPE_DELETE":      3,
	}
)

func (x SyncOperationType) Enum() *SyncOperationType {
	p := new(SyncOperationType)
	*p = x
	return p
}

func (x SyncOperationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SyncOperationType) Descriptor() protoreflect.EnumDescriptor {
	return file_sync_v1_sync_proto_enumTypes[0].Descriptor()
}

func (SyncOperationType) Type() protoreflect.EnumType {
	return &file_sync_v1_sync_proto_enumTypes[0]
}

func (x SyncOperationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SyncOperationType.Descriptor instead.
func (SyncOperationType) EnumDescriptor() ([]byte, []int) {
	return file_sync_v1_sync_proto_rawDescGZIP(), []int{0}
}

// Enum for sync entity types
type SyncEntityType int32

const (
	// Unknown entity type
	SyncEntityType_SYNC_ENTITY_TYPE_UNSPECIFIED SyncEntityType = 0
	// Order entity
	SyncEntityType_SYNC_ENTITY_TYPE_ORDER SyncEntityType = 1
)

// Enum value maps for SyncEntityType.
var (
	SyncEntityType_name = map[int32]string{
		0: "SYNC_ENTITY_TYPE_UNSPECIFIED",
		1: "SYNC_ENTITY_TYPE_ORDER",
	}
	SyncEntityType_value = map[string]int32{
		"SYNC_ENTITY_TYPE_UNSPECIFIED": 0,
		"SYNC_ENTITY_TYPE_ORDER":       1,
	}
)

func (x SyncEntityType) Enum() *SyncEntityType {
	p := new(SyncEntityType)
	*p = x
	return p
}

func (x SyncEntityType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SyncEntityType) Descriptor() protoreflect.EnumDescriptor {
	return file_sync_v1_sync_proto_enumTypes[1].Descriptor()
}

func (SyncEntityType) Type() protoreflect.EnumType {
	return &file_sync_v1_sync_proto_enumTypes[1]
}

func (x SyncEntityType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SyncEntityType.Descriptor instead.
func (SyncEntityType) EnumDescriptor() ([]byte, []int) {
	return file_sync_v1_sync_proto_rawDescGZIP(), []int{1}
}

// Enum for sync operation status
type SyncOperationStatus int32

const (
	// Unknown status
	SyncOperationStatus_SYNC_OPERATION_STATUS_UNSPECIFIED SyncOperationStatus = 0
	// Operation is pending
	SyncOperationStatus_SYNC_OPERATION_STATUS_PENDING SyncOperationStatus = 1
	// Operation is in progress
	SyncOperationStatus_SYNC_OPERATION_STATUS_IN_PROGRESS SyncOperationStatus = 2
	// Operation completed successfully
	SyncOperationStatus_SYNC_OPERATION_STATUS_SUCCESS SyncOperationStatus = 3
	// Operation failed
	SyncOperationStatus_SYNC_OPERATION_STATUS_FAILED SyncOperationStatus = 4
	// Operation was retried
	SyncOperationStatus_SYNC_OPERATION_STATUS_RETRYING SyncOperationStatus = 5
	// Operation exceeded max retries
	SyncOperationStatus_SYNC_OPERATION_STATUS_ABANDONED SyncOperationStatus = 6
)

// Enum value maps for SyncOperationStatus.
var (
	SyncOperationStatus_name = map[int32]string{
		0: "SYNC_OPERATION_STATUS_UNSPECIFIED",
		1: "SYNC_OPERATION_STATUS_PENDING",
		2: "SYNC_OPERATION_STATUS_IN_PROGRESS",
		3: "SYNC_OPERATION_STATUS_SUCCESS",
		4: "SYNC_OPERATION_STATUS_FAILED",
		5: "SYNC_OPERATION_STATUS_RETRYING",
		6: "SYNC_OPERATION_STATUS_ABANDONED",
	}
	SyncOperationStatus_value = map[string]int32{
		"SYNC_OPERATION_STATUS_UNSPECIFIED": 0,
		"SYNC_OPERATION_STATUS_PENDING":     1,
		"SYNC_OPERATION_STATUS_IN_PROGRESS": 2,
		"SYNC_OPERATION_STATUS_SUCCESS":     3,
		"SYNC_OPERATION_STATUS_FAILED":      4,
		"SYNC_OPERATION_STATUS_RETRYING":    5,
		"SYNC_OPERATION_STATUS_ABANDONED":   6,
	}
)

func (x SyncOperationStatus) Enum() *SyncOperationStatus {
	p := new(SyncOperationStatus)
	*p = x
	return p
}

func (x SyncOperationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SyncOperationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_sync_v1_sync_proto_enumTypes[2].Descriptor()
}

func (SyncOperationStatus) Type() protoreflect.EnumType {
	return &file_sync_v1_sync_proto_enumTypes[2]
}

func (x SyncOperationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SyncOperationStatus.Descriptor instead.
func (SyncOperationStatus) EnumDescriptor() ([]byte, []int) {
	return file_sync_v1_sync_proto_rawDescGZIP(), []int{2}
}

// A single sync operation
type SyncOperation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for the operation
	RefId string `protobuf:"bytes,1,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	// Type of operation (create, update, delete)
	OperationType SyncOperationType `protobuf:"varint,2,opt,name=operation_type,json=operationType,proto3,enum=sync.v1.SyncOperationType" json:"operation_type,omitempty"`
	// Type of entity being synchronized
	EntityType SyncEntityType `protobuf:"varint,3,opt,name=entity_type,json=entityType,proto3,enum=sync.v1.SyncEntityType" json:"entity_type,omitempty"`
	// Unique identifier of the entity
	EntityId string `protobuf:"bytes,4,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	// Store ID (if applicable)
	StoreId *string `protobuf:"bytes,5,opt,name=store_id,json=storeId,proto3,oneof" json:"store_id,omitempty"`
	// Business ID (if applicable)
	BusinessId *string `protobuf:"bytes,6,opt,name=business_id,json=businessId,proto3,oneof" json:"business_id,omitempty"`
	// User ID who performed the operation
	UserId *string `protobuf:"bytes,7,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	// Operation data (entity-specific payload)
	//
	// Types that are valid to be assigned to OperationData:
	//
	//	*SyncOperation_StoreProductData
	//	*SyncOperation_GlobalProductData
	//	*SyncOperation_CategoryData
	//	*SyncOperation_OrderData
	//	*SyncOperation_JsonData
	OperationData isSyncOperation_OperationData `protobuf_oneof:"operation_data"`
	// Timestamp when operation was created
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,41,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Timestamp when operation was last updated
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,42,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Current status of the operation
	Status SyncOperationStatus `protobuf:"varint,43,opt,name=status,proto3,enum=sync.v1.SyncOperationStatus" json:"status,omitempty"`
	// Number of retry attempts
	RetryCount int32 `protobuf:"varint,44,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`
	// Maximum number of retries allowed
	MaxRetries int32 `protobuf:"varint,45,opt,name=max_retries,json=maxRetries,proto3" json:"max_retries,omitempty"`
	// Next retry timestamp (if applicable)
	NextRetryAt *timestamppb.Timestamp `protobuf:"bytes,46,opt,name=next_retry_at,json=nextRetryAt,proto3,oneof" json:"next_retry_at,omitempty"`
	// Error message (if operation failed)
	ErrorMessage *string `protobuf:"bytes,47,opt,name=error_message,json=errorMessage,proto3,oneof" json:"error_message,omitempty"`
	// Additional metadata
	Metadata      map[string]string `protobuf:"bytes,48,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncOperation) Reset() {
	*x = SyncOperation{}
	mi := &file_sync_v1_sync_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncOperation) ProtoMessage() {}

func (x *SyncOperation) ProtoReflect() protoreflect.Message {
	mi := &file_sync_v1_sync_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncOperation.ProtoReflect.Descriptor instead.
func (*SyncOperation) Descriptor() ([]byte, []int) {
	return file_sync_v1_sync_proto_rawDescGZIP(), []int{0}
}

func (x *SyncOperation) GetRefId() string {
	if x != nil {
		return x.RefId
	}
	return ""
}

func (x *SyncOperation) GetOperationType() SyncOperationType {
	if x != nil {
		return x.OperationType
	}
	return SyncOperationType_SYNC_OPERATION_TYPE_UNSPECIFIED
}

func (x *SyncOperation) GetEntityType() SyncEntityType {
	if x != nil {
		return x.EntityType
	}
	return SyncEntityType_SYNC_ENTITY_TYPE_UNSPECIFIED
}

func (x *SyncOperation) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *SyncOperation) GetStoreId() string {
	if x != nil && x.StoreId != nil {
		return *x.StoreId
	}
	return ""
}

func (x *SyncOperation) GetBusinessId() string {
	if x != nil && x.BusinessId != nil {
		return *x.BusinessId
	}
	return ""
}

func (x *SyncOperation) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *SyncOperation) GetOperationData() isSyncOperation_OperationData {
	if x != nil {
		return x.OperationData
	}
	return nil
}

func (x *SyncOperation) GetStoreProductData() *v1.StoreProduct {
	if x != nil {
		if x, ok := x.OperationData.(*SyncOperation_StoreProductData); ok {
			return x.StoreProductData
		}
	}
	return nil
}

func (x *SyncOperation) GetGlobalProductData() *v1.GlobalProduct {
	if x != nil {
		if x, ok := x.OperationData.(*SyncOperation_GlobalProductData); ok {
			return x.GlobalProductData
		}
	}
	return nil
}

func (x *SyncOperation) GetCategoryData() *v1.Category {
	if x != nil {
		if x, ok := x.OperationData.(*SyncOperation_CategoryData); ok {
			return x.CategoryData
		}
	}
	return nil
}

func (x *SyncOperation) GetOrderData() *v11.SalesOrder {
	if x != nil {
		if x, ok := x.OperationData.(*SyncOperation_OrderData); ok {
			return x.OrderData
		}
	}
	return nil
}

func (x *SyncOperation) GetJsonData() string {
	if x != nil {
		if x, ok := x.OperationData.(*SyncOperation_JsonData); ok {
			return x.JsonData
		}
	}
	return ""
}

func (x *SyncOperation) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SyncOperation) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *SyncOperation) GetStatus() SyncOperationStatus {
	if x != nil {
		return x.Status
	}
	return SyncOperationStatus_SYNC_OPERATION_STATUS_UNSPECIFIED
}

func (x *SyncOperation) GetRetryCount() int32 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

func (x *SyncOperation) GetMaxRetries() int32 {
	if x != nil {
		return x.MaxRetries
	}
	return 0
}

func (x *SyncOperation) GetNextRetryAt() *timestamppb.Timestamp {
	if x != nil {
		return x.NextRetryAt
	}
	return nil
}

func (x *SyncOperation) GetErrorMessage() string {
	if x != nil && x.ErrorMessage != nil {
		return *x.ErrorMessage
	}
	return ""
}

func (x *SyncOperation) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type isSyncOperation_OperationData interface {
	isSyncOperation_OperationData()
}

type SyncOperation_StoreProductData struct {
	// Store product data
	StoreProductData *v1.StoreProduct `protobuf:"bytes,10,opt,name=store_product_data,json=storeProductData,proto3,oneof"`
}

type SyncOperation_GlobalProductData struct {
	// Global product data
	GlobalProductData *v1.GlobalProduct `protobuf:"bytes,11,opt,name=global_product_data,json=globalProductData,proto3,oneof"`
}

type SyncOperation_CategoryData struct {
	// Product category data
	CategoryData *v1.Category `protobuf:"bytes,12,opt,name=category_data,json=categoryData,proto3,oneof"`
}

type SyncOperation_OrderData struct {
	// Order data
	OrderData *v11.SalesOrder `protobuf:"bytes,13,opt,name=order_data,json=orderData,proto3,oneof"`
}

type SyncOperation_JsonData struct {
	// Generic JSON data for other entities
	JsonData string `protobuf:"bytes,40,opt,name=json_data,json=jsonData,proto3,oneof"`
}

func (*SyncOperation_StoreProductData) isSyncOperation_OperationData() {}

func (*SyncOperation_GlobalProductData) isSyncOperation_OperationData() {}

func (*SyncOperation_CategoryData) isSyncOperation_OperationData() {}

func (*SyncOperation_OrderData) isSyncOperation_OperationData() {}

func (*SyncOperation_JsonData) isSyncOperation_OperationData() {}

// Batch of sync operations
type SyncOperationBatch struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for the batch
	BatchId string `protobuf:"bytes,1,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	// List of operations in this batch
	Operations []*SyncOperation `protobuf:"bytes,2,rep,name=operations,proto3" json:"operations,omitempty"`
	// Store ID for all operations in this batch
	StoreId *string `protobuf:"bytes,3,opt,name=store_id,json=storeId,proto3,oneof" json:"store_id,omitempty"`
	// Business ID for all operations in this batch
	BusinessId *string `protobuf:"bytes,4,opt,name=business_id,json=businessId,proto3,oneof" json:"business_id,omitempty"`
	// User ID who created this batch
	UserId *string `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	// Timestamp when batch was created
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Total number of operations in batch
	TotalOperations int32 `protobuf:"varint,7,opt,name=total_operations,json=totalOperations,proto3" json:"total_operations,omitempty"`
	// Number of successful operations
	SuccessfulOperations int32 `protobuf:"varint,8,opt,name=successful_operations,json=successfulOperations,proto3" json:"successful_operations,omitempty"`
	// Number of failed operations
	FailedOperations int32 `protobuf:"varint,9,opt,name=failed_operations,json=failedOperations,proto3" json:"failed_operations,omitempty"`
	// Batch metadata
	Metadata      map[string]string `protobuf:"bytes,10,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncOperationBatch) Reset() {
	*x = SyncOperationBatch{}
	mi := &file_sync_v1_sync_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncOperationBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncOperationBatch) ProtoMessage() {}

func (x *SyncOperationBatch) ProtoReflect() protoreflect.Message {
	mi := &file_sync_v1_sync_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncOperationBatch.ProtoReflect.Descriptor instead.
func (*SyncOperationBatch) Descriptor() ([]byte, []int) {
	return file_sync_v1_sync_proto_rawDescGZIP(), []int{1}
}

func (x *SyncOperationBatch) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *SyncOperationBatch) GetOperations() []*SyncOperation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *SyncOperationBatch) GetStoreId() string {
	if x != nil && x.StoreId != nil {
		return *x.StoreId
	}
	return ""
}

func (x *SyncOperationBatch) GetBusinessId() string {
	if x != nil && x.BusinessId != nil {
		return *x.BusinessId
	}
	return ""
}

func (x *SyncOperationBatch) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *SyncOperationBatch) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SyncOperationBatch) GetTotalOperations() int32 {
	if x != nil {
		return x.TotalOperations
	}
	return 0
}

func (x *SyncOperationBatch) GetSuccessfulOperations() int32 {
	if x != nil {
		return x.SuccessfulOperations
	}
	return 0
}

func (x *SyncOperationBatch) GetFailedOperations() int32 {
	if x != nil {
		return x.FailedOperations
	}
	return 0
}

func (x *SyncOperationBatch) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Request to submit sync operations
type SubmitSyncOperationsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Store ID
	StoreId *string `protobuf:"bytes,1,opt,name=store_id,json=storeId,proto3,oneof" json:"store_id,omitempty"`
	// Business ID
	BusinessId *string `protobuf:"bytes,2,opt,name=business_id,json=businessId,proto3,oneof" json:"business_id,omitempty"`
	// User ID
	UserId *string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	// List of operations to submit
	Operations []*SyncOperation `protobuf:"bytes,4,rep,name=operations,proto3" json:"operations,omitempty"`
	// Client device identifier
	DeviceId *string `protobuf:"bytes,5,opt,name=device_id,json=deviceId,proto3,oneof" json:"device_id,omitempty"`
	// Client application version
	AppVersion    *string `protobuf:"bytes,6,opt,name=app_version,json=appVersion,proto3,oneof" json:"app_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitSyncOperationsRequest) Reset() {
	*x = SubmitSyncOperationsRequest{}
	mi := &file_sync_v1_sync_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitSyncOperationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitSyncOperationsRequest) ProtoMessage() {}

func (x *SubmitSyncOperationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sync_v1_sync_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitSyncOperationsRequest.ProtoReflect.Descriptor instead.
func (*SubmitSyncOperationsRequest) Descriptor() ([]byte, []int) {
	return file_sync_v1_sync_proto_rawDescGZIP(), []int{2}
}

func (x *SubmitSyncOperationsRequest) GetStoreId() string {
	if x != nil && x.StoreId != nil {
		return *x.StoreId
	}
	return ""
}

func (x *SubmitSyncOperationsRequest) GetBusinessId() string {
	if x != nil && x.BusinessId != nil {
		return *x.BusinessId
	}
	return ""
}

func (x *SubmitSyncOperationsRequest) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *SubmitSyncOperationsRequest) GetOperations() []*SyncOperation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *SubmitSyncOperationsRequest) GetDeviceId() string {
	if x != nil && x.DeviceId != nil {
		return *x.DeviceId
	}
	return ""
}

func (x *SubmitSyncOperationsRequest) GetAppVersion() string {
	if x != nil && x.AppVersion != nil {
		return *x.AppVersion
	}
	return ""
}

// Response to submit sync operations
type SubmitSyncOperationsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Batch ID for submitted operations
	BatchId string `protobuf:"bytes,1,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	// List of operation results
	OperationResults []*SyncOperationResult `protobuf:"bytes,2,rep,name=operation_results,json=operationResults,proto3" json:"operation_results,omitempty"`
	// Overall batch status
	BatchStatus SyncOperationStatus `protobuf:"varint,3,opt,name=batch_status,json=batchStatus,proto3,enum=sync.v1.SyncOperationStatus" json:"batch_status,omitempty"`
	// Timestamp when batch was processed
	ProcessedAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=processed_at,json=processedAt,proto3" json:"processed_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitSyncOperationsResponse) Reset() {
	*x = SubmitSyncOperationsResponse{}
	mi := &file_sync_v1_sync_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitSyncOperationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitSyncOperationsResponse) ProtoMessage() {}

func (x *SubmitSyncOperationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sync_v1_sync_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitSyncOperationsResponse.ProtoReflect.Descriptor instead.
func (*SubmitSyncOperationsResponse) Descriptor() ([]byte, []int) {
	return file_sync_v1_sync_proto_rawDescGZIP(), []int{3}
}

func (x *SubmitSyncOperationsResponse) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *SubmitSyncOperationsResponse) GetOperationResults() []*SyncOperationResult {
	if x != nil {
		return x.OperationResults
	}
	return nil
}

func (x *SubmitSyncOperationsResponse) GetBatchStatus() SyncOperationStatus {
	if x != nil {
		return x.BatchStatus
	}
	return SyncOperationStatus_SYNC_OPERATION_STATUS_UNSPECIFIED
}

func (x *SubmitSyncOperationsResponse) GetProcessedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ProcessedAt
	}
	return nil
}

// Result of a single sync operation
type SyncOperationResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Operation ID
	OperationId string `protobuf:"bytes,1,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	// Result status
	Status SyncOperationStatus `protobuf:"varint,2,opt,name=status,proto3,enum=sync.v1.SyncOperationStatus" json:"status,omitempty"`
	// Error message (if failed)
	ErrorMessage *string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3,oneof" json:"error_message,omitempty"`
	// Server-side entity ID (if different from client)
	ServerEntityId *string `protobuf:"bytes,4,opt,name=server_entity_id,json=serverEntityId,proto3,oneof" json:"server_entity_id,omitempty"`
	// Timestamp when operation was processed
	ProcessedAt   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=processed_at,json=processedAt,proto3" json:"processed_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncOperationResult) Reset() {
	*x = SyncOperationResult{}
	mi := &file_sync_v1_sync_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncOperationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncOperationResult) ProtoMessage() {}

func (x *SyncOperationResult) ProtoReflect() protoreflect.Message {
	mi := &file_sync_v1_sync_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncOperationResult.ProtoReflect.Descriptor instead.
func (*SyncOperationResult) Descriptor() ([]byte, []int) {
	return file_sync_v1_sync_proto_rawDescGZIP(), []int{4}
}

func (x *SyncOperationResult) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *SyncOperationResult) GetStatus() SyncOperationStatus {
	if x != nil {
		return x.Status
	}
	return SyncOperationStatus_SYNC_OPERATION_STATUS_UNSPECIFIED
}

func (x *SyncOperationResult) GetErrorMessage() string {
	if x != nil && x.ErrorMessage != nil {
		return *x.ErrorMessage
	}
	return ""
}

func (x *SyncOperationResult) GetServerEntityId() string {
	if x != nil && x.ServerEntityId != nil {
		return *x.ServerEntityId
	}
	return ""
}

func (x *SyncOperationResult) GetProcessedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ProcessedAt
	}
	return nil
}

// Request to get sync operations status
type GetSyncOperationsStatusRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Store ID
	StoreId *string `protobuf:"bytes,1,opt,name=store_id,json=storeId,proto3,oneof" json:"store_id,omitempty"`
	// Business ID
	BusinessId *string `protobuf:"bytes,2,opt,name=business_id,json=businessId,proto3,oneof" json:"business_id,omitempty"`
	// User ID
	UserId *string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	// Batch ID to check status for
	BatchId *string `protobuf:"bytes,4,opt,name=batch_id,json=batchId,proto3,oneof" json:"batch_id,omitempty"`
	// List of operation IDs to check
	OperationIds []string `protobuf:"bytes,5,rep,name=operation_ids,json=operationIds,proto3" json:"operation_ids,omitempty"`
	// Filter by status
	StatusFilter []SyncOperationStatus `protobuf:"varint,6,rep,packed,name=status_filter,json=statusFilter,proto3,enum=sync.v1.SyncOperationStatus" json:"status_filter,omitempty"`
	// Filter by entity type
	EntityTypeFilter []SyncEntityType `protobuf:"varint,7,rep,packed,name=entity_type_filter,json=entityTypeFilter,proto3,enum=sync.v1.SyncEntityType" json:"entity_type_filter,omitempty"`
	// Maximum number of results
	Limit *int32 `protobuf:"varint,8,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	// Offset for pagination
	Offset        *int32 `protobuf:"varint,9,opt,name=offset,proto3,oneof" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSyncOperationsStatusRequest) Reset() {
	*x = GetSyncOperationsStatusRequest{}
	mi := &file_sync_v1_sync_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSyncOperationsStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSyncOperationsStatusRequest) ProtoMessage() {}

func (x *GetSyncOperationsStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sync_v1_sync_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSyncOperationsStatusRequest.ProtoReflect.Descriptor instead.
func (*GetSyncOperationsStatusRequest) Descriptor() ([]byte, []int) {
	return file_sync_v1_sync_proto_rawDescGZIP(), []int{5}
}

func (x *GetSyncOperationsStatusRequest) GetStoreId() string {
	if x != nil && x.StoreId != nil {
		return *x.StoreId
	}
	return ""
}

func (x *GetSyncOperationsStatusRequest) GetBusinessId() string {
	if x != nil && x.BusinessId != nil {
		return *x.BusinessId
	}
	return ""
}

func (x *GetSyncOperationsStatusRequest) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *GetSyncOperationsStatusRequest) GetBatchId() string {
	if x != nil && x.BatchId != nil {
		return *x.BatchId
	}
	return ""
}

func (x *GetSyncOperationsStatusRequest) GetOperationIds() []string {
	if x != nil {
		return x.OperationIds
	}
	return nil
}

func (x *GetSyncOperationsStatusRequest) GetStatusFilter() []SyncOperationStatus {
	if x != nil {
		return x.StatusFilter
	}
	return nil
}

func (x *GetSyncOperationsStatusRequest) GetEntityTypeFilter() []SyncEntityType {
	if x != nil {
		return x.EntityTypeFilter
	}
	return nil
}

func (x *GetSyncOperationsStatusRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *GetSyncOperationsStatusRequest) GetOffset() int32 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

// Response with sync operations status
type GetSyncOperationsStatusResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of operations with their current status
	Operations []*SyncOperation `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	// Total number of operations matching the filter
	TotalCount int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// Summary statistics
	Summary       *SyncOperationsSummary `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSyncOperationsStatusResponse) Reset() {
	*x = GetSyncOperationsStatusResponse{}
	mi := &file_sync_v1_sync_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSyncOperationsStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSyncOperationsStatusResponse) ProtoMessage() {}

func (x *GetSyncOperationsStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sync_v1_sync_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSyncOperationsStatusResponse.ProtoReflect.Descriptor instead.
func (*GetSyncOperationsStatusResponse) Descriptor() ([]byte, []int) {
	return file_sync_v1_sync_proto_rawDescGZIP(), []int{6}
}

func (x *GetSyncOperationsStatusResponse) GetOperations() []*SyncOperation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *GetSyncOperationsStatusResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *GetSyncOperationsStatusResponse) GetSummary() *SyncOperationsSummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

// Summary of sync operations
type SyncOperationsSummary struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Total operations
	TotalOperations int32 `protobuf:"varint,1,opt,name=total_operations,json=totalOperations,proto3" json:"total_operations,omitempty"`
	// Pending operations
	PendingOperations int32 `protobuf:"varint,2,opt,name=pending_operations,json=pendingOperations,proto3" json:"pending_operations,omitempty"`
	// In progress operations
	InProgressOperations int32 `protobuf:"varint,3,opt,name=in_progress_operations,json=inProgressOperations,proto3" json:"in_progress_operations,omitempty"`
	// Successful operations
	SuccessfulOperations int32 `protobuf:"varint,4,opt,name=successful_operations,json=successfulOperations,proto3" json:"successful_operations,omitempty"`
	// Failed operations
	FailedOperations int32 `protobuf:"varint,5,opt,name=failed_operations,json=failedOperations,proto3" json:"failed_operations,omitempty"`
	// Retrying operations
	RetryingOperations int32 `protobuf:"varint,6,opt,name=retrying_operations,json=retryingOperations,proto3" json:"retrying_operations,omitempty"`
	// Abandoned operations
	AbandonedOperations int32 `protobuf:"varint,7,opt,name=abandoned_operations,json=abandonedOperations,proto3" json:"abandoned_operations,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *SyncOperationsSummary) Reset() {
	*x = SyncOperationsSummary{}
	mi := &file_sync_v1_sync_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncOperationsSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncOperationsSummary) ProtoMessage() {}

func (x *SyncOperationsSummary) ProtoReflect() protoreflect.Message {
	mi := &file_sync_v1_sync_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncOperationsSummary.ProtoReflect.Descriptor instead.
func (*SyncOperationsSummary) Descriptor() ([]byte, []int) {
	return file_sync_v1_sync_proto_rawDescGZIP(), []int{7}
}

func (x *SyncOperationsSummary) GetTotalOperations() int32 {
	if x != nil {
		return x.TotalOperations
	}
	return 0
}

func (x *SyncOperationsSummary) GetPendingOperations() int32 {
	if x != nil {
		return x.PendingOperations
	}
	return 0
}

func (x *SyncOperationsSummary) GetInProgressOperations() int32 {
	if x != nil {
		return x.InProgressOperations
	}
	return 0
}

func (x *SyncOperationsSummary) GetSuccessfulOperations() int32 {
	if x != nil {
		return x.SuccessfulOperations
	}
	return 0
}

func (x *SyncOperationsSummary) GetFailedOperations() int32 {
	if x != nil {
		return x.FailedOperations
	}
	return 0
}

func (x *SyncOperationsSummary) GetRetryingOperations() int32 {
	if x != nil {
		return x.RetryingOperations
	}
	return 0
}

func (x *SyncOperationsSummary) GetAbandonedOperations() int32 {
	if x != nil {
		return x.AbandonedOperations
	}
	return 0
}

// Request to stream sync operations in real-time
type StreamSyncOperationsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Store ID
	StoreId *string `protobuf:"bytes,1,opt,name=store_id,json=storeId,proto3,oneof" json:"store_id,omitempty"`
	// Business ID
	BusinessId *string `protobuf:"bytes,2,opt,name=business_id,json=businessId,proto3,oneof" json:"business_id,omitempty"`
	// User ID
	UserId *string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	// Filter by entity types
	EntityTypeFilter []SyncEntityType `protobuf:"varint,4,rep,packed,name=entity_type_filter,json=entityTypeFilter,proto3,enum=sync.v1.SyncEntityType" json:"entity_type_filter,omitempty"`
	// Filter by operation types
	OperationTypeFilter []SyncOperationType `protobuf:"varint,5,rep,packed,name=operation_type_filter,json=operationTypeFilter,proto3,enum=sync.v1.SyncOperationType" json:"operation_type_filter,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *StreamSyncOperationsRequest) Reset() {
	*x = StreamSyncOperationsRequest{}
	mi := &file_sync_v1_sync_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamSyncOperationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamSyncOperationsRequest) ProtoMessage() {}

func (x *StreamSyncOperationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sync_v1_sync_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamSyncOperationsRequest.ProtoReflect.Descriptor instead.
func (*StreamSyncOperationsRequest) Descriptor() ([]byte, []int) {
	return file_sync_v1_sync_proto_rawDescGZIP(), []int{8}
}

func (x *StreamSyncOperationsRequest) GetStoreId() string {
	if x != nil && x.StoreId != nil {
		return *x.StoreId
	}
	return ""
}

func (x *StreamSyncOperationsRequest) GetBusinessId() string {
	if x != nil && x.BusinessId != nil {
		return *x.BusinessId
	}
	return ""
}

func (x *StreamSyncOperationsRequest) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *StreamSyncOperationsRequest) GetEntityTypeFilter() []SyncEntityType {
	if x != nil {
		return x.EntityTypeFilter
	}
	return nil
}

func (x *StreamSyncOperationsRequest) GetOperationTypeFilter() []SyncOperationType {
	if x != nil {
		return x.OperationTypeFilter
	}
	return nil
}

// Response for streaming sync operations
type StreamSyncOperationsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The sync operation that was updated
	Operation *SyncOperation `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
	// Type of update (created, updated, deleted)
	UpdateType string `protobuf:"bytes,2,opt,name=update_type,json=updateType,proto3" json:"update_type,omitempty"`
	// Timestamp of the update
	UpdateTimestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=update_timestamp,json=updateTimestamp,proto3" json:"update_timestamp,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *StreamSyncOperationsResponse) Reset() {
	*x = StreamSyncOperationsResponse{}
	mi := &file_sync_v1_sync_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamSyncOperationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamSyncOperationsResponse) ProtoMessage() {}

func (x *StreamSyncOperationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sync_v1_sync_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamSyncOperationsResponse.ProtoReflect.Descriptor instead.
func (*StreamSyncOperationsResponse) Descriptor() ([]byte, []int) {
	return file_sync_v1_sync_proto_rawDescGZIP(), []int{9}
}

func (x *StreamSyncOperationsResponse) GetOperation() *SyncOperation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *StreamSyncOperationsResponse) GetUpdateType() string {
	if x != nil {
		return x.UpdateType
	}
	return ""
}

func (x *StreamSyncOperationsResponse) GetUpdateTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTimestamp
	}
	return nil
}

// Request to retry failed sync operations
type RetrySyncOperationsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Store ID
	StoreId *string `protobuf:"bytes,1,opt,name=store_id,json=storeId,proto3,oneof" json:"store_id,omitempty"`
	// Business ID
	BusinessId *string `protobuf:"bytes,2,opt,name=business_id,json=businessId,proto3,oneof" json:"business_id,omitempty"`
	// User ID
	UserId *string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	// Specific operation IDs to retry
	OperationIds []string `protobuf:"bytes,4,rep,name=operation_ids,json=operationIds,proto3" json:"operation_ids,omitempty"`
	// Batch ID to retry all operations in batch
	BatchId *string `protobuf:"bytes,5,opt,name=batch_id,json=batchId,proto3,oneof" json:"batch_id,omitempty"`
	// Retry all failed operations (if no specific IDs provided)
	RetryAllFailed *bool `protobuf:"varint,6,opt,name=retry_all_failed,json=retryAllFailed,proto3,oneof" json:"retry_all_failed,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RetrySyncOperationsRequest) Reset() {
	*x = RetrySyncOperationsRequest{}
	mi := &file_sync_v1_sync_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetrySyncOperationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrySyncOperationsRequest) ProtoMessage() {}

func (x *RetrySyncOperationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sync_v1_sync_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrySyncOperationsRequest.ProtoReflect.Descriptor instead.
func (*RetrySyncOperationsRequest) Descriptor() ([]byte, []int) {
	return file_sync_v1_sync_proto_rawDescGZIP(), []int{10}
}

func (x *RetrySyncOperationsRequest) GetStoreId() string {
	if x != nil && x.StoreId != nil {
		return *x.StoreId
	}
	return ""
}

func (x *RetrySyncOperationsRequest) GetBusinessId() string {
	if x != nil && x.BusinessId != nil {
		return *x.BusinessId
	}
	return ""
}

func (x *RetrySyncOperationsRequest) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *RetrySyncOperationsRequest) GetOperationIds() []string {
	if x != nil {
		return x.OperationIds
	}
	return nil
}

func (x *RetrySyncOperationsRequest) GetBatchId() string {
	if x != nil && x.BatchId != nil {
		return *x.BatchId
	}
	return ""
}

func (x *RetrySyncOperationsRequest) GetRetryAllFailed() bool {
	if x != nil && x.RetryAllFailed != nil {
		return *x.RetryAllFailed
	}
	return false
}

// Response to retry sync operations
type RetrySyncOperationsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Number of operations queued for retry
	OperationsQueued int32 `protobuf:"varint,1,opt,name=operations_queued,json=operationsQueued,proto3" json:"operations_queued,omitempty"`
	// List of operation IDs that were queued for retry
	QueuedOperationIds []string `protobuf:"bytes,2,rep,name=queued_operation_ids,json=queuedOperationIds,proto3" json:"queued_operation_ids,omitempty"`
	// List of operation IDs that could not be retried
	FailedToQueueIds []string `protobuf:"bytes,3,rep,name=failed_to_queue_ids,json=failedToQueueIds,proto3" json:"failed_to_queue_ids,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RetrySyncOperationsResponse) Reset() {
	*x = RetrySyncOperationsResponse{}
	mi := &file_sync_v1_sync_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetrySyncOperationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrySyncOperationsResponse) ProtoMessage() {}

func (x *RetrySyncOperationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sync_v1_sync_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrySyncOperationsResponse.ProtoReflect.Descriptor instead.
func (*RetrySyncOperationsResponse) Descriptor() ([]byte, []int) {
	return file_sync_v1_sync_proto_rawDescGZIP(), []int{11}
}

func (x *RetrySyncOperationsResponse) GetOperationsQueued() int32 {
	if x != nil {
		return x.OperationsQueued
	}
	return 0
}

func (x *RetrySyncOperationsResponse) GetQueuedOperationIds() []string {
	if x != nil {
		return x.QueuedOperationIds
	}
	return nil
}

func (x *RetrySyncOperationsResponse) GetFailedToQueueIds() []string {
	if x != nil {
		return x.FailedToQueueIds
	}
	return nil
}

var File_sync_v1_sync_proto protoreflect.FileDescriptor

const file_sync_v1_sync_proto_rawDesc = "" +
	"\n" +
	"\x12sync/v1/sync.proto\x12\async.v1\x1a\x1bbuf/validate/validate.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1binventory/v1/category.proto\x1a inventory/v1/store_product.proto\x1a\x1aorder/v1/sales_order.proto\"\xb5\t\n" +
	"\rSyncOperation\x12\x1e\n" +
	"\x06ref_id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x05refId\x12K\n" +
	"\x0eoperation_type\x18\x02 \x01(\x0e2\x1a.sync.v1.SyncOperationTypeB\b\xbaH\x05\x82\x01\x02\x10\x01R\roperationType\x12B\n" +
	"\ventity_type\x18\x03 \x01(\x0e2\x17.sync.v1.SyncEntityTypeB\b\xbaH\x05\x82\x01\x02\x10\x01R\n" +
	"entityType\x12$\n" +
	"\tentity_id\x18\x04 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\bentityId\x12\x1e\n" +
	"\bstore_id\x18\x05 \x01(\tH\x01R\astoreId\x88\x01\x01\x12$\n" +
	"\vbusiness_id\x18\x06 \x01(\tH\x02R\n" +
	"businessId\x88\x01\x01\x12\x1c\n" +
	"\auser_id\x18\a \x01(\tH\x03R\x06userId\x88\x01\x01\x12J\n" +
	"\x12store_product_data\x18\n" +
	" \x01(\v2\x1a.inventory.v1.StoreProductH\x00R\x10storeProductData\x12M\n" +
	"\x13global_product_data\x18\v \x01(\v2\x1b.inventory.v1.GlobalProductH\x00R\x11globalProductData\x12=\n" +
	"\rcategory_data\x18\f \x01(\v2\x16.inventory.v1.CategoryH\x00R\fcategoryData\x125\n" +
	"\n" +
	"order_data\x18\r \x01(\v2\x14.order.v1.SalesOrderH\x00R\torderData\x12\x1d\n" +
	"\tjson_data\x18( \x01(\tH\x00R\bjsonData\x129\n" +
	"\n" +
	"created_at\x18) \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18* \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x124\n" +
	"\x06status\x18+ \x01(\x0e2\x1c.sync.v1.SyncOperationStatusR\x06status\x12\x1f\n" +
	"\vretry_count\x18, \x01(\x05R\n" +
	"retryCount\x12\x1f\n" +
	"\vmax_retries\x18- \x01(\x05R\n" +
	"maxRetries\x12C\n" +
	"\rnext_retry_at\x18. \x01(\v2\x1a.google.protobuf.TimestampH\x04R\vnextRetryAt\x88\x01\x01\x12(\n" +
	"\rerror_message\x18/ \x01(\tH\x05R\ferrorMessage\x88\x01\x01\x12@\n" +
	"\bmetadata\x180 \x03(\v2$.sync.v1.SyncOperation.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x10\n" +
	"\x0eoperation_dataB\v\n" +
	"\t_store_idB\x0e\n" +
	"\f_business_idB\n" +
	"\n" +
	"\b_user_idB\x10\n" +
	"\x0e_next_retry_atB\x10\n" +
	"\x0e_error_message\"\xc9\x04\n" +
	"\x12SyncOperationBatch\x12\"\n" +
	"\bbatch_id\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\abatchId\x126\n" +
	"\n" +
	"operations\x18\x02 \x03(\v2\x16.sync.v1.SyncOperationR\n" +
	"operations\x12\x1e\n" +
	"\bstore_id\x18\x03 \x01(\tH\x00R\astoreId\x88\x01\x01\x12$\n" +
	"\vbusiness_id\x18\x04 \x01(\tH\x01R\n" +
	"businessId\x88\x01\x01\x12\x1c\n" +
	"\auser_id\x18\x05 \x01(\tH\x02R\x06userId\x88\x01\x01\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12)\n" +
	"\x10total_operations\x18\a \x01(\x05R\x0ftotalOperations\x123\n" +
	"\x15successful_operations\x18\b \x01(\x05R\x14successfulOperations\x12+\n" +
	"\x11failed_operations\x18\t \x01(\x05R\x10failedOperations\x12E\n" +
	"\bmetadata\x18\n" +
	" \x03(\v2).sync.v1.SyncOperationBatch.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\v\n" +
	"\t_store_idB\x0e\n" +
	"\f_business_idB\n" +
	"\n" +
	"\b_user_id\"\xd2\x02\n" +
	"\x1bSubmitSyncOperationsRequest\x12\x1e\n" +
	"\bstore_id\x18\x01 \x01(\tH\x00R\astoreId\x88\x01\x01\x12$\n" +
	"\vbusiness_id\x18\x02 \x01(\tH\x01R\n" +
	"businessId\x88\x01\x01\x12\x1c\n" +
	"\auser_id\x18\x03 \x01(\tH\x02R\x06userId\x88\x01\x01\x12@\n" +
	"\n" +
	"operations\x18\x04 \x03(\v2\x16.sync.v1.SyncOperationB\b\xbaH\x05\x92\x01\x02\b\x01R\n" +
	"operations\x12 \n" +
	"\tdevice_id\x18\x05 \x01(\tH\x03R\bdeviceId\x88\x01\x01\x12$\n" +
	"\vapp_version\x18\x06 \x01(\tH\x04R\n" +
	"appVersion\x88\x01\x01B\v\n" +
	"\t_store_idB\x0e\n" +
	"\f_business_idB\n" +
	"\n" +
	"\b_user_idB\f\n" +
	"\n" +
	"_device_idB\x0e\n" +
	"\f_app_version\"\x84\x02\n" +
	"\x1cSubmitSyncOperationsResponse\x12\x19\n" +
	"\bbatch_id\x18\x01 \x01(\tR\abatchId\x12I\n" +
	"\x11operation_results\x18\x02 \x03(\v2\x1c.sync.v1.SyncOperationResultR\x10operationResults\x12?\n" +
	"\fbatch_status\x18\x03 \x01(\x0e2\x1c.sync.v1.SyncOperationStatusR\vbatchStatus\x12=\n" +
	"\fprocessed_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\vprocessedAt\"\xad\x02\n" +
	"\x13SyncOperationResult\x12!\n" +
	"\foperation_id\x18\x01 \x01(\tR\voperationId\x124\n" +
	"\x06status\x18\x02 \x01(\x0e2\x1c.sync.v1.SyncOperationStatusR\x06status\x12(\n" +
	"\rerror_message\x18\x03 \x01(\tH\x00R\ferrorMessage\x88\x01\x01\x12-\n" +
	"\x10server_entity_id\x18\x04 \x01(\tH\x01R\x0eserverEntityId\x88\x01\x01\x12=\n" +
	"\fprocessed_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\vprocessedAtB\x10\n" +
	"\x0e_error_messageB\x13\n" +
	"\x11_server_entity_id\"\xd6\x03\n" +
	"\x1eGetSyncOperationsStatusRequest\x12\x1e\n" +
	"\bstore_id\x18\x01 \x01(\tH\x00R\astoreId\x88\x01\x01\x12$\n" +
	"\vbusiness_id\x18\x02 \x01(\tH\x01R\n" +
	"businessId\x88\x01\x01\x12\x1c\n" +
	"\auser_id\x18\x03 \x01(\tH\x02R\x06userId\x88\x01\x01\x12\x1e\n" +
	"\bbatch_id\x18\x04 \x01(\tH\x03R\abatchId\x88\x01\x01\x12#\n" +
	"\roperation_ids\x18\x05 \x03(\tR\foperationIds\x12A\n" +
	"\rstatus_filter\x18\x06 \x03(\x0e2\x1c.sync.v1.SyncOperationStatusR\fstatusFilter\x12E\n" +
	"\x12entity_type_filter\x18\a \x03(\x0e2\x17.sync.v1.SyncEntityTypeR\x10entityTypeFilter\x12\x19\n" +
	"\x05limit\x18\b \x01(\x05H\x04R\x05limit\x88\x01\x01\x12\x1b\n" +
	"\x06offset\x18\t \x01(\x05H\x05R\x06offset\x88\x01\x01B\v\n" +
	"\t_store_idB\x0e\n" +
	"\f_business_idB\n" +
	"\n" +
	"\b_user_idB\v\n" +
	"\t_batch_idB\b\n" +
	"\x06_limitB\t\n" +
	"\a_offset\"\xb4\x01\n" +
	"\x1fGetSyncOperationsStatusResponse\x126\n" +
	"\n" +
	"operations\x18\x01 \x03(\v2\x16.sync.v1.SyncOperationR\n" +
	"operations\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x128\n" +
	"\asummary\x18\x03 \x01(\v2\x1e.sync.v1.SyncOperationsSummaryR\asummary\"\xed\x02\n" +
	"\x15SyncOperationsSummary\x12)\n" +
	"\x10total_operations\x18\x01 \x01(\x05R\x0ftotalOperations\x12-\n" +
	"\x12pending_operations\x18\x02 \x01(\x05R\x11pendingOperations\x124\n" +
	"\x16in_progress_operations\x18\x03 \x01(\x05R\x14inProgressOperations\x123\n" +
	"\x15successful_operations\x18\x04 \x01(\x05R\x14successfulOperations\x12+\n" +
	"\x11failed_operations\x18\x05 \x01(\x05R\x10failedOperations\x12/\n" +
	"\x13retrying_operations\x18\x06 \x01(\x05R\x12retryingOperations\x121\n" +
	"\x14abandoned_operations\x18\a \x01(\x05R\x13abandonedOperations\"\xc1\x02\n" +
	"\x1bStreamSyncOperationsRequest\x12\x1e\n" +
	"\bstore_id\x18\x01 \x01(\tH\x00R\astoreId\x88\x01\x01\x12$\n" +
	"\vbusiness_id\x18\x02 \x01(\tH\x01R\n" +
	"businessId\x88\x01\x01\x12\x1c\n" +
	"\auser_id\x18\x03 \x01(\tH\x02R\x06userId\x88\x01\x01\x12E\n" +
	"\x12entity_type_filter\x18\x04 \x03(\x0e2\x17.sync.v1.SyncEntityTypeR\x10entityTypeFilter\x12N\n" +
	"\x15operation_type_filter\x18\x05 \x03(\x0e2\x1a.sync.v1.SyncOperationTypeR\x13operationTypeFilterB\v\n" +
	"\t_store_idB\x0e\n" +
	"\f_business_idB\n" +
	"\n" +
	"\b_user_id\"\xbc\x01\n" +
	"\x1cStreamSyncOperationsResponse\x124\n" +
	"\toperation\x18\x01 \x01(\v2\x16.sync.v1.SyncOperationR\toperation\x12\x1f\n" +
	"\vupdate_type\x18\x02 \x01(\tR\n" +
	"updateType\x12E\n" +
	"\x10update_timestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x0fupdateTimestamp\"\xbf\x02\n" +
	"\x1aRetrySyncOperationsRequest\x12\x1e\n" +
	"\bstore_id\x18\x01 \x01(\tH\x00R\astoreId\x88\x01\x01\x12$\n" +
	"\vbusiness_id\x18\x02 \x01(\tH\x01R\n" +
	"businessId\x88\x01\x01\x12\x1c\n" +
	"\auser_id\x18\x03 \x01(\tH\x02R\x06userId\x88\x01\x01\x12#\n" +
	"\roperation_ids\x18\x04 \x03(\tR\foperationIds\x12\x1e\n" +
	"\bbatch_id\x18\x05 \x01(\tH\x03R\abatchId\x88\x01\x01\x12-\n" +
	"\x10retry_all_failed\x18\x06 \x01(\bH\x04R\x0eretryAllFailed\x88\x01\x01B\v\n" +
	"\t_store_idB\x0e\n" +
	"\f_business_idB\n" +
	"\n" +
	"\b_user_idB\v\n" +
	"\t_batch_idB\x13\n" +
	"\x11_retry_all_failed\"\xab\x01\n" +
	"\x1bRetrySyncOperationsResponse\x12+\n" +
	"\x11operations_queued\x18\x01 \x01(\x05R\x10operationsQueued\x120\n" +
	"\x14queued_operation_ids\x18\x02 \x03(\tR\x12queuedOperationIds\x12-\n" +
	"\x13failed_to_queue_ids\x18\x03 \x03(\tR\x10failedToQueueIds*\x98\x01\n" +
	"\x11SyncOperationType\x12#\n" +
	"\x1fSYNC_OPERATION_TYPE_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aSYNC_OPERATION_TYPE_CREATE\x10\x01\x12\x1e\n" +
	"\x1aSYNC_OPERATION_TYPE_UPDATE\x10\x02\x12\x1e\n" +
	"\x1aSYNC_OPERATION_TYPE_DELETE\x10\x03*N\n" +
	"\x0eSyncEntityType\x12 \n" +
	"\x1cSYNC_ENTITY_TYPE_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16SYNC_ENTITY_TYPE_ORDER\x10\x01*\x94\x02\n" +
	"\x13SyncOperationStatus\x12%\n" +
	"!SYNC_OPERATION_STATUS_UNSPECIFIED\x10\x00\x12!\n" +
	"\x1dSYNC_OPERATION_STATUS_PENDING\x10\x01\x12%\n" +
	"!SYNC_OPERATION_STATUS_IN_PROGRESS\x10\x02\x12!\n" +
	"\x1dSYNC_OPERATION_STATUS_SUCCESS\x10\x03\x12 \n" +
	"\x1cSYNC_OPERATION_STATUS_FAILED\x10\x04\x12\"\n" +
	"\x1eSYNC_OPERATION_STATUS_RETRYING\x10\x05\x12#\n" +
	"\x1fSYNC_OPERATION_STATUS_ABANDONED\x10\x062\xa9\x03\n" +
	"\vSyncService\x12c\n" +
	"\x14SubmitSyncOperations\x12$.sync.v1.SubmitSyncOperationsRequest\x1a%.sync.v1.SubmitSyncOperationsResponse\x12l\n" +
	"\x17GetSyncOperationsStatus\x12'.sync.v1.GetSyncOperationsStatusRequest\x1a(.sync.v1.GetSyncOperationsStatusResponse\x12e\n" +
	"\x14StreamSyncOperations\x12$.sync.v1.StreamSyncOperationsRequest\x1a%.sync.v1.StreamSyncOperationsResponse0\x01\x12`\n" +
	"\x13RetrySyncOperations\x12#.sync.v1.RetrySyncOperationsRequest\x1a$.sync.v1.RetrySyncOperationsResponseB\x95\x01\n" +
	"\vcom.sync.v1B\tSyncProtoP\x01Z>github.com/karibu-cap/sabitou/protos/gen/go/rpc/sync/v1;syncv1\xa2\x02\x03SXX\xaa\x02\aSync.V1\xca\x02\aSync\\V1\xe2\x02\x13Sync\\V1\\GPBMetadata\xea\x02\bSync::V1b\x06proto3"

var (
	file_sync_v1_sync_proto_rawDescOnce sync.Once
	file_sync_v1_sync_proto_rawDescData []byte
)

func file_sync_v1_sync_proto_rawDescGZIP() []byte {
	file_sync_v1_sync_proto_rawDescOnce.Do(func() {
		file_sync_v1_sync_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sync_v1_sync_proto_rawDesc), len(file_sync_v1_sync_proto_rawDesc)))
	})
	return file_sync_v1_sync_proto_rawDescData
}

var file_sync_v1_sync_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_sync_v1_sync_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_sync_v1_sync_proto_goTypes = []any{
	(SyncOperationType)(0),                  // 0: sync.v1.SyncOperationType
	(SyncEntityType)(0),                     // 1: sync.v1.SyncEntityType
	(SyncOperationStatus)(0),                // 2: sync.v1.SyncOperationStatus
	(*SyncOperation)(nil),                   // 3: sync.v1.SyncOperation
	(*SyncOperationBatch)(nil),              // 4: sync.v1.SyncOperationBatch
	(*SubmitSyncOperationsRequest)(nil),     // 5: sync.v1.SubmitSyncOperationsRequest
	(*SubmitSyncOperationsResponse)(nil),    // 6: sync.v1.SubmitSyncOperationsResponse
	(*SyncOperationResult)(nil),             // 7: sync.v1.SyncOperationResult
	(*GetSyncOperationsStatusRequest)(nil),  // 8: sync.v1.GetSyncOperationsStatusRequest
	(*GetSyncOperationsStatusResponse)(nil), // 9: sync.v1.GetSyncOperationsStatusResponse
	(*SyncOperationsSummary)(nil),           // 10: sync.v1.SyncOperationsSummary
	(*StreamSyncOperationsRequest)(nil),     // 11: sync.v1.StreamSyncOperationsRequest
	(*StreamSyncOperationsResponse)(nil),    // 12: sync.v1.StreamSyncOperationsResponse
	(*RetrySyncOperationsRequest)(nil),      // 13: sync.v1.RetrySyncOperationsRequest
	(*RetrySyncOperationsResponse)(nil),     // 14: sync.v1.RetrySyncOperationsResponse
	nil,                                     // 15: sync.v1.SyncOperation.MetadataEntry
	nil,                                     // 16: sync.v1.SyncOperationBatch.MetadataEntry
	(*v1.StoreProduct)(nil),                 // 17: inventory.v1.StoreProduct
	(*v1.GlobalProduct)(nil),                // 18: inventory.v1.GlobalProduct
	(*v1.Category)(nil),                     // 19: inventory.v1.Category
	(*v11.SalesOrder)(nil),                  // 20: order.v1.SalesOrder
	(*timestamppb.Timestamp)(nil),           // 21: google.protobuf.Timestamp
}
var file_sync_v1_sync_proto_depIdxs = []int32{
	0,  // 0: sync.v1.SyncOperation.operation_type:type_name -> sync.v1.SyncOperationType
	1,  // 1: sync.v1.SyncOperation.entity_type:type_name -> sync.v1.SyncEntityType
	17, // 2: sync.v1.SyncOperation.store_product_data:type_name -> inventory.v1.StoreProduct
	18, // 3: sync.v1.SyncOperation.global_product_data:type_name -> inventory.v1.GlobalProduct
	19, // 4: sync.v1.SyncOperation.category_data:type_name -> inventory.v1.Category
	20, // 5: sync.v1.SyncOperation.order_data:type_name -> order.v1.SalesOrder
	21, // 6: sync.v1.SyncOperation.created_at:type_name -> google.protobuf.Timestamp
	21, // 7: sync.v1.SyncOperation.updated_at:type_name -> google.protobuf.Timestamp
	2,  // 8: sync.v1.SyncOperation.status:type_name -> sync.v1.SyncOperationStatus
	21, // 9: sync.v1.SyncOperation.next_retry_at:type_name -> google.protobuf.Timestamp
	15, // 10: sync.v1.SyncOperation.metadata:type_name -> sync.v1.SyncOperation.MetadataEntry
	3,  // 11: sync.v1.SyncOperationBatch.operations:type_name -> sync.v1.SyncOperation
	21, // 12: sync.v1.SyncOperationBatch.created_at:type_name -> google.protobuf.Timestamp
	16, // 13: sync.v1.SyncOperationBatch.metadata:type_name -> sync.v1.SyncOperationBatch.MetadataEntry
	3,  // 14: sync.v1.SubmitSyncOperationsRequest.operations:type_name -> sync.v1.SyncOperation
	7,  // 15: sync.v1.SubmitSyncOperationsResponse.operation_results:type_name -> sync.v1.SyncOperationResult
	2,  // 16: sync.v1.SubmitSyncOperationsResponse.batch_status:type_name -> sync.v1.SyncOperationStatus
	21, // 17: sync.v1.SubmitSyncOperationsResponse.processed_at:type_name -> google.protobuf.Timestamp
	2,  // 18: sync.v1.SyncOperationResult.status:type_name -> sync.v1.SyncOperationStatus
	21, // 19: sync.v1.SyncOperationResult.processed_at:type_name -> google.protobuf.Timestamp
	2,  // 20: sync.v1.GetSyncOperationsStatusRequest.status_filter:type_name -> sync.v1.SyncOperationStatus
	1,  // 21: sync.v1.GetSyncOperationsStatusRequest.entity_type_filter:type_name -> sync.v1.SyncEntityType
	3,  // 22: sync.v1.GetSyncOperationsStatusResponse.operations:type_name -> sync.v1.SyncOperation
	10, // 23: sync.v1.GetSyncOperationsStatusResponse.summary:type_name -> sync.v1.SyncOperationsSummary
	1,  // 24: sync.v1.StreamSyncOperationsRequest.entity_type_filter:type_name -> sync.v1.SyncEntityType
	0,  // 25: sync.v1.StreamSyncOperationsRequest.operation_type_filter:type_name -> sync.v1.SyncOperationType
	3,  // 26: sync.v1.StreamSyncOperationsResponse.operation:type_name -> sync.v1.SyncOperation
	21, // 27: sync.v1.StreamSyncOperationsResponse.update_timestamp:type_name -> google.protobuf.Timestamp
	5,  // 28: sync.v1.SyncService.SubmitSyncOperations:input_type -> sync.v1.SubmitSyncOperationsRequest
	8,  // 29: sync.v1.SyncService.GetSyncOperationsStatus:input_type -> sync.v1.GetSyncOperationsStatusRequest
	11, // 30: sync.v1.SyncService.StreamSyncOperations:input_type -> sync.v1.StreamSyncOperationsRequest
	13, // 31: sync.v1.SyncService.RetrySyncOperations:input_type -> sync.v1.RetrySyncOperationsRequest
	6,  // 32: sync.v1.SyncService.SubmitSyncOperations:output_type -> sync.v1.SubmitSyncOperationsResponse
	9,  // 33: sync.v1.SyncService.GetSyncOperationsStatus:output_type -> sync.v1.GetSyncOperationsStatusResponse
	12, // 34: sync.v1.SyncService.StreamSyncOperations:output_type -> sync.v1.StreamSyncOperationsResponse
	14, // 35: sync.v1.SyncService.RetrySyncOperations:output_type -> sync.v1.RetrySyncOperationsResponse
	32, // [32:36] is the sub-list for method output_type
	28, // [28:32] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_sync_v1_sync_proto_init() }
func file_sync_v1_sync_proto_init() {
	if File_sync_v1_sync_proto != nil {
		return
	}
	file_sync_v1_sync_proto_msgTypes[0].OneofWrappers = []any{
		(*SyncOperation_StoreProductData)(nil),
		(*SyncOperation_GlobalProductData)(nil),
		(*SyncOperation_CategoryData)(nil),
		(*SyncOperation_OrderData)(nil),
		(*SyncOperation_JsonData)(nil),
	}
	file_sync_v1_sync_proto_msgTypes[1].OneofWrappers = []any{}
	file_sync_v1_sync_proto_msgTypes[2].OneofWrappers = []any{}
	file_sync_v1_sync_proto_msgTypes[4].OneofWrappers = []any{}
	file_sync_v1_sync_proto_msgTypes[5].OneofWrappers = []any{}
	file_sync_v1_sync_proto_msgTypes[8].OneofWrappers = []any{}
	file_sync_v1_sync_proto_msgTypes[10].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sync_v1_sync_proto_rawDesc), len(file_sync_v1_sync_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sync_v1_sync_proto_goTypes,
		DependencyIndexes: file_sync_v1_sync_proto_depIdxs,
		EnumInfos:         file_sync_v1_sync_proto_enumTypes,
		MessageInfos:      file_sync_v1_sync_proto_msgTypes,
	}.Build()
	File_sync_v1_sync_proto = out.File
	file_sync_v1_sync_proto_goTypes = nil
	file_sync_v1_sync_proto_depIdxs = nil
}
