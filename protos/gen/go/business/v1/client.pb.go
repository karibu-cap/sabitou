// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: business/v1/client.proto

package businessv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BusinessClient struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The reference id to the client identifier.
	RefId *string `protobuf:"bytes,1,opt,name=ref_id,json=refId,proto3,oneof" json:"ref_id,omitempty"`
	// The name of the client.
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PhoneNumber string `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	// The id of the media of the logo of the client.
	LogoMediaId *string `protobuf:"bytes,4,opt,name=logo_media_id,json=logoMediaId,proto3,oneof" json:"logo_media_id,omitempty"`
	// The id of the business of the client.
	BusinessId    string `protobuf:"bytes,5,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BusinessClient) Reset() {
	*x = BusinessClient{}
	mi := &file_business_v1_client_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BusinessClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusinessClient) ProtoMessage() {}

func (x *BusinessClient) ProtoReflect() protoreflect.Message {
	mi := &file_business_v1_client_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusinessClient.ProtoReflect.Descriptor instead.
func (*BusinessClient) Descriptor() ([]byte, []int) {
	return file_business_v1_client_proto_rawDescGZIP(), []int{0}
}

func (x *BusinessClient) GetRefId() string {
	if x != nil && x.RefId != nil {
		return *x.RefId
	}
	return ""
}

func (x *BusinessClient) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BusinessClient) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *BusinessClient) GetLogoMediaId() string {
	if x != nil && x.LogoMediaId != nil {
		return *x.LogoMediaId
	}
	return ""
}

func (x *BusinessClient) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

type CreateBusinessClientRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The client information to create.
	Client *BusinessClient `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	// The raw image of the logo of the client.
	LogoRawImage  []byte `protobuf:"bytes,2,opt,name=logo_raw_image,json=logoRawImage,proto3,oneof" json:"logo_raw_image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBusinessClientRequest) Reset() {
	*x = CreateBusinessClientRequest{}
	mi := &file_business_v1_client_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBusinessClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBusinessClientRequest) ProtoMessage() {}

func (x *CreateBusinessClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_business_v1_client_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBusinessClientRequest.ProtoReflect.Descriptor instead.
func (*CreateBusinessClientRequest) Descriptor() ([]byte, []int) {
	return file_business_v1_client_proto_rawDescGZIP(), []int{1}
}

func (x *CreateBusinessClientRequest) GetClient() *BusinessClient {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *CreateBusinessClientRequest) GetLogoRawImage() []byte {
	if x != nil {
		return x.LogoRawImage
	}
	return nil
}

type CreateBusinessClientResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The reference id to the client identifier.
	RefId         string `protobuf:"bytes,1,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBusinessClientResponse) Reset() {
	*x = CreateBusinessClientResponse{}
	mi := &file_business_v1_client_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBusinessClientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBusinessClientResponse) ProtoMessage() {}

func (x *CreateBusinessClientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_business_v1_client_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBusinessClientResponse.ProtoReflect.Descriptor instead.
func (*CreateBusinessClientResponse) Descriptor() ([]byte, []int) {
	return file_business_v1_client_proto_rawDescGZIP(), []int{2}
}

func (x *CreateBusinessClientResponse) GetRefId() string {
	if x != nil {
		return x.RefId
	}
	return ""
}

type GetBusinessClientRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The reference id to the client identifier.
	RefId         string `protobuf:"bytes,1,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBusinessClientRequest) Reset() {
	*x = GetBusinessClientRequest{}
	mi := &file_business_v1_client_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBusinessClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessClientRequest) ProtoMessage() {}

func (x *GetBusinessClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_business_v1_client_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessClientRequest.ProtoReflect.Descriptor instead.
func (*GetBusinessClientRequest) Descriptor() ([]byte, []int) {
	return file_business_v1_client_proto_rawDescGZIP(), []int{3}
}

func (x *GetBusinessClientRequest) GetRefId() string {
	if x != nil {
		return x.RefId
	}
	return ""
}

type GetBusinessClientResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The retrieved client data.
	Client        *BusinessClient `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBusinessClientResponse) Reset() {
	*x = GetBusinessClientResponse{}
	mi := &file_business_v1_client_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBusinessClientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessClientResponse) ProtoMessage() {}

func (x *GetBusinessClientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_business_v1_client_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessClientResponse.ProtoReflect.Descriptor instead.
func (*GetBusinessClientResponse) Descriptor() ([]byte, []int) {
	return file_business_v1_client_proto_rawDescGZIP(), []int{4}
}

func (x *GetBusinessClientResponse) GetClient() *BusinessClient {
	if x != nil {
		return x.Client
	}
	return nil
}

type UpdateBusinessClientRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The client information to update.
	// Note:Only the fields that are set will be updated.
	Client *BusinessClient `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	// The raw image of the logo of the client.
	LogoRawImage  []byte `protobuf:"bytes,2,opt,name=logo_raw_image,json=logoRawImage,proto3,oneof" json:"logo_raw_image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateBusinessClientRequest) Reset() {
	*x = UpdateBusinessClientRequest{}
	mi := &file_business_v1_client_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBusinessClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBusinessClientRequest) ProtoMessage() {}

func (x *UpdateBusinessClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_business_v1_client_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBusinessClientRequest.ProtoReflect.Descriptor instead.
func (*UpdateBusinessClientRequest) Descriptor() ([]byte, []int) {
	return file_business_v1_client_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateBusinessClientRequest) GetClient() *BusinessClient {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *UpdateBusinessClientRequest) GetLogoRawImage() []byte {
	if x != nil {
		return x.LogoRawImage
	}
	return nil
}

type UpdateBusinessClientResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The updated client data.
	Client        *BusinessClient `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateBusinessClientResponse) Reset() {
	*x = UpdateBusinessClientResponse{}
	mi := &file_business_v1_client_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBusinessClientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBusinessClientResponse) ProtoMessage() {}

func (x *UpdateBusinessClientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_business_v1_client_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBusinessClientResponse.ProtoReflect.Descriptor instead.
func (*UpdateBusinessClientResponse) Descriptor() ([]byte, []int) {
	return file_business_v1_client_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateBusinessClientResponse) GetClient() *BusinessClient {
	if x != nil {
		return x.Client
	}
	return nil
}

type DeleteBusinessClientRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The reference id to the client identifier.
	RefId         string `protobuf:"bytes,1,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteBusinessClientRequest) Reset() {
	*x = DeleteBusinessClientRequest{}
	mi := &file_business_v1_client_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBusinessClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBusinessClientRequest) ProtoMessage() {}

func (x *DeleteBusinessClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_business_v1_client_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBusinessClientRequest.ProtoReflect.Descriptor instead.
func (*DeleteBusinessClientRequest) Descriptor() ([]byte, []int) {
	return file_business_v1_client_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteBusinessClientRequest) GetRefId() string {
	if x != nil {
		return x.RefId
	}
	return ""
}

type DeleteBusinessClientResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the client was successfully deleted.
	Success       bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteBusinessClientResponse) Reset() {
	*x = DeleteBusinessClientResponse{}
	mi := &file_business_v1_client_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBusinessClientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBusinessClientResponse) ProtoMessage() {}

func (x *DeleteBusinessClientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_business_v1_client_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBusinessClientResponse.ProtoReflect.Descriptor instead.
func (*DeleteBusinessClientResponse) Descriptor() ([]byte, []int) {
	return file_business_v1_client_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteBusinessClientResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_business_v1_client_proto protoreflect.FileDescriptor

var file_business_v1_client_proto_rawDesc = string([]byte{
	0x0a, 0x18, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xca, 0x01, 0x0a, 0x0e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x06, 0x72, 0x65, 0x66, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x72, 0x65, 0x66, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0d, 0x6c, 0x6f,
	0x67, 0x6f, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x6f, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x49, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x66, 0x5f, 0x69, 0x64, 0x42,
	0x10, 0x0a, 0x0e, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x69,
	0x64, 0x22, 0x90, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x33, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x06,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x72,
	0x61, 0x77, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00,
	0x52, 0x0c, 0x6c, 0x6f, 0x67, 0x6f, 0x52, 0x61, 0x77, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x88, 0x01,
	0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x72, 0x61, 0x77, 0x5f, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x22, 0x41, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x06, 0x72, 0x65, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xba, 0x48, 0x07, 0xc8, 0x01, 0x01, 0x72, 0x02, 0x10, 0x03,
	0x52, 0x05, 0x72, 0x65, 0x66, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x06, 0x72, 0x65, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0xba, 0x48, 0x07, 0xc8, 0x01, 0x01, 0x72, 0x02, 0x10, 0x03, 0x52,
	0x05, 0x72, 0x65, 0x66, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x90, 0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a,
	0x0e, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x72, 0x61, 0x77, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0c, 0x6c, 0x6f, 0x67, 0x6f, 0x52, 0x61, 0x77,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6c, 0x6f, 0x67,
	0x6f, 0x5f, 0x72, 0x61, 0x77, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x53, 0x0a, 0x1c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x22, 0x40, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x06, 0x72, 0x65, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0xba, 0x48, 0x07, 0xc8, 0x01, 0x01, 0x72, 0x02, 0x10, 0x03, 0x52, 0x05, 0x72, 0x65, 0x66,
	0x49, 0x64, 0x22, 0x38, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x32, 0xca, 0x03, 0x0a,
	0x15, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6d, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x28,
	0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x2e, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x14, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x12, 0x28, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x14, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x12, 0x28, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xaf, 0x01, 0x0a, 0x0f, 0x63, 0x6f,
	0x6d, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x42, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x61, 0x72, 0x69, 0x62, 0x75, 0x2d,
	0x63, 0x61, 0x70, 0x2f, 0x73, 0x61, 0x62, 0x69, 0x74, 0x6f, 0x75, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x76, 0x31,
	0xa2, 0x02, 0x03, 0x42, 0x58, 0x58, 0xaa, 0x02, 0x0b, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0b, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5c,
	0x56, 0x31, 0xe2, 0x02, 0x17, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5c, 0x56, 0x31,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0c, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
})

var (
	file_business_v1_client_proto_rawDescOnce sync.Once
	file_business_v1_client_proto_rawDescData []byte
)

func file_business_v1_client_proto_rawDescGZIP() []byte {
	file_business_v1_client_proto_rawDescOnce.Do(func() {
		file_business_v1_client_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_business_v1_client_proto_rawDesc), len(file_business_v1_client_proto_rawDesc)))
	})
	return file_business_v1_client_proto_rawDescData
}

var file_business_v1_client_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_business_v1_client_proto_goTypes = []any{
	(*BusinessClient)(nil),               // 0: business.v1.BusinessClient
	(*CreateBusinessClientRequest)(nil),  // 1: business.v1.CreateBusinessClientRequest
	(*CreateBusinessClientResponse)(nil), // 2: business.v1.CreateBusinessClientResponse
	(*GetBusinessClientRequest)(nil),     // 3: business.v1.GetBusinessClientRequest
	(*GetBusinessClientResponse)(nil),    // 4: business.v1.GetBusinessClientResponse
	(*UpdateBusinessClientRequest)(nil),  // 5: business.v1.UpdateBusinessClientRequest
	(*UpdateBusinessClientResponse)(nil), // 6: business.v1.UpdateBusinessClientResponse
	(*DeleteBusinessClientRequest)(nil),  // 7: business.v1.DeleteBusinessClientRequest
	(*DeleteBusinessClientResponse)(nil), // 8: business.v1.DeleteBusinessClientResponse
}
var file_business_v1_client_proto_depIdxs = []int32{
	0, // 0: business.v1.CreateBusinessClientRequest.client:type_name -> business.v1.BusinessClient
	0, // 1: business.v1.GetBusinessClientResponse.client:type_name -> business.v1.BusinessClient
	0, // 2: business.v1.UpdateBusinessClientRequest.client:type_name -> business.v1.BusinessClient
	0, // 3: business.v1.UpdateBusinessClientResponse.client:type_name -> business.v1.BusinessClient
	1, // 4: business.v1.BusinessClientService.CreateBusinessClient:input_type -> business.v1.CreateBusinessClientRequest
	3, // 5: business.v1.BusinessClientService.GetBusinessClient:input_type -> business.v1.GetBusinessClientRequest
	5, // 6: business.v1.BusinessClientService.UpdateBusinessClient:input_type -> business.v1.UpdateBusinessClientRequest
	7, // 7: business.v1.BusinessClientService.DeleteBusinessClient:input_type -> business.v1.DeleteBusinessClientRequest
	2, // 8: business.v1.BusinessClientService.CreateBusinessClient:output_type -> business.v1.CreateBusinessClientResponse
	4, // 9: business.v1.BusinessClientService.GetBusinessClient:output_type -> business.v1.GetBusinessClientResponse
	6, // 10: business.v1.BusinessClientService.UpdateBusinessClient:output_type -> business.v1.UpdateBusinessClientResponse
	8, // 11: business.v1.BusinessClientService.DeleteBusinessClient:output_type -> business.v1.DeleteBusinessClientResponse
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_business_v1_client_proto_init() }
func file_business_v1_client_proto_init() {
	if File_business_v1_client_proto != nil {
		return
	}
	file_business_v1_client_proto_msgTypes[0].OneofWrappers = []any{}
	file_business_v1_client_proto_msgTypes[1].OneofWrappers = []any{}
	file_business_v1_client_proto_msgTypes[5].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_business_v1_client_proto_rawDesc), len(file_business_v1_client_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_business_v1_client_proto_goTypes,
		DependencyIndexes: file_business_v1_client_proto_depIdxs,
		MessageInfos:      file_business_v1_client_proto_msgTypes,
	}.Build()
	File_business_v1_client_proto = out.File
	file_business_v1_client_proto_goTypes = nil
	file_business_v1_client_proto_depIdxs = nil
}
