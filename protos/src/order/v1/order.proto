syntax = "proto3";

package order.v1;
import "buf/validate/validate.proto";

enum OrderStatus {
  ORDER_STATUS_UNSPECIFIED = 0;
  ORDER_STATUS_PENDING = 1;
  ORDER_STATUS_PROCESSING = 2;
  ORDER_STATUS_COMPLETED = 3;
  ORDER_STATUS_CANCELLED = 4;
}

message OrderItem {
  // The unique identifier of the business product.
  string business_product_id = 1;

  // The quantity of the product.
  int32 quantity = 2;

  // The unit price in cents of the product.
  // WARN: This value is stored because the unit price can change over time.
  int32 unit_price_in_cents = 3;
}

message Order {
  // The unique identifier of the order.
  optional string ref_id = 1;

  // The id of the client or the supplier if available.
  optional string from_id = 2;

  // Whether the order is from the client or the supplier.
  string is_client_order = 3;

  // The list of items in the order.
  repeated OrderItem order_items = 4;

  // The total price of the order in cents.
  int32 total_price_in_cents = 5;

  // The status of the order.
  OrderStatus status = 6;
}

message CreateOrderRequest {
  // The order to create.
  Order order = 1;

  // The name of the supplier.
  optional string supplier_name = 2;

  // The unique identifier of the business.
  string business_id = 3;
}

message CreateOrderResponse {
  // The unique identifier of the created order.
  string order_id = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).string.min_len = 3
  ];
}

message GetOrderRequest {
  // The unique identifier of the order to retrieve.
  string order_id = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).string.min_len = 3
  ];
}

message GetOrderResponse {
  // The retrieved order data.
  Order order = 1;

  // The date and time the order was created.
  string created_at = 2;

  // The date and time the order was last updated.
  optional string updated_at = 3;

}

message DeleteOrderRequest {
  // The unique identifier of the order to delete.
  string order_id = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).string.min_len = 3
  ];
}

message DeleteOrderResponse {
  // Whether the order was successfully deleted.
  bool success = 1;
}

service OrderService {
  // Creates a new order.
  rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse) {}

  // Gets an order by id.
  rpc GetOrder(GetOrderRequest) returns (GetOrderResponse) {}

  // Deletes an order.
  rpc DeleteOrder(DeleteOrderRequest) returns (DeleteOrderResponse) {}
}

