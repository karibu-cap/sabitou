syntax = "proto3";

package financial.v1;

import "buf/validate/validate.proto";
import "financial/v1/financial_utils.proto";
import "google/protobuf/timestamp.proto";

/**
 * DebitNote (Note de DÃ©bit)
 * Like a CreditNote but in reverse - YOU issue it TO supplier.
 * Used when returning goods to supplier or correcting purchase invoice.
 *
 * Fix: Items include batch_id.
 *
 * Example - You return defective goods to supplier:
 *   dn_id: "DEBIT-2025-001"
 *   related_invoice_id: "PINV-2025-001" (purchase invoice)
 *   debit_type: DEBIT_TYPE_RETURN
 *   issuer_id: "CMP-001" (your company)
 *   recipient_id: "CMP-002" (supplier)
 *   items: [5x PRD-001 @ 400000]
 *   total_amount: -2000000
 *
 * INVENTORY IMPACT: -5 PRD-001 (returned to supplier)
 * ACCOUNTING IMPACT: You owe supplier 2000000 less
 */
message DebitNote {
  string document_id = 1 [(buf.validate.field).required = true]; // "DEBIT-2025-001"
  string related_invoice_id = 2; // Purchase invoice being adjusted
  DebitNoteType debit_type = 3;
  string issuer_id = 4; // You (buyer)
  string recipient_id = 5; // Supplier
  DebitNoteStatus status = 6;
  repeated financial.v1.InvoiceLineItem items = 7;
  int64 total_amount = 8; // Negative value
  string currency = 9;
  bool has_inventory_impact = 10;
  string related_return_note_id = 11;
  google.protobuf.Timestamp issue_date = 12;
  string created_by_user_id = 13;
  string reason = 14;
  string notes = 15;
}

enum DebitNoteType {
  DEBIT_TYPE_UNSPECIFIED = 0;
  DEBIT_TYPE_RETURN = 1; // Returning goods to supplier
  DEBIT_TYPE_PRICE_DISPUTE = 2; // Invoice price was wrong
  DEBIT_TYPE_QUALITY_ISSUE = 3; // Goods defective
  DEBIT_TYPE_SHORTAGE = 4; // Received less than invoiced
}

enum DebitNoteStatus {
  DEBIT_STATUS_UNSPECIFIED = 0;
  DEBIT_STATUS_DRAFT = 1;
  DEBIT_STATUS_ISSUED = 2;
  DEBIT_STATUS_ACCEPTED = 3; // Supplier agreed
  DEBIT_STATUS_DISPUTED = 4; // Supplier disagrees
}
