syntax = "proto3";

package identity.v1;

import "buf/validate/validate.proto";

//
// ==========================
//   STORE PERMISSIONS
// ==========================
//

/// ----- PRODUCT ----- ///
message StoreProductPermission {
  bool read_product_in_inventory = 1;
  bool create_product_in_inventory = 2;
  bool update_product_in_inventory = 3;
  bool delete_product_in_inventory = 4;
}

/// ----- MEMBER ----- ///
message StoreMemberPermission {
  bool read_information = 1;
  bool invite_member = 2;
  bool update_member = 3;
  bool delete_member = 4;
}

/// ----- REPORT ----- ///
message StoreReportPermission {
  bool read_report = 1;
}

/// ----- ORDER ----- ///
message StoreOrderPermission {
  bool read_order = 1;
  bool create_order = 2;
}

/// ----- INVOICE ----- ///
message StoreInvoicePermission {
  bool read_invoice = 1;
  bool create_invoice = 2;
}

/// ----- SUPPLIER ----- ///
message StoreSupplierPermission {
  bool read_supplier = 1;
  bool create_supplier = 2;
  bool update_supplier = 3;
  bool delete_supplier = 4;
}

/// ----- TRANSACTION ----- ///
message StoreTransactionPermission {
  bool read_transaction = 1;
  bool create_transaction = 2;
  bool update_transaction = 3;
}

/// ----- STORE PERMISSIONS (AGGREGATOR) ----- ///
message StorePermissions {
  StoreProductPermission product = 1;
  StoreMemberPermission member = 2;
  StoreReportPermission report = 3;
  StoreOrderPermission order = 4;
  StoreInvoicePermission invoice = 5;
  StoreSupplierPermission supplier = 6;
  StoreTransactionPermission transaction = 7;
}

//
// ==========================
//   REQUESTS
// ==========================
//

message CreateStorePermissionRequest {
  StorePermissions permissions = 1;
  string store_id = 2 [
    (buf.validate.field).required = true,
    (buf.validate.field).string.min_len = 3
  ];
}

message UpdateStorePermissionRequest {
  StorePermissions permissions = 1;
  string store_permission_id = 2 [
    (buf.validate.field).required = true,
    (buf.validate.field).string.min_len = 3
  ];
}

message DeleteStorePermissionRequest {
  string store_permission_id = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).string.min_len = 3
  ];
}

message CheckStorePermissionRequest {
  string user_id = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).string.min_len = 3
  ];

  string store_id = 2 [
    (buf.validate.field).required = true,
    (buf.validate.field).string.min_len = 3
  ];

  // Example: "product.create_product_in_inventory"
  string permission_field = 3;
}

//
// ==========================
//   RESPONSES
// ==========================
//

message SuccessResponse {
  bool success = 1;
}

message CheckStorePermissionResponse {
  bool has_permission = 1;
}

//
// ==========================
//   SERVICE
// ==========================
//

service PermissionService {
  // Create store permission
  rpc CreateStorePermission(CreateStorePermissionRequest) returns (SuccessResponse) {}

  // Update store permission
  rpc UpdateStorePermission(UpdateStorePermissionRequest) returns (SuccessResponse) {}

  // Delete store permission
  rpc DeleteStorePermission(DeleteStorePermissionRequest) returns (SuccessResponse) {}

  // Check if a user has a store permission
  rpc CheckStorePermission(CheckStorePermissionRequest) returns (CheckStorePermissionResponse) {}
}
