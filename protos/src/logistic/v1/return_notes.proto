syntax = "proto3";

package logistic.v1;

import "buf/validate/validate.proto";
import "google/protobuf/timestamp.proto";
import "inventory/v1/category.proto";

/**
 * ReturnNote (Bon de Retour)
 * Logistics document for goods coming BACK.
 * Can be customer returning to you OR you returning to supplier.
 *
 * Fix: ReturnLineItem now includes batch_id for returning specific lots.
 *
 * Example - Customer returns:
 *   return_id: "RET-2025-001"
 *   return_type: RETURN_TYPE_CUSTOMER_TO_SELLER
 *   from_id: "CMP-003" (customer)
 *   to_id: "WH-001" (your warehouse)
 *   related_delivery_note_id: "DN-2025-001"
 *   items: [2x PRD-001]
 *   reason: "Defective"
 *
 * INVENTORY IMPACT: +2 PRD-001 in WH-001
 */
message ReturnNote {
  string document_id = 1 [(buf.validate.field).required = true]; // "RET-2025-001"
  ReturnType return_type = 2;
  string from_id = 3; // Who's returning
  string to_id = 4; // Where it goes
  string related_delivery_note_id = 5; // Original delivery
  string related_invoice_id = 6; // Original invoice
  ReturnNoteStatus status = 7;
  repeated ReturnLineItem items = 8;
  string reason = 9; // Why returned
  google.protobuf.Timestamp received_at = 10;
  string received_by_user_id = 11;
  string notes = 12;
}

enum ReturnType {
  RETURN_TYPE_UNSPECIFIED = 0;
  RETURN_TYPE_CUSTOMER_TO_SELLER = 1; // Customer returns to you
  RETURN_TYPE_SELLER_TO_SUPPLIER = 2; // You return to supplier
}

enum ReturnNoteStatus {
  RETURN_STATUS_UNSPECIFIED = 0;
  RETURN_STATUS_PENDING = 1; // Return requested
  RETURN_STATUS_APPROVED = 2; // Return authorized
  RETURN_STATUS_IN_TRANSIT = 3; // Being shipped back
  RETURN_STATUS_RECEIVED = 4; // Arrived and inspected
  RETURN_STATUS_REJECTED = 5; // Return not accepted
}

/**
 * ReturnLineItem shows what's being returned and its condition.
 *
 * Fix: Added batch_id to identify the specific lot being returned.
 */
message ReturnLineItem {
  string product_id = 1;
  inventory.v1.Internationalized product_name = 2;
  double quantity = 3;
  ReturnCondition condition = 4;
  string condition_notes = 5; // Detailed state description
  string batch_id = 6; // Specific batch/lot returned
}

enum ReturnCondition {
  RETURN_CONDITION_UNSPECIFIED = 0;
  RETURN_CONDITION_NEW = 1; // Unopened, resalable
  RETURN_CONDITION_USED_GOOD = 2; // Used but functional
  RETURN_CONDITION_DAMAGED = 3; // Not resalable
  RETURN_CONDITION_DEFECTIVE = 4; // Manufacturing defect
}

service ReturnService {
  // Create a return note (customer returning to you)
  rpc CreateReturn(CreateReturnRequest) returns (CreateReturnResponse);
}

message CreateReturnRequest {
  string from_company_id = 1; // Customer or your company
  string to_warehouse_id = 2; // Your warehouse 
  string related_delivery_note_id = 3;
  string related_invoice_id = 4;
  repeated ReturnLineItem items = 5;
  string reason = 6;
  string received_by_user_id = 7;
}

message CreateReturnResponse {
  string return_id = 1;
  ReturnNote return_note = 2;
  repeated string inventory_transaction_ids = 3;
  bool requires_credit_note = 4;
  string message = 5;
}
