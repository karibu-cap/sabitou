syntax = "proto3";

package payments.v1;

import "buf/validate/validate.proto";
import "financial/v1/invoice.proto";
import "google/protobuf/timestamp.proto";

/**
 * Payment represents money transfer between parties.
 * Links to invoices to track what's been paid.
 *
 * Example:
 *   payment_id: "PAY-2025-001"
 *   payer_id: "CMP-003" (customer)
 *   receiver: "CMP-001" (your company)
 *   amount: 5400000
 *   payment_method: PAYMENT_METHOD_BANK_TRANSFER
 *   status: PAYMENT_STATUS_COMPLETED
 */
message Payment {
  string document_id = 1 [(buf.validate.field).required = true]; // "PAY-2025-001"
  string payer_id = 2;
  // Can be a customer phone number or account number.
  string receiver = 3;
  double amount = 4;
  string currency = 5;
  // The warehouse id. in general it's the warehouse of the store.
  string warehouse_id = 6;
  payments.v1.PaymentMethod payment_method = 7;
  PaymentStatus status = 8;
  google.protobuf.Timestamp payment_date = 9;
  optional string reference_number = 10;
  string created_by_user_id = 11;
  optional string notes = 12;
}

enum PaymentStatus {
  PAYMENT_STATUS_UNSPECIFIED = 0;
  PAYMENT_STATUS_PENDING = 1;
  PAYMENT_STATUS_COMPLETED = 2;
  PAYMENT_STATUS_FAILED = 3;
}

enum PaymentMethod {
  PAYMENT_METHOD_UNSPECIFIED = 0;
  PAYMENT_METHOD_CASH = 1; // Physical cash
  PAYMENT_METHOD_CREDIT_CARD = 2; // Card payment
  PAYMENT_METHOD_MOBILE_MONEY = 3; // MTN, Orange Money, etc.
  PAYMENT_METHOD_VOUCHER = 4; // payment with voucher
  PAYMENT_METHOD_ORANGE_MONEY = 5; // Orange Money
  PAYMENT_METHOD_MTN_MONEY = 6; // MTN Money
}

service PaymentService {
  // Record a payment
  rpc CreatePayment(CreatePaymentRequest) returns (CreatePaymentResponse);

  // Get payment details
  rpc GetPayment(GetPaymentRequest) returns (GetPaymentResponse);

  // List payments with filtering
  rpc ListPayments(ListPaymentsRequest) returns (ListPaymentsResponse);
}

message CreatePaymentRequest {
  string payer_id = 1;
  string receiver = 2;
  double amount = 3;
  string currency = 4;
  PaymentMethod payment_method = 5;
  optional string reference_number = 6;
  optional string notes = 7;
}

message CreatePaymentResponse {
  Payment payment = 1;
}

message GetPaymentRequest {
  string payment_id = 1;
}

message GetPaymentResponse {
  Payment payment = 1;
  financial.v1.Invoice related_invoice = 2;
}

message ListPaymentsRequest {
  string warehouse_id = 1;
  google.protobuf.Timestamp start_date = 2;
  google.protobuf.Timestamp end_date = 3;
  int32 page_size = 4;
  int32 page_number = 5;
}

message ListPaymentsResponse {
  repeated Payment payments = 1;
  int32 total_count = 2;
  double total_amount = 3;
}
