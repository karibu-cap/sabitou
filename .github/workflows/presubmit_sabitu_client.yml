name: Sabitu Client Presubmit

on:
  workflow_call:
    secrets:
      SABITOU_CLIENT_TOKEN_WRITE_CONTENTS:
        required: true
        description: "The GitHub token for create new workflow runs"

env:
  FLUTTER_SDK_VERSION: 3.24.3

jobs:
  build-web:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      # Install pre-requisites.
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2.12.0
        with:
          flutter-version: ${{ env.FLUTTER_SDK_VERSION }}
          cache: true

      # Build the customers web app.
      - run: ./scripts/build_web_app.sh sabitou_clients

  unit-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      # Install pre-requisites.
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2.12.0
        with:
          flutter-version: ${{ env.FLUTTER_SDK_VERSION }}
          cache: true

      # Delete all existing coverage files.
      - run: find . -name \*lcov.info -type f -delete

      # Run unit tests on all packages that contain tests.
      - run: ./scripts/run_dart_tests.sh sabitou_clients

      # Upload Coverage to coveralls.io.
      - name: Upload Coverage to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          flag-name: sabitou_clients
          base-path: sabitou_clients
          path-to-lcov: sabitou_clients/coverage/lcov.info
          parallel: true
          debug: true

      # Store the failures images as artifacts.
      # This allows us to easily debug failures in pipelines.
      - uses: actions/upload-artifact@v3
        with:
          name: goldens-failures
          path: "sabitou_clients/**/failures/*.png"
          if-no-files-found: ignore

  generate-goldens:
    needs: unit-tests
    if: ${{ always() && (needs.unit-tests.result=='failure') }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      # Install pre-requisites.
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2.12.0
        with:
          flutter-version: ${{ env.FLUTTER_SDK_VERSION }}
          cache: true

      # Generate golden screenshots.
      - run: ./scripts/generate_goldens.sh sabitou_clients

      # Store the golden images as artifacts.
      # This allows us to update the goldens with the ones
      # generated on the pipeline.
      - uses: actions/upload-artifact@v4
        with:
          name: goldens-sabitou_clients
          path: "sabitou_clients/**/goldens/*.png"
          if-no-files-found: ignore

  update-goldens:
    needs: generate-goldens
    if: ${{ always() && (needs.generate-goldens.result=='success') }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      # Install pre-requisites.
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.SABITOU_CLIENT_TOKEN_WRITE_CONTENTS }}

      - uses: subosito/flutter-action@v2.12.0
        with:
          flutter-version: ${{ env.FLUTTER_SDK_VERSION }}
          cache: true

      # Download golden screenshots.
      - uses: actions/download-artifact@v4
        with:
          name: goldens-sabitou_clients
          path: new-goldens-sabitou_clients
          merge-multiple: true

      # Update golden screenshots.
      - name: Update Goldens
        id: update-goldens
        run: |
          set -x
          chmod +x ./scripts/update_goldens.sh
          ./scripts/update_goldens.sh sabitou_clients new-goldens-sabitou_clients

      - name: commit and push the change file
        uses: stefanzweifel/git-auto-commit-action@v5
        id: auto-commit-action
        with:
          commit_message: Update the goldens
          commit_user_name: GitHub Actions
          commit_user_email: sabitu-client-update-golens-bot@users.noreply.github.com
          file_pattern: "."

      - name: "Run if changes have been detected"
        if: steps.auto-commit-action.outputs.changes_detected == 'true'
        run: echo "Changes!"

      - name: "Run if no changes have been detected"
        if: steps.auto-commit-action.outputs.changes_detected == 'false'
        run: echo "No Changes!"

  dart-format:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      # Install pre-requisites.
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2.12.0
        with:
          flutter-version: ${{ env.FLUTTER_SDK_VERSION }}
          cache: true

      # Validate that our code has a consistent format.
      - run: ./scripts/run_dart_format.sh sabitou_clients
