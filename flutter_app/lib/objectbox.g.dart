// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'entities/global_product_obx.dart';
import 'entities/product_category_obx.dart';
import 'entities/store_product_obx.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
    id: const obx_int.IdUid(1, 3263316969890972502),
    name: 'StoreProductObx',
    lastPropertyId: const obx_int.IdUid(9, 6617303716512172968),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 8268870558744898213),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 2989663027621969539),
        name: 'refId',
        type: 9,
        flags: 2080,
        indexId: const obx_int.IdUid(1, 6936822788710816425),
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 3291410406225463638),
        name: 'storeId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 2807120940658079205),
        name: 'globalProductId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 3686976382154337447),
        name: 'price',
        type: 6,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 7015301931247717992),
        name: 'stockQuantity',
        type: 6,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 6046871898520374977),
        name: 'minStockThreshold',
        type: 6,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 8488434664057395678),
        name: 'supplierId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 6617303716512172968),
        name: 'imagesLinksIds',
        type: 30,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(2, 1028318294291256164),
    name: 'GlobalProductObx',
    lastPropertyId: const obx_int.IdUid(7, 2215789761340294862),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 6224669373485302065),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 3859994609953599208),
        name: 'refId',
        type: 9,
        flags: 2080,
        indexId: const obx_int.IdUid(2, 7627644893617675365),
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 432237928336167505),
        name: 'name',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 4477642393174021696),
        name: 'description',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 3768242238335623498),
        name: 'barCodeValue',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 5145697489341837266),
        name: 'imagesLinksIds',
        type: 30,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 2215789761340294862),
        name: 'categoriesIds',
        type: 30,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(3, 7614225135537674745),
    name: 'ProductCategoryObx',
    lastPropertyId: const obx_int.IdUid(3, 319945649765260537),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 2300454378466320280),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 3370026003075888623),
        name: 'refId',
        type: 9,
        flags: 2080,
        indexId: const obx_int.IdUid(3, 8352147871574794854),
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 319945649765260537),
        name: 'name',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore({
  String? directory,
  int? maxDBSizeInKB,
  int? maxDataSizeInKB,
  int? fileMode,
  int? maxReaders,
  bool queriesCaseSensitiveDefault = true,
  String? macosApplicationGroup,
}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(
    getObjectBoxModel(),
    directory: directory ?? (await defaultStoreDirectory()).path,
    maxDBSizeInKB: maxDBSizeInKB,
    maxDataSizeInKB: maxDataSizeInKB,
    fileMode: fileMode,
    maxReaders: maxReaders,
    queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
    macosApplicationGroup: macosApplicationGroup,
  );
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
    entities: _entities,
    lastEntityId: const obx_int.IdUid(3, 7614225135537674745),
    lastIndexId: const obx_int.IdUid(3, 8352147871574794854),
    lastRelationId: const obx_int.IdUid(0, 0),
    lastSequenceId: const obx_int.IdUid(0, 0),
    retiredEntityUids: const [],
    retiredIndexUids: const [],
    retiredPropertyUids: const [],
    retiredRelationUids: const [],
    modelVersion: 5,
    modelVersionParserMinimum: 5,
    version: 1,
  );

  final bindings = <Type, obx_int.EntityDefinition>{
    StoreProductObx: obx_int.EntityDefinition<StoreProductObx>(
      model: _entities[0],
      toOneRelations: (StoreProductObx object) => [],
      toManyRelations: (StoreProductObx object) => {},
      getId: (StoreProductObx object) => object.id,
      setId: (StoreProductObx object, int id) {
        object.id = id;
      },
      objectToFB: (StoreProductObx object, fb.Builder fbb) {
        final refIdOffset = fbb.writeString(object.refId);
        final storeIdOffset = fbb.writeString(object.storeId);
        final globalProductIdOffset = fbb.writeString(object.globalProductId);
        final supplierIdOffset = object.supplierId == null
            ? null
            : fbb.writeString(object.supplierId!);
        final imagesLinksIdsOffset = object.imagesLinksIds == null
            ? null
            : fbb.writeList(
                object.imagesLinksIds!
                    .map(fbb.writeString)
                    .toList(growable: false),
              );
        fbb.startTable(10);
        fbb.addInt64(0, object.id);
        fbb.addOffset(1, refIdOffset);
        fbb.addOffset(2, storeIdOffset);
        fbb.addOffset(3, globalProductIdOffset);
        fbb.addInt64(4, object.price);
        fbb.addInt64(5, object.stockQuantity);
        fbb.addInt64(6, object.minStockThreshold);
        fbb.addOffset(7, supplierIdOffset);
        fbb.addOffset(8, imagesLinksIdsOffset);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final refIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 6, '');
        final storeIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 8, '');
        final globalProductIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 10, '');
        final stockQuantityParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          14,
          0,
        );
        final minStockThresholdParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          16,
          0,
        );
        final priceParam = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          12,
        );
        final imagesLinksIdsParam = const fb.ListReader<String>(
          fb.StringReader(asciiOptimization: true),
          lazy: false,
        ).vTableGetNullable(buffer, rootOffset, 20);
        final supplierIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 18);
        final object = StoreProductObx(
          refId: refIdParam,
          storeId: storeIdParam,
          globalProductId: globalProductIdParam,
          stockQuantity: stockQuantityParam,
          minStockThreshold: minStockThresholdParam,
          price: priceParam,
          imagesLinksIds: imagesLinksIdsParam,
          supplierId: supplierIdParam,
        )..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

        return object;
      },
    ),
    GlobalProductObx: obx_int.EntityDefinition<GlobalProductObx>(
      model: _entities[1],
      toOneRelations: (GlobalProductObx object) => [],
      toManyRelations: (GlobalProductObx object) => {},
      getId: (GlobalProductObx object) => object.id,
      setId: (GlobalProductObx object, int id) {
        object.id = id;
      },
      objectToFB: (GlobalProductObx object, fb.Builder fbb) {
        final refIdOffset = fbb.writeString(object.refId);
        final nameOffset = fbb.writeString(object.name);
        final descriptionOffset = object.description == null
            ? null
            : fbb.writeString(object.description!);
        final barCodeValueOffset = object.barCodeValue == null
            ? null
            : fbb.writeString(object.barCodeValue!);
        final imagesLinksIdsOffset = object.imagesLinksIds == null
            ? null
            : fbb.writeList(
                object.imagesLinksIds!
                    .map(fbb.writeString)
                    .toList(growable: false),
              );
        final categoriesIdsOffset = object.categoriesIds == null
            ? null
            : fbb.writeList(
                object.categoriesIds!
                    .map(fbb.writeString)
                    .toList(growable: false),
              );
        fbb.startTable(8);
        fbb.addInt64(0, object.id);
        fbb.addOffset(1, refIdOffset);
        fbb.addOffset(2, nameOffset);
        fbb.addOffset(3, descriptionOffset);
        fbb.addOffset(4, barCodeValueOffset);
        fbb.addOffset(5, imagesLinksIdsOffset);
        fbb.addOffset(6, categoriesIdsOffset);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final refIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 6, '');
        final nameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 8, '');
        final descriptionParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 10);
        final barCodeValueParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 12);
        final imagesLinksIdsParam = const fb.ListReader<String>(
          fb.StringReader(asciiOptimization: true),
          lazy: false,
        ).vTableGetNullable(buffer, rootOffset, 14);
        final categoriesIdsParam = const fb.ListReader<String>(
          fb.StringReader(asciiOptimization: true),
          lazy: false,
        ).vTableGetNullable(buffer, rootOffset, 16);
        final object = GlobalProductObx(
          refId: refIdParam,
          name: nameParam,
          description: descriptionParam,
          barCodeValue: barCodeValueParam,
          imagesLinksIds: imagesLinksIdsParam,
          categoriesIds: categoriesIdsParam,
        )..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

        return object;
      },
    ),
    ProductCategoryObx: obx_int.EntityDefinition<ProductCategoryObx>(
      model: _entities[2],
      toOneRelations: (ProductCategoryObx object) => [],
      toManyRelations: (ProductCategoryObx object) => {},
      getId: (ProductCategoryObx object) => object.id,
      setId: (ProductCategoryObx object, int id) {
        object.id = id;
      },
      objectToFB: (ProductCategoryObx object, fb.Builder fbb) {
        final refIdOffset = fbb.writeString(object.refId);
        final nameOffset = fbb.writeString(object.name);
        fbb.startTable(4);
        fbb.addInt64(0, object.id);
        fbb.addOffset(1, refIdOffset);
        fbb.addOffset(2, nameOffset);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final refIdParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 6, '');
        final nameParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 8, '');
        final object = ProductCategoryObx(refId: refIdParam, name: nameParam)
          ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

        return object;
      },
    ),
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [StoreProductObx] entity fields to define ObjectBox queries.
class StoreProductObx_ {
  /// See [StoreProductObx.id].
  static final id = obx.QueryIntegerProperty<StoreProductObx>(
    _entities[0].properties[0],
  );

  /// See [StoreProductObx.refId].
  static final refId = obx.QueryStringProperty<StoreProductObx>(
    _entities[0].properties[1],
  );

  /// See [StoreProductObx.storeId].
  static final storeId = obx.QueryStringProperty<StoreProductObx>(
    _entities[0].properties[2],
  );

  /// See [StoreProductObx.globalProductId].
  static final globalProductId = obx.QueryStringProperty<StoreProductObx>(
    _entities[0].properties[3],
  );

  /// See [StoreProductObx.price].
  static final price = obx.QueryIntegerProperty<StoreProductObx>(
    _entities[0].properties[4],
  );

  /// See [StoreProductObx.stockQuantity].
  static final stockQuantity = obx.QueryIntegerProperty<StoreProductObx>(
    _entities[0].properties[5],
  );

  /// See [StoreProductObx.minStockThreshold].
  static final minStockThreshold = obx.QueryIntegerProperty<StoreProductObx>(
    _entities[0].properties[6],
  );

  /// See [StoreProductObx.supplierId].
  static final supplierId = obx.QueryStringProperty<StoreProductObx>(
    _entities[0].properties[7],
  );

  /// See [StoreProductObx.imagesLinksIds].
  static final imagesLinksIds = obx.QueryStringVectorProperty<StoreProductObx>(
    _entities[0].properties[8],
  );
}

/// [GlobalProductObx] entity fields to define ObjectBox queries.
class GlobalProductObx_ {
  /// See [GlobalProductObx.id].
  static final id = obx.QueryIntegerProperty<GlobalProductObx>(
    _entities[1].properties[0],
  );

  /// See [GlobalProductObx.refId].
  static final refId = obx.QueryStringProperty<GlobalProductObx>(
    _entities[1].properties[1],
  );

  /// See [GlobalProductObx.name].
  static final name = obx.QueryStringProperty<GlobalProductObx>(
    _entities[1].properties[2],
  );

  /// See [GlobalProductObx.description].
  static final description = obx.QueryStringProperty<GlobalProductObx>(
    _entities[1].properties[3],
  );

  /// See [GlobalProductObx.barCodeValue].
  static final barCodeValue = obx.QueryStringProperty<GlobalProductObx>(
    _entities[1].properties[4],
  );

  /// See [GlobalProductObx.imagesLinksIds].
  static final imagesLinksIds = obx.QueryStringVectorProperty<GlobalProductObx>(
    _entities[1].properties[5],
  );

  /// See [GlobalProductObx.categoriesIds].
  static final categoriesIds = obx.QueryStringVectorProperty<GlobalProductObx>(
    _entities[1].properties[6],
  );
}

/// [ProductCategoryObx] entity fields to define ObjectBox queries.
class ProductCategoryObx_ {
  /// See [ProductCategoryObx.id].
  static final id = obx.QueryIntegerProperty<ProductCategoryObx>(
    _entities[2].properties[0],
  );

  /// See [ProductCategoryObx.refId].
  static final refId = obx.QueryStringProperty<ProductCategoryObx>(
    _entities[2].properties[1],
  );

  /// See [ProductCategoryObx.name].
  static final name = obx.QueryStringProperty<ProductCategoryObx>(
    _entities[2].properties[2],
  );
}
